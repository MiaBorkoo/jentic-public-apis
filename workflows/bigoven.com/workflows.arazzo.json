{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/bigoven.com/main/partner/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "find-recipe-and-add-to-grocery-list",
      "summary": "Search for recipes based on keywords or ingredients, view the details of a chosen recipe, and add its ingredients to the user's grocery list.",
      "description": "Search for recipes based on keywords or ingredients, view the details of a chosen recipe, and add its ingredients to the user's grocery list.",
      "inputs": {
        "type": "object",
        "properties": {
          "any_kw": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "coll": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "title_kw": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "photos": {
            "type": "string"
          },
          "boostmine": {
            "type": "string"
          },
          "include_cat": {
            "type": "string"
          },
          "exclude_cat": {
            "type": "string"
          },
          "include_primarycat": {
            "type": "string"
          },
          "exclude_primarycat": {
            "type": "string"
          },
          "include_ing": {
            "type": "string"
          },
          "exclude_ing": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "db": {
            "type": "string"
          },
          "userset": {
            "type": "string"
          },
          "servingsMin": {
            "type": "string"
          },
          "totalMins": {
            "type": "string"
          },
          "maxIngredients": {
            "type": "string"
          },
          "minIngredients": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "vtn": {
            "type": "string"
          },
          "vgn": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          },
          "glf": {
            "type": "string"
          },
          "ntf": {
            "type": "string"
          },
          "dyf": {
            "type": "string"
          },
          "sff": {
            "type": "string"
          },
          "slf": {
            "type": "string"
          },
          "tnf": {
            "type": "string"
          },
          "wmf": {
            "type": "string"
          },
          "rmf": {
            "type": "string"
          },
          "cps": {
            "type": "string"
          },
          "champion": {
            "type": "string"
          },
          "synonyms": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "prefetch": {
            "type": "string"
          },
          "markAsPending": {
            "type": "string"
          },
          "scale": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-recipes",
          "description": "Search for recipes using various criteria like keywords, ingredients, categories, etc.",
          "operationId": "Recipe_RecipeSearch",
          "parameters": [
            {
              "name": "any_kw",
              "in": "query",
              "value": "$inputs.any_kw"
            },
            {
              "name": "folder",
              "in": "query",
              "value": "$inputs.folder"
            },
            {
              "name": "coll",
              "in": "query",
              "value": "$inputs.coll"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "title_kw",
              "in": "query",
              "value": "$inputs.title_kw"
            },
            {
              "name": "userId",
              "in": "query",
              "value": "$inputs.userId"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "token",
              "in": "query",
              "value": "$inputs.token"
            },
            {
              "name": "photos",
              "in": "query",
              "value": "$inputs.photos"
            },
            {
              "name": "boostmine",
              "in": "query",
              "value": "$inputs.boostmine"
            },
            {
              "name": "include_cat",
              "in": "query",
              "value": "$inputs.include_cat"
            },
            {
              "name": "exclude_cat",
              "in": "query",
              "value": "$inputs.exclude_cat"
            },
            {
              "name": "include_primarycat",
              "in": "query",
              "value": "$inputs.include_primarycat"
            },
            {
              "name": "exclude_primarycat",
              "in": "query",
              "value": "$inputs.exclude_primarycat"
            },
            {
              "name": "include_ing",
              "in": "query",
              "value": "$inputs.include_ing"
            },
            {
              "name": "exclude_ing",
              "in": "query",
              "value": "$inputs.exclude_ing"
            },
            {
              "name": "cuisine",
              "in": "query",
              "value": "$inputs.cuisine"
            },
            {
              "name": "db",
              "in": "query",
              "value": "$inputs.db"
            },
            {
              "name": "userset",
              "in": "query",
              "value": "$inputs.userset"
            },
            {
              "name": "servingsMin",
              "in": "query",
              "value": "$inputs.servingsMin"
            },
            {
              "name": "totalMins",
              "in": "query",
              "value": "$inputs.totalMins"
            },
            {
              "name": "maxIngredients",
              "in": "query",
              "value": "$inputs.maxIngredients"
            },
            {
              "name": "minIngredients",
              "in": "query",
              "value": "$inputs.minIngredients"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "vtn",
              "in": "query",
              "value": "$inputs.vtn"
            },
            {
              "name": "vgn",
              "in": "query",
              "value": "$inputs.vgn"
            },
            {
              "name": "chs",
              "in": "query",
              "value": "$inputs.chs"
            },
            {
              "name": "glf",
              "in": "query",
              "value": "$inputs.glf"
            },
            {
              "name": "ntf",
              "in": "query",
              "value": "$inputs.ntf"
            },
            {
              "name": "dyf",
              "in": "query",
              "value": "$inputs.dyf"
            },
            {
              "name": "sff",
              "in": "query",
              "value": "$inputs.sff"
            },
            {
              "name": "slf",
              "in": "query",
              "value": "$inputs.slf"
            },
            {
              "name": "tnf",
              "in": "query",
              "value": "$inputs.tnf"
            },
            {
              "name": "wmf",
              "in": "query",
              "value": "$inputs.wmf"
            },
            {
              "name": "rmf",
              "in": "query",
              "value": "$inputs.rmf"
            },
            {
              "name": "cps",
              "in": "query",
              "value": "$inputs.cps"
            },
            {
              "name": "champion",
              "in": "query",
              "value": "$inputs.champion"
            },
            {
              "name": "synonyms",
              "in": "query",
              "value": "$inputs.synonyms"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeSearchResult": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-details",
          "description": "Retrieve the full details of a specific recipe, including ingredients and instructions.",
          "operationId": "Recipe_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-recipes.outputs.RecipeSearchResult.Results[0].RecipeID"
            },
            {
              "name": "prefetch",
              "in": "query",
              "value": "$inputs.prefetch"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Recipe": "$response.body"
          }
        },
        {
          "stepId": "add-recipe-to-grocery-list",
          "description": "Add all ingredients from a specific recipe to the authenticated user's grocery list.",
          "operationId": "GroceryList_AddRecipe",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "recipeId": "$steps.get-recipe-details.outputs.Recipe.RecipeID",
              "markAsPending": "$inputs.markAsPending",
              "scale": "$inputs.scale"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "StatusObject": "$response.body"
          }
        },
        {
          "stepId": "get-grocery-list",
          "description": "Retrieve the updated grocery list for the authenticated user.",
          "operationId": "GroceryList_Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "GroceryList": "$response.body"
          }
        }
      ],
      "outputs": {
        "RecipeSearchResult": "$steps.search-recipes.outputs.RecipeSearchResult",
        "Recipe": "$steps.get-recipe-details.outputs.Recipe",
        "StatusObject": "$steps.add-recipe-to-grocery-list.outputs.StatusObject",
        "GroceryList": "$steps.get-grocery-list.outputs.GroceryList"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "add-manual-items-and-organize-grocery-list",
      "summary": "Manually add items to the grocery list, update their details (like quantity, unit, department), and view the organized list.",
      "description": "Manually add items to the grocery list, update their details (like quantity, unit, department), and view the organized list.",
      "inputs": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "ischecked": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-initial-grocery-list",
          "description": "Retrieve the current grocery list for the authenticated user.",
          "operationId": "GroceryList_Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "GroceryList": "$response.body"
          }
        },
        {
          "stepId": "add-manual-item",
          "description": "Add a single item to the grocery list using free-form text.",
          "operationId": "GroceryList_Post",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "text": "$inputs.text"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ShoppingListLine": "$response.body"
          }
        },
        {
          "stepId": "update-item-details",
          "description": "Update the details (name, quantity, unit, notes, department, checked status) of the newly added grocery item.",
          "operationId": "GroceryList_GroceryListItemGuid",
          "parameters": [
            {
              "name": "guid",
              "in": "path",
              "value": "$steps.add-manual-item.outputs.ShoppingListLine.GUID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "guid": "$steps.add-manual-item.outputs.ShoppingListLine.GUID",
              "department": "$inputs.department",
              "ischecked": "$inputs.ischecked",
              "name": "$inputs.name",
              "notes": "$inputs.notes",
              "quantity": "$inputs.quantity",
              "unit": "$inputs.unit"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "StatusObject": "$response.body"
          }
        },
        {
          "stepId": "get-updated-grocery-list",
          "description": "Retrieve the updated and organized grocery list.",
          "operationId": "GroceryList_Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "GroceryList": "$response.body"
          }
        }
      ],
      "outputs": {
        "GroceryList": "$steps.get-updated-grocery-list.outputs.GroceryList",
        "ShoppingListLine": "$steps.add-manual-item.outputs.ShoppingListLine",
        "StatusObject": "$steps.update-item-details.outputs.StatusObject"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "browse-seasonal-collections-and-view-recipe",
      "summary": "Discover curated seasonal recipe collections, browse the recipes within a specific collection, and view the details of a selected recipe.",
      "description": "Discover curated seasonal recipe collections, browse the recipes within a specific collection, and view the details of a selected recipe.",
      "inputs": {
        "type": "object",
        "properties": {
          "test": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "sessionForLogging": {
            "type": "string"
          },
          "prefetch": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-collections",
          "description": "Get the list of current, seasonal recipe collections.",
          "operationId": "Collection_Collections",
          "parameters": [
            {
              "name": "test",
              "in": "query",
              "value": "$inputs.test"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "CollectionInfoList": "$response.body"
          }
        },
        {
          "stepId": "get-collection-recipes",
          "description": "Retrieve the list of recipes included in a specific collection.",
          "operationId": "Collection_GetCollection",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-collections.outputs.CollectionInfoList.ID"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "test",
              "in": "query",
              "value": "$inputs.test"
            },
            {
              "name": "sessionForLogging",
              "in": "query",
              "value": "$inputs.sessionForLogging"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeSearchResult": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-details",
          "description": "Retrieve the full details of a specific recipe from the collection.",
          "operationId": "Recipe_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-collection-recipes.outputs.RecipeSearchResult.Results[0].RecipeID"
            },
            {
              "name": "prefetch",
              "in": "query",
              "value": "$inputs.prefetch"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Recipe": "$response.body"
          }
        }
      ],
      "outputs": {
        "CollectionInfoList": "$steps.list-collections.outputs.CollectionInfoList",
        "RecipeSearchResult": "$steps.get-collection-recipes.outputs.RecipeSearchResult",
        "Recipe": "$steps.get-recipe-details.outputs.Recipe"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "review-a-recipe",
      "summary": "Find a recipe, view its details, and submit a review (rating and comments) for it. Then retrieve the submitted review.",
      "description": "Find a recipe, view its details, and submit a review (rating and comments) for it. Then retrieve the submitted review.",
      "inputs": {
        "type": "object",
        "properties": {
          "any_kw": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "coll": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "title_kw": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "photos": {
            "type": "string"
          },
          "boostmine": {
            "type": "string"
          },
          "include_cat": {
            "type": "string"
          },
          "exclude_cat": {
            "type": "string"
          },
          "include_primarycat": {
            "type": "string"
          },
          "exclude_primarycat": {
            "type": "string"
          },
          "include_ing": {
            "type": "string"
          },
          "exclude_ing": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "db": {
            "type": "string"
          },
          "userset": {
            "type": "string"
          },
          "servingsMin": {
            "type": "string"
          },
          "totalMins": {
            "type": "string"
          },
          "maxIngredients": {
            "type": "string"
          },
          "minIngredients": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "vtn": {
            "type": "string"
          },
          "vgn": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          },
          "glf": {
            "type": "string"
          },
          "ntf": {
            "type": "string"
          },
          "dyf": {
            "type": "string"
          },
          "sff": {
            "type": "string"
          },
          "slf": {
            "type": "string"
          },
          "tnf": {
            "type": "string"
          },
          "wmf": {
            "type": "string"
          },
          "rmf": {
            "type": "string"
          },
          "cps": {
            "type": "string"
          },
          "champion": {
            "type": "string"
          },
          "synonyms": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "prefetch": {
            "type": "string"
          },
          "recipeId": {
            "type": "string"
          },
          "ActiveMinutes": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "MakeAgain": {
            "type": "string"
          },
          "StarRating": {
            "type": "string"
          },
          "TotalMinutes": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-recipe-to-review",
          "description": "Search for a specific recipe to review.",
          "operationId": "Recipe_RecipeSearch",
          "parameters": [
            {
              "name": "any_kw",
              "in": "query",
              "value": "$inputs.any_kw"
            },
            {
              "name": "folder",
              "in": "query",
              "value": "$inputs.folder"
            },
            {
              "name": "coll",
              "in": "query",
              "value": "$inputs.coll"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "title_kw",
              "in": "query",
              "value": "$inputs.title_kw"
            },
            {
              "name": "userId",
              "in": "query",
              "value": "$inputs.userId"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "token",
              "in": "query",
              "value": "$inputs.token"
            },
            {
              "name": "photos",
              "in": "query",
              "value": "$inputs.photos"
            },
            {
              "name": "boostmine",
              "in": "query",
              "value": "$inputs.boostmine"
            },
            {
              "name": "include_cat",
              "in": "query",
              "value": "$inputs.include_cat"
            },
            {
              "name": "exclude_cat",
              "in": "query",
              "value": "$inputs.exclude_cat"
            },
            {
              "name": "include_primarycat",
              "in": "query",
              "value": "$inputs.include_primarycat"
            },
            {
              "name": "exclude_primarycat",
              "in": "query",
              "value": "$inputs.exclude_primarycat"
            },
            {
              "name": "include_ing",
              "in": "query",
              "value": "$inputs.include_ing"
            },
            {
              "name": "exclude_ing",
              "in": "query",
              "value": "$inputs.exclude_ing"
            },
            {
              "name": "cuisine",
              "in": "query",
              "value": "$inputs.cuisine"
            },
            {
              "name": "db",
              "in": "query",
              "value": "$inputs.db"
            },
            {
              "name": "userset",
              "in": "query",
              "value": "$inputs.userset"
            },
            {
              "name": "servingsMin",
              "in": "query",
              "value": "$inputs.servingsMin"
            },
            {
              "name": "totalMins",
              "in": "query",
              "value": "$inputs.totalMins"
            },
            {
              "name": "maxIngredients",
              "in": "query",
              "value": "$inputs.maxIngredients"
            },
            {
              "name": "minIngredients",
              "in": "query",
              "value": "$inputs.minIngredients"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "vtn",
              "in": "query",
              "value": "$inputs.vtn"
            },
            {
              "name": "vgn",
              "in": "query",
              "value": "$inputs.vgn"
            },
            {
              "name": "chs",
              "in": "query",
              "value": "$inputs.chs"
            },
            {
              "name": "glf",
              "in": "query",
              "value": "$inputs.glf"
            },
            {
              "name": "ntf",
              "in": "query",
              "value": "$inputs.ntf"
            },
            {
              "name": "dyf",
              "in": "query",
              "value": "$inputs.dyf"
            },
            {
              "name": "sff",
              "in": "query",
              "value": "$inputs.sff"
            },
            {
              "name": "slf",
              "in": "query",
              "value": "$inputs.slf"
            },
            {
              "name": "tnf",
              "in": "query",
              "value": "$inputs.tnf"
            },
            {
              "name": "wmf",
              "in": "query",
              "value": "$inputs.wmf"
            },
            {
              "name": "rmf",
              "in": "query",
              "value": "$inputs.rmf"
            },
            {
              "name": "cps",
              "in": "query",
              "value": "$inputs.cps"
            },
            {
              "name": "champion",
              "in": "query",
              "value": "$inputs.champion"
            },
            {
              "name": "synonyms",
              "in": "query",
              "value": "$inputs.synonyms"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeSearchResult": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-details-for-review",
          "description": "Retrieve the details of the recipe to confirm it's the correct one.",
          "operationId": "Recipe_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.find-recipe-to-review.outputs.RecipeSearchResult.Results[0].RecipeID"
            },
            {
              "name": "prefetch",
              "in": "query",
              "value": "$inputs.prefetch"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Recipe": "$response.body"
          }
        },
        {
          "stepId": "post-recipe-review",
          "description": "Submit a new review (rating, comment, etc.) for the recipe.",
          "operationId": "Review_Post",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.get-recipe-details-for-review.outputs.Recipe.RecipeID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "recipeId": "$steps.get-recipe-details-for-review.outputs.Recipe.RecipeID",
              "ActiveMinutes": "$inputs.ActiveMinutes",
              "Comment": "$inputs.Comment",
              "MakeAgain": "$inputs.MakeAgain",
              "StarRating": "$inputs.StarRating",
              "TotalMinutes": "$inputs.TotalMinutes"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "StatusObject": "$response.body"
          }
        },
        {
          "stepId": "get-my-review",
          "description": "Retrieve the review just submitted by the authenticated user for that recipe.",
          "operationId": "Review_Get",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.get-recipe-details-for-review.outputs.Recipe.RecipeID"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Review": "$response.body"
          }
        }
      ],
      "outputs": {
        "RecipeSearchResult": "$steps.find-recipe-to-review.outputs.RecipeSearchResult",
        "Recipe": "$steps.get-recipe-details-for-review.outputs.Recipe",
        "StatusObject": "$steps.post-recipe-review.outputs.StatusObject",
        "Review": "$steps.get-my-review.outputs.Review"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "add-and-manage-personal-recipe-notes",
      "summary": "Find one of the user's own recipes, add a personal note (e.g., variations tried), retrieve all notes for that recipe, and update the added note.",
      "description": "Find one of the user's own recipes, add a personal note (e.g., variations tried), retrieve all notes for that recipe, and update the added note.",
      "inputs": {
        "type": "object",
        "properties": {
          "any_kw": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "coll": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "title_kw": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "photos": {
            "type": "string"
          },
          "boostmine": {
            "type": "string"
          },
          "include_cat": {
            "type": "string"
          },
          "exclude_cat": {
            "type": "string"
          },
          "include_primarycat": {
            "type": "string"
          },
          "exclude_primarycat": {
            "type": "string"
          },
          "include_ing": {
            "type": "string"
          },
          "exclude_ing": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "db": {
            "type": "string"
          },
          "userset": {
            "type": "string"
          },
          "servingsMin": {
            "type": "string"
          },
          "totalMins": {
            "type": "string"
          },
          "maxIngredients": {
            "type": "string"
          },
          "minIngredients": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "vtn": {
            "type": "string"
          },
          "vgn": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          },
          "glf": {
            "type": "string"
          },
          "ntf": {
            "type": "string"
          },
          "dyf": {
            "type": "string"
          },
          "sff": {
            "type": "string"
          },
          "slf": {
            "type": "string"
          },
          "tnf": {
            "type": "string"
          },
          "wmf": {
            "type": "string"
          },
          "rmf": {
            "type": "string"
          },
          "cps": {
            "type": "string"
          },
          "champion": {
            "type": "string"
          },
          "synonyms": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "prefetch": {
            "type": "string"
          },
          "recipeId": {
            "type": "string"
          },
          "Date": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          },
          "People": {
            "type": "string"
          },
          "Variations": {
            "type": "string"
          },
          "noteId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-my-recipes",
          "description": "Search for recipes owned by the authenticated user.",
          "operationId": "Recipe_RecipeSearch",
          "parameters": [
            {
              "name": "any_kw",
              "in": "query",
              "value": "$inputs.any_kw"
            },
            {
              "name": "folder",
              "in": "query",
              "value": "$inputs.folder"
            },
            {
              "name": "coll",
              "in": "query",
              "value": "$inputs.coll"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "title_kw",
              "in": "query",
              "value": "$inputs.title_kw"
            },
            {
              "name": "userId",
              "in": "query",
              "value": "$inputs.userId"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "token",
              "in": "query",
              "value": "$inputs.token"
            },
            {
              "name": "photos",
              "in": "query",
              "value": "$inputs.photos"
            },
            {
              "name": "boostmine",
              "in": "query",
              "value": "$inputs.boostmine"
            },
            {
              "name": "include_cat",
              "in": "query",
              "value": "$inputs.include_cat"
            },
            {
              "name": "exclude_cat",
              "in": "query",
              "value": "$inputs.exclude_cat"
            },
            {
              "name": "include_primarycat",
              "in": "query",
              "value": "$inputs.include_primarycat"
            },
            {
              "name": "exclude_primarycat",
              "in": "query",
              "value": "$inputs.exclude_primarycat"
            },
            {
              "name": "include_ing",
              "in": "query",
              "value": "$inputs.include_ing"
            },
            {
              "name": "exclude_ing",
              "in": "query",
              "value": "$inputs.exclude_ing"
            },
            {
              "name": "cuisine",
              "in": "query",
              "value": "$inputs.cuisine"
            },
            {
              "name": "db",
              "in": "query",
              "value": "$inputs.db"
            },
            {
              "name": "userset",
              "in": "query",
              "value": "$inputs.userset"
            },
            {
              "name": "servingsMin",
              "in": "query",
              "value": "$inputs.servingsMin"
            },
            {
              "name": "totalMins",
              "in": "query",
              "value": "$inputs.totalMins"
            },
            {
              "name": "maxIngredients",
              "in": "query",
              "value": "$inputs.maxIngredients"
            },
            {
              "name": "minIngredients",
              "in": "query",
              "value": "$inputs.minIngredients"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "vtn",
              "in": "query",
              "value": "$inputs.vtn"
            },
            {
              "name": "vgn",
              "in": "query",
              "value": "$inputs.vgn"
            },
            {
              "name": "chs",
              "in": "query",
              "value": "$inputs.chs"
            },
            {
              "name": "glf",
              "in": "query",
              "value": "$inputs.glf"
            },
            {
              "name": "ntf",
              "in": "query",
              "value": "$inputs.ntf"
            },
            {
              "name": "dyf",
              "in": "query",
              "value": "$inputs.dyf"
            },
            {
              "name": "sff",
              "in": "query",
              "value": "$inputs.sff"
            },
            {
              "name": "slf",
              "in": "query",
              "value": "$inputs.slf"
            },
            {
              "name": "tnf",
              "in": "query",
              "value": "$inputs.tnf"
            },
            {
              "name": "wmf",
              "in": "query",
              "value": "$inputs.wmf"
            },
            {
              "name": "rmf",
              "in": "query",
              "value": "$inputs.rmf"
            },
            {
              "name": "cps",
              "in": "query",
              "value": "$inputs.cps"
            },
            {
              "name": "champion",
              "in": "query",
              "value": "$inputs.champion"
            },
            {
              "name": "synonyms",
              "in": "query",
              "value": "$inputs.synonyms"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeSearchResult": "$response.body"
          }
        },
        {
          "stepId": "get-my-recipe-details",
          "description": "Retrieve the details of a specific recipe owned by the user.",
          "operationId": "Recipe_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-my-recipes.outputs.RecipeSearchResult.Results[0].RecipeID"
            },
            {
              "name": "prefetch",
              "in": "query",
              "value": "$inputs.prefetch"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Recipe": "$response.body"
          }
        },
        {
          "stepId": "add-recipe-note",
          "description": "Add a new personal note to the selected recipe.",
          "operationId": "Note_Post",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.get-my-recipe-details.outputs.Recipe.RecipeID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "recipeId": "$steps.get-my-recipe-details.outputs.Recipe.RecipeID",
              "Date": "$inputs.Date",
              "Notes": "$inputs.Notes",
              "People": "$inputs.People",
              "Variations": "$inputs.Variations"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeNote": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-notes",
          "description": "Retrieve all personal notes associated with the recipe.",
          "operationId": "Note_GetNotes",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.get-my-recipe-details.outputs.Recipe.RecipeID"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeNoteList": "$response.body"
          }
        },
        {
          "stepId": "update-recipe-note",
          "description": "Update the content of the previously added note.",
          "operationId": "Note_Put",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.get-my-recipe-details.outputs.Recipe.RecipeID"
            },
            {
              "name": "noteId",
              "in": "path",
              "value": "$steps.add-recipe-note.outputs.RecipeNote.ID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "recipeId": "$steps.get-my-recipe-details.outputs.Recipe.RecipeID",
              "noteId": "$steps.add-recipe-note.outputs.RecipeNote.ID",
              "Date": "$inputs.Date",
              "Notes": "$inputs.Notes",
              "People": "$inputs.People",
              "Variations": "$inputs.Variations"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeNote": "$response.body"
          }
        }
      ],
      "outputs": {
        "RecipeSearchResult": "$steps.search-my-recipes.outputs.RecipeSearchResult",
        "Recipe": "$steps.get-my-recipe-details.outputs.Recipe",
        "RecipeNote": "$steps.update-recipe-note.outputs.RecipeNote",
        "RecipeNoteList": "$steps.get-recipe-notes.outputs.RecipeNoteList"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "add-a-new-recipe-with-photo",
      "summary": "Create a new recipe entry, upload a photo for it, and then retrieve the photos associated with that recipe.",
      "description": "Create a new recipe entry, upload a photo for it, and then retrieve the photos associated with that recipe.",
      "inputs": {
        "type": "object",
        "properties": {
          "recipeId": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-new-recipe",
          "description": "Add a new recipe with title, description, ingredients, instructions, etc.",
          "operationId": "Recipe_Post",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Recipe": "$response.body"
          }
        },
        {
          "stepId": "upload-recipe-photo",
          "description": "Upload an image file associated with the newly created recipe.",
          "operationId": "Images_UploadRecipeImage",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.add-new-recipe.outputs.Recipe.RecipeID"
            },
            {
              "name": "caption",
              "in": "query",
              "value": "$inputs.caption"
            },
            {
              "name": "lat",
              "in": "query",
              "value": "$inputs.lat"
            },
            {
              "name": "lng",
              "in": "query",
              "value": "$inputs.lng"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "StatusObject": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-photos",
          "description": "Retrieve the list of photos (including the one just uploaded) for the recipe.",
          "operationId": "Images_GetRecipePhotos",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.add-new-recipe.outputs.Recipe.RecipeID"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipePhotosResponse": "$response.body"
          }
        }
      ],
      "outputs": {
        "Recipe": "$steps.add-new-recipe.outputs.Recipe",
        "StatusObject": "$steps.upload-recipe-photo.outputs.StatusObject",
        "RecipePhotosResponse": "$steps.get-recipe-photos.outputs.RecipePhotosResponse"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "engage-with-recipe-reviews",
      "summary": "Find a recipe, view its reviews, retrieve replies for a specific review, and post a new reply to that review.",
      "description": "Find a recipe, view its reviews, retrieve replies for a specific review, and post a new reply to that review.",
      "inputs": {
        "type": "object",
        "properties": {
          "any_kw": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "coll": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "title_kw": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "photos": {
            "type": "string"
          },
          "boostmine": {
            "type": "string"
          },
          "include_cat": {
            "type": "string"
          },
          "exclude_cat": {
            "type": "string"
          },
          "include_primarycat": {
            "type": "string"
          },
          "exclude_primarycat": {
            "type": "string"
          },
          "include_ing": {
            "type": "string"
          },
          "exclude_ing": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "db": {
            "type": "string"
          },
          "userset": {
            "type": "string"
          },
          "servingsMin": {
            "type": "string"
          },
          "totalMins": {
            "type": "string"
          },
          "maxIngredients": {
            "type": "string"
          },
          "minIngredients": {
            "type": "string"
          },
          "rpp": {
            "type": "string"
          },
          "pg": {
            "type": "string"
          },
          "vtn": {
            "type": "string"
          },
          "vgn": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          },
          "glf": {
            "type": "string"
          },
          "ntf": {
            "type": "string"
          },
          "dyf": {
            "type": "string"
          },
          "sff": {
            "type": "string"
          },
          "slf": {
            "type": "string"
          },
          "tnf": {
            "type": "string"
          },
          "wmf": {
            "type": "string"
          },
          "rmf": {
            "type": "string"
          },
          "cps": {
            "type": "string"
          },
          "champion": {
            "type": "string"
          },
          "synonyms": {
            "type": "string"
          },
          "recipeId": {
            "type": "string"
          },
          "reviewId": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-recipe-for-engagement",
          "description": "Search for recipes.",
          "operationId": "Recipe_RecipeSearch",
          "parameters": [
            {
              "name": "any_kw",
              "in": "query",
              "value": "$inputs.any_kw"
            },
            {
              "name": "folder",
              "in": "query",
              "value": "$inputs.folder"
            },
            {
              "name": "coll",
              "in": "query",
              "value": "$inputs.coll"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "title_kw",
              "in": "query",
              "value": "$inputs.title_kw"
            },
            {
              "name": "userId",
              "in": "query",
              "value": "$inputs.userId"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "token",
              "in": "query",
              "value": "$inputs.token"
            },
            {
              "name": "photos",
              "in": "query",
              "value": "$inputs.photos"
            },
            {
              "name": "boostmine",
              "in": "query",
              "value": "$inputs.boostmine"
            },
            {
              "name": "include_cat",
              "in": "query",
              "value": "$inputs.include_cat"
            },
            {
              "name": "exclude_cat",
              "in": "query",
              "value": "$inputs.exclude_cat"
            },
            {
              "name": "include_primarycat",
              "in": "query",
              "value": "$inputs.include_primarycat"
            },
            {
              "name": "exclude_primarycat",
              "in": "query",
              "value": "$inputs.exclude_primarycat"
            },
            {
              "name": "include_ing",
              "in": "query",
              "value": "$inputs.include_ing"
            },
            {
              "name": "exclude_ing",
              "in": "query",
              "value": "$inputs.exclude_ing"
            },
            {
              "name": "cuisine",
              "in": "query",
              "value": "$inputs.cuisine"
            },
            {
              "name": "db",
              "in": "query",
              "value": "$inputs.db"
            },
            {
              "name": "userset",
              "in": "query",
              "value": "$inputs.userset"
            },
            {
              "name": "servingsMin",
              "in": "query",
              "value": "$inputs.servingsMin"
            },
            {
              "name": "totalMins",
              "in": "query",
              "value": "$inputs.totalMins"
            },
            {
              "name": "maxIngredients",
              "in": "query",
              "value": "$inputs.maxIngredients"
            },
            {
              "name": "minIngredients",
              "in": "query",
              "value": "$inputs.minIngredients"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "vtn",
              "in": "query",
              "value": "$inputs.vtn"
            },
            {
              "name": "vgn",
              "in": "query",
              "value": "$inputs.vgn"
            },
            {
              "name": "chs",
              "in": "query",
              "value": "$inputs.chs"
            },
            {
              "name": "glf",
              "in": "query",
              "value": "$inputs.glf"
            },
            {
              "name": "ntf",
              "in": "query",
              "value": "$inputs.ntf"
            },
            {
              "name": "dyf",
              "in": "query",
              "value": "$inputs.dyf"
            },
            {
              "name": "sff",
              "in": "query",
              "value": "$inputs.sff"
            },
            {
              "name": "slf",
              "in": "query",
              "value": "$inputs.slf"
            },
            {
              "name": "tnf",
              "in": "query",
              "value": "$inputs.tnf"
            },
            {
              "name": "wmf",
              "in": "query",
              "value": "$inputs.wmf"
            },
            {
              "name": "rmf",
              "in": "query",
              "value": "$inputs.rmf"
            },
            {
              "name": "cps",
              "in": "query",
              "value": "$inputs.cps"
            },
            {
              "name": "champion",
              "in": "query",
              "value": "$inputs.champion"
            },
            {
              "name": "synonyms",
              "in": "query",
              "value": "$inputs.synonyms"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "RecipeSearchResult": "$response.body"
          }
        },
        {
          "stepId": "get-recipe-reviews",
          "description": "Get the list of top-level reviews for the selected recipe.",
          "operationId": "Review_GetReviews",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "value": "$steps.find-recipe-for-engagement.outputs.RecipeSearchResult.Results[0].RecipeID"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ReviewList": "$response.body"
          }
        },
        {
          "stepId": "get-review-replies",
          "description": "Get the replies associated with a specific review.",
          "operationId": "Review_GetReplies",
          "parameters": [
            {
              "name": "reviewId",
              "in": "path",
              "value": "$steps.get-recipe-reviews.outputs.ReviewList.ID"
            },
            {
              "name": "pg",
              "in": "query",
              "value": "$inputs.pg"
            },
            {
              "name": "rpp",
              "in": "query",
              "value": "$inputs.rpp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ReplyList": "$response.body"
          }
        },
        {
          "stepId": "post-review-reply",
          "description": "Post a new reply to the selected review.",
          "operationId": "Review_PostReply",
          "parameters": [
            {
              "name": "reviewId",
              "in": "path",
              "value": "$steps.get-recipe-reviews.outputs.ReviewList.ID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "reviewId": "$steps.get-recipe-reviews.outputs.ReviewList[0].ID",
              "Comment": "$inputs.Comment"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Reply": "$response.body"
          }
        }
      ],
      "outputs": {
        "RecipeSearchResult": "$steps.find-recipe-for-engagement.outputs.RecipeSearchResult",
        "ReviewList": "$steps.get-recipe-reviews.outputs.ReviewList",
        "ReplyList": "$steps.get-review-replies.outputs.ReplyList",
        "Reply": "$steps.post-review-reply.outputs.Reply"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-user-profile-information",
      "summary": "Retrieve the authenticated user's profile, update their personal details (like name or about me), and update their preferences (like eating style).",
      "description": "Retrieve the authenticated user's profile, update their personal details (like name or about me), and update their preferences (like eating style).",
      "inputs": {
        "type": "object",
        "properties": {
          "AboutMe": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "HomeUrl": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "EatingStyle": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-user-profile",
          "description": "Retrieve the full profile information for the authenticated user.",
          "operationId": "Me_Index",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "BigOvenUser": "$response.body"
          }
        },
        {
          "stepId": "update-user-profile-details",
          "description": "Update the user's public profile information (name, about me, etc.).",
          "operationId": "Me_PutMe",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "AboutMe": "$inputs.AboutMe",
              "FirstName": "$inputs.FirstName",
              "HomeUrl": "$inputs.HomeUrl",
              "LastName": "$inputs.LastName"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "BigOvenUser": "$response.body"
          }
        },
        {
          "stepId": "update-user-preferences",
          "description": "Update the user's private preferences (e.g., eating style).",
          "operationId": "Me_PutMePreferences",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "EatingStyle": "$inputs.EatingStyle"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "BigOvenUser": "$response.body"
          }
        }
      ],
      "outputs": {
        "BigOvenUser": "$steps.update-user-preferences.outputs.BigOvenUser"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}