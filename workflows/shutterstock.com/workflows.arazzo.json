{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/shutterstock.com/main/1.2.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "shutterstock-user-authentication",
      "summary": "Standard OAuth 2.0 flow to authorize an application to access a user's Shutterstock account and obtain an access token.",
      "description": "Standard OAuth 2.0 flow to authorize an application to access a user's Shutterstock account and obtain an access token.",
      "inputs": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "response_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "initiate-authorization",
          "description": "Redirects the user to Shutterstock to grant application permissions.",
          "operationId": "authorize",
          "parameters": [
            {
              "name": "client_id",
              "in": "query",
              "value": "$inputs.client_id"
            },
            {
              "name": "realm",
              "in": "query",
              "value": "$inputs.realm"
            },
            {
              "name": "redirect_uri",
              "in": "query",
              "value": "$inputs.redirect_uri"
            },
            {
              "name": "response_type",
              "in": "query",
              "value": "$inputs.response_type"
            },
            {
              "name": "scope",
              "in": "query",
              "value": "$inputs.scope"
            },
            {
              "name": "state",
              "in": "query",
              "value": "$inputs.state"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ]
        },
        {
          "stepId": "get-access-token",
          "description": "Exchanges the authorization code obtained from the user redirection for an access token.",
          "operationId": "createAccessToken",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "client_id": "$inputs.client_id",
              "grant_type": "$inputs.grant_type"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "access_token": "$response.body",
            "expires_in": "$response.body",
            "token_type": "$response.body",
            "refresh_token": "$response.body"
          }
        }
      ],
      "outputs": {
        "access_token": "$steps.get-access-token.outputs.access_token",
        "expires_in": "$steps.get-access-token.outputs.expires_in",
        "token_type": "$steps.get-access-token.outputs.token_type",
        "refresh_token": "$steps.get-access-token.outputs.refresh_token"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-license-and-download-image",
      "summary": "Finds images based on keywords, retrieves details for a selected image, licenses it using a subscription, and gets the download link.",
      "description": "Finds images based on keywords, retrieves details for a selected image, licenses it using a subscription, and gets the download link.",
      "inputs": {
        "type": "object",
        "properties": {
          "library": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "aspect_ratio_min": {
            "type": "string"
          },
          "aspect_ratio_max": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "height_from": {
            "type": "string"
          },
          "height_to": {
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "spellcheck_query": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "width_from": {
            "type": "string"
          },
          "width_to": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "search_id": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-images",
          "description": "Search for images using keywords and filters.",
          "operationId": "searchImages",
          "parameters": [
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "aspect_ratio_min",
              "in": "query",
              "value": "$inputs.aspect_ratio_min"
            },
            {
              "name": "aspect_ratio_max",
              "in": "query",
              "value": "$inputs.aspect_ratio_max"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "color",
              "in": "query",
              "value": "$inputs.color"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "height_from",
              "in": "query",
              "value": "$inputs.height_from"
            },
            {
              "name": "height_to",
              "in": "query",
              "value": "$inputs.height_to"
            },
            {
              "name": "image_type",
              "in": "query",
              "value": "$inputs.image_type"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "spellcheck_query",
              "in": "query",
              "value": "$inputs.spellcheck_query"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "width_from",
              "in": "query",
              "value": "$inputs.width_from"
            },
            {
              "name": "width_to",
              "in": "query",
              "value": "$inputs.width_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        },
        {
          "stepId": "get-image-details",
          "description": "Get detailed information about a specific image, including available sizes.",
          "operationId": "getImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$inputs.search_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "description": "$response.body",
            "assets": "$response.body"
          }
        },
        {
          "stepId": "license-image",
          "description": "License the selected image using a specific subscription and size.",
          "operationId": "licenseImages",
          "parameters": [
            {
              "name": "subscription_id",
              "in": "query",
              "value": "$inputs.subscription_id"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$steps.search-images.outputs.search_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "images.image_id": "$steps.get-image-details.outputs.id",
              "search_id": "$steps.search-images.outputs.search_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-images.outputs.data.id",
        "search_id": "$steps.search-images.outputs.search_id",
        "total_count": "$steps.search-images.outputs.total_count",
        "id": "$steps.get-image-details.outputs.id",
        "description": "$steps.get-image-details.outputs.description",
        "assets": "$steps.get-image-details.outputs.assets",
        "data.license_id": "$steps.license-image.outputs.data.license_id",
        "data.download.url": "$steps.license-image.outputs.data.download.url",
        "data.error": "$steps.license-image.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-license-and-download-video",
      "summary": "Finds videos based on keywords, retrieves details for a selected video, licenses it using a subscription, and gets the download link.",
      "description": "Finds videos based on keywords, retrieves details for a selected video, licenses it using a subscription, and gets the download link.",
      "inputs": {
        "type": "object",
        "properties": {
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "fps": {
            "type": "string"
          },
          "fps_from": {
            "type": "string"
          },
          "fps_to": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "search_id": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-videos",
          "description": "Search for videos using keywords and filters.",
          "operationId": "searchVideos",
          "parameters": [
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "fps",
              "in": "query",
              "value": "$inputs.fps"
            },
            {
              "name": "fps_from",
              "in": "query",
              "value": "$inputs.fps_from"
            },
            {
              "name": "fps_to",
              "in": "query",
              "value": "$inputs.fps_to"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "resolution",
              "in": "query",
              "value": "$inputs.resolution"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        },
        {
          "stepId": "get-video-details",
          "description": "Get detailed information about a specific video, including available sizes.",
          "operationId": "getVideo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$inputs.search_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "description": "$response.body",
            "assets": "$response.body"
          }
        },
        {
          "stepId": "license-video",
          "description": "License the selected video using a specific subscription and size.",
          "operationId": "licenseVideos",
          "parameters": [
            {
              "name": "subscription_id",
              "in": "query",
              "value": "$inputs.subscription_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$steps.search-videos.outputs.search_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "videos.video_id": "$steps.get-video-details.outputs.id",
              "search_id": "$steps.search-videos.outputs.search_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-videos.outputs.data.id",
        "search_id": "$steps.search-videos.outputs.search_id",
        "total_count": "$steps.search-videos.outputs.total_count",
        "id": "$steps.get-video-details.outputs.id",
        "description": "$steps.get-video-details.outputs.description",
        "assets": "$steps.get-video-details.outputs.assets",
        "data.license_id": "$steps.license-video.outputs.data.license_id",
        "data.download.url": "$steps.license-video.outputs.data.download.url",
        "data.error": "$steps.license-video.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-license-and-download-audio-track",
      "summary": "Finds audio tracks based on keywords, retrieves details for a selected track, licenses it, and gets the download link.",
      "description": "Finds audio tracks based on keywords, retrieves details for a selected track, licenses it, and gets the download link.",
      "inputs": {
        "type": "object",
        "properties": {
          "artists": {
            "type": "string"
          },
          "bpm": {
            "type": "string"
          },
          "bpm_from": {
            "type": "string"
          },
          "bpm_to": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "is_instrumental": {
            "type": "string"
          },
          "instruments": {
            "type": "string"
          },
          "moods": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "vocal_description": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "library": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "search_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-audio-tracks",
          "description": "Search for audio tracks using keywords and filters like genre, mood, or BPM.",
          "operationId": "searchTracks",
          "parameters": [
            {
              "name": "artists",
              "in": "query",
              "value": "$inputs.artists"
            },
            {
              "name": "bpm",
              "in": "query",
              "value": "$inputs.bpm"
            },
            {
              "name": "bpm_from",
              "in": "query",
              "value": "$inputs.bpm_from"
            },
            {
              "name": "bpm_to",
              "in": "query",
              "value": "$inputs.bpm_to"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "genre",
              "in": "query",
              "value": "$inputs.genre"
            },
            {
              "name": "is_instrumental",
              "in": "query",
              "value": "$inputs.is_instrumental"
            },
            {
              "name": "instruments",
              "in": "query",
              "value": "$inputs.instruments"
            },
            {
              "name": "moods",
              "in": "query",
              "value": "$inputs.moods"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            },
            {
              "name": "vocal_description",
              "in": "query",
              "value": "$inputs.vocal_description"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        },
        {
          "stepId": "get-audio-track-details",
          "description": "Get detailed information about a specific audio track.",
          "operationId": "getTrack",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$inputs.search_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "title": "$response.body",
            "description": "$response.body",
            "assets": "$response.body"
          }
        },
        {
          "stepId": "license-audio-track",
          "description": "License the selected audio track.",
          "operationId": "licenseTrack",
          "parameters": [
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$steps.search-audio-tracks.outputs.search_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "audio.audio_id": "$steps.get-audio-track-details.outputs.id",
              "search_id": "$steps.search-audio-tracks.outputs.search_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-audio-tracks.outputs.data.id",
        "search_id": "$steps.search-audio-tracks.outputs.search_id",
        "total_count": "$steps.search-audio-tracks.outputs.total_count",
        "id": "$steps.get-audio-track-details.outputs.id",
        "title": "$steps.get-audio-track-details.outputs.title",
        "description": "$steps.get-audio-track-details.outputs.description",
        "assets": "$steps.get-audio-track-details.outputs.assets",
        "data.license_id": "$steps.license-audio-track.outputs.data.license_id",
        "data.download.url": "$steps.license-audio-track.outputs.data.download.url",
        "data.error": "$steps.license-audio-track.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-license-and-download-sound-effect",
      "summary": "Finds sound effects based on keywords, retrieves details for a selected SFX, licenses it using a subscription, and gets the download link.",
      "description": "Finds sound effects based on keywords, retrieves details for a selected SFX, licenses it using a subscription, and gets the download link.",
      "inputs": {
        "type": "object",
        "properties": {
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "library": {
            "type": "string"
          },
          "search_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-sfx",
          "description": "Search for sound effects using keywords and filters.",
          "operationId": "searchSFX",
          "parameters": [
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        },
        {
          "stepId": "get-sfx-details",
          "description": "Get detailed information about a specific sound effect.",
          "operationId": "getSfxDetails",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$inputs.search_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "description": "$response.body",
            "assets": "$response.body"
          }
        },
        {
          "stepId": "license-sfx",
          "description": "License the selected sound effect using a specific subscription.",
          "operationId": "licensesSFX",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "sound_effects.sfx_id": "$steps.get-sfx-details.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-sfx.outputs.data.id",
        "search_id": "$steps.search-sfx.outputs.search_id",
        "total_count": "$steps.search-sfx.outputs.total_count",
        "id": "$steps.get-sfx-details.outputs.id",
        "description": "$steps.get-sfx-details.outputs.description",
        "assets": "$steps.get-sfx-details.outputs.assets",
        "data.license_id": "$steps.license-sfx.outputs.data.license_id",
        "data.download.url": "$steps.license-sfx.outputs.data.download.url",
        "data.error": "$steps.license-sfx.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-and-license-editorial-image",
      "summary": "Finds editorial images based on keywords and country, retrieves details for a selected image, and licenses it for a specific country.",
      "description": "Finds editorial images based on keywords and country, retrieves details for a selected image, and licenses it for a specific country.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "supplier_code": {
            "type": "string"
          },
          "date_start": {
            "type": "string"
          },
          "date_end": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-editorial-images",
          "description": "Search for editorial images using keywords, category, and country.",
          "operationId": "searchEditorialImages",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "supplier_code",
              "in": "query",
              "value": "$inputs.supplier_code"
            },
            {
              "name": "date_start",
              "in": "query",
              "value": "$inputs.date_start"
            },
            {
              "name": "date_end",
              "in": "query",
              "value": "$inputs.date_end"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body",
            "next": "$response.body",
            "prev": "$response.body"
          }
        },
        {
          "stepId": "get-editorial-image-details",
          "description": "Get detailed information about a specific editorial image.",
          "operationId": "getEditorialImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "description": "$response.body",
            "assets": "$response.body",
            "date_taken": "$response.body",
            "categories": "$response.body",
            "keywords": "$response.body"
          }
        },
        {
          "stepId": "license-editorial-image",
          "description": "License the selected editorial image for a specific country and license type.",
          "operationId": "licenseEditorialImages",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "editorial.editorial_id": "$steps.get-editorial-image-details.outputs.id",
              "country": "$inputs.country"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-editorial-images.outputs.data.id",
        "search_id": "$steps.search-editorial-images.outputs.search_id",
        "total_count": "$steps.search-editorial-images.outputs.total_count",
        "next": "$steps.search-editorial-images.outputs.next",
        "prev": "$steps.search-editorial-images.outputs.prev",
        "id": "$steps.get-editorial-image-details.outputs.id",
        "description": "$steps.get-editorial-image-details.outputs.description",
        "assets": "$steps.get-editorial-image-details.outputs.assets",
        "date_taken": "$steps.get-editorial-image-details.outputs.date_taken",
        "categories": "$steps.get-editorial-image-details.outputs.categories",
        "keywords": "$steps.get-editorial-image-details.outputs.keywords",
        "data.license_id": "$steps.license-editorial-image.outputs.data.license_id",
        "data.download.url": "$steps.license-editorial-image.outputs.data.download.url",
        "data.error": "$steps.license-editorial-image.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-and-license-editorial-video",
      "summary": "Finds editorial videos based on keywords and country, retrieves details for a selected video, and licenses it for a specific country.",
      "description": "Finds editorial videos based on keywords and country, retrieves details for a selected video, and licenses it for a specific country.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "supplier_code": {
            "type": "string"
          },
          "date_start": {
            "type": "string"
          },
          "date_end": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "fps": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "search_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-editorial-videos",
          "description": "Search for editorial videos using keywords, category, and country.",
          "operationId": "searchEditorialVideos",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "supplier_code",
              "in": "query",
              "value": "$inputs.supplier_code"
            },
            {
              "name": "date_start",
              "in": "query",
              "value": "$inputs.date_start"
            },
            {
              "name": "date_end",
              "in": "query",
              "value": "$inputs.date_end"
            },
            {
              "name": "resolution",
              "in": "query",
              "value": "$inputs.resolution"
            },
            {
              "name": "fps",
              "in": "query",
              "value": "$inputs.fps"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body",
            "next": "$response.body",
            "prev": "$response.body"
          }
        },
        {
          "stepId": "get-editorial-video-details",
          "description": "Get detailed information about a specific editorial video.",
          "operationId": "getEditorialVideo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "search_id",
              "in": "query",
              "value": "$inputs.search_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "description": "$response.body",
            "assets": "$response.body",
            "date_taken": "$response.body",
            "categories": "$response.body",
            "keywords": "$response.body"
          }
        },
        {
          "stepId": "license-editorial-video",
          "description": "License the selected editorial video for a specific country and license type.",
          "operationId": "licenseEditorialVideo",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "editorial.editorial_id": "$steps.get-editorial-video-details.outputs.id",
              "country": "$inputs.country"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.license_id": "$response.body",
            "data.download.url": "$response.body",
            "data.error": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.search-editorial-videos.outputs.data.id",
        "search_id": "$steps.search-editorial-videos.outputs.search_id",
        "total_count": "$steps.search-editorial-videos.outputs.total_count",
        "next": "$steps.search-editorial-videos.outputs.next",
        "prev": "$steps.search-editorial-videos.outputs.prev",
        "id": "$steps.get-editorial-video-details.outputs.id",
        "description": "$steps.get-editorial-video-details.outputs.description",
        "assets": "$steps.get-editorial-video-details.outputs.assets",
        "date_taken": "$steps.get-editorial-video-details.outputs.date_taken",
        "categories": "$steps.get-editorial-video-details.outputs.categories",
        "keywords": "$steps.get-editorial-video-details.outputs.keywords",
        "data.license_id": "$steps.license-editorial-video.outputs.data.license_id",
        "data.download.url": "$steps.license-editorial-video.outputs.data.download.url",
        "data.error": "$steps.license-editorial-video.outputs.data.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-similar-images-reverse-image-search",
      "summary": "Uploads an image and finds visually similar images in the Shutterstock library.",
      "description": "Uploads an image and finds visually similar images in the Shutterstock library.",
      "inputs": {
        "type": "object",
        "properties": {
          "base64_image": {
            "type": "string"
          },
          "asset_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "view": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-cv-image",
          "description": "Upload an image to use for computer vision search.",
          "operationId": "uploadImage",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "base64_image": "$inputs.base64_image"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "upload_id": "$response.body"
          }
        },
        {
          "stepId": "get-similar-cv-images",
          "description": "Find images visually similar to the uploaded image.",
          "operationId": "getSimilarImages",
          "parameters": [
            {
              "name": "asset_id",
              "in": "query",
              "value": "$steps.upload-cv-image.outputs.upload_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "upload_id": "$steps.upload-cv-image.outputs.upload_id",
        "data.id": "$steps.get-similar-cv-images.outputs.data.id",
        "search_id": "$steps.get-similar-cv-images.outputs.search_id",
        "total_count": "$steps.get-similar-cv-images.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-image-collection-items",
      "summary": "Creates a new image collection, searches for images, adds them to the collection, and then retrieves the collection's contents.",
      "description": "Creates a new image collection, searches for images, adds them to the collection, and then retrieves the collection's contents.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "library": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "aspect_ratio_min": {
            "type": "string"
          },
          "aspect_ratio_max": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "height_from": {
            "type": "string"
          },
          "height_to": {
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "spellcheck_query": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "width_from": {
            "type": "string"
          },
          "width_to": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "share_code": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-image-collection",
          "description": "Create a new collection (lightbox) for images.",
          "operationId": "createImageCollection",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body"
          }
        },
        {
          "stepId": "search-images-for-collection",
          "description": "Search for images to add to the collection.",
          "operationId": "searchImages",
          "parameters": [
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "aspect_ratio_min",
              "in": "query",
              "value": "$inputs.aspect_ratio_min"
            },
            {
              "name": "aspect_ratio_max",
              "in": "query",
              "value": "$inputs.aspect_ratio_max"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "color",
              "in": "query",
              "value": "$inputs.color"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "height_from",
              "in": "query",
              "value": "$inputs.height_from"
            },
            {
              "name": "height_to",
              "in": "query",
              "value": "$inputs.height_to"
            },
            {
              "name": "image_type",
              "in": "query",
              "value": "$inputs.image_type"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "spellcheck_query",
              "in": "query",
              "value": "$inputs.spellcheck_query"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "width_from",
              "in": "query",
              "value": "$inputs.width_from"
            },
            {
              "name": "width_to",
              "in": "query",
              "value": "$inputs.width_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body"
          }
        },
        {
          "stepId": "add-images-to-collection",
          "description": "Add the found images to the newly created collection.",
          "operationId": "addImageCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-image-collection.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.create-image-collection.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "collection_data": "$response.body"
          }
        },
        {
          "stepId": "get-image-collection-items",
          "description": "Retrieve the list of items currently in the collection.",
          "operationId": "getImageCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-image-collection.outputs.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "share_code",
              "in": "query",
              "value": "$inputs.share_code"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-image-collection.outputs.id",
        "data.id": "$steps.get-image-collection-items.outputs.data.id",
        "collection_data": "$steps.add-images-to-collection.outputs.collection_data",
        "total_count": "$steps.get-image-collection-items.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-video-collection-items",
      "summary": "Creates a new video collection, searches for videos, adds them to the collection, and then retrieves the collection's contents.",
      "description": "Creates a new video collection, searches for videos, adds them to the collection, and then retrieves the collection's contents.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "fps": {
            "type": "string"
          },
          "fps_from": {
            "type": "string"
          },
          "fps_to": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "share_code": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-video-collection",
          "description": "Create a new collection (clipbox) for videos.",
          "operationId": "createVideoCollection",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body"
          }
        },
        {
          "stepId": "search-videos-for-collection",
          "description": "Search for videos to add to the collection.",
          "operationId": "searchVideos",
          "parameters": [
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "fps",
              "in": "query",
              "value": "$inputs.fps"
            },
            {
              "name": "fps_from",
              "in": "query",
              "value": "$inputs.fps_from"
            },
            {
              "name": "fps_to",
              "in": "query",
              "value": "$inputs.fps_to"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "resolution",
              "in": "query",
              "value": "$inputs.resolution"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body"
          }
        },
        {
          "stepId": "add-videos-to-collection",
          "description": "Add the found videos to the newly created collection.",
          "operationId": "addVideoCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-video-collection.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.create-video-collection.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "collection_data": "$response.body"
          }
        },
        {
          "stepId": "get-video-collection-items",
          "description": "Retrieve the list of items currently in the video collection.",
          "operationId": "getVideoCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-video-collection.outputs.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "share_code",
              "in": "query",
              "value": "$inputs.share_code"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-video-collection.outputs.id",
        "data.id": "$steps.get-video-collection-items.outputs.data.id",
        "collection_data": "$steps.add-videos-to-collection.outputs.collection_data",
        "total_count": "$steps.get-video-collection-items.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-audio-collection-items",
      "summary": "Creates a new audio collection, searches for tracks, adds them to the collection, and then retrieves the collection's contents.",
      "description": "Creates a new audio collection, searches for tracks, adds them to the collection, and then retrieves the collection's contents.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "artists": {
            "type": "string"
          },
          "bpm": {
            "type": "string"
          },
          "bpm_from": {
            "type": "string"
          },
          "bpm_to": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "is_instrumental": {
            "type": "string"
          },
          "instruments": {
            "type": "string"
          },
          "moods": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "vocal_description": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "library": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "share_code": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-audio-collection",
          "description": "Create a new collection (soundbox) for audio tracks.",
          "operationId": "createTrackCollection",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body"
          }
        },
        {
          "stepId": "search-audio-for-collection",
          "description": "Search for audio tracks to add to the collection.",
          "operationId": "searchTracks",
          "parameters": [
            {
              "name": "artists",
              "in": "query",
              "value": "$inputs.artists"
            },
            {
              "name": "bpm",
              "in": "query",
              "value": "$inputs.bpm"
            },
            {
              "name": "bpm_from",
              "in": "query",
              "value": "$inputs.bpm_from"
            },
            {
              "name": "bpm_to",
              "in": "query",
              "value": "$inputs.bpm_to"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "genre",
              "in": "query",
              "value": "$inputs.genre"
            },
            {
              "name": "is_instrumental",
              "in": "query",
              "value": "$inputs.is_instrumental"
            },
            {
              "name": "instruments",
              "in": "query",
              "value": "$inputs.instruments"
            },
            {
              "name": "moods",
              "in": "query",
              "value": "$inputs.moods"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            },
            {
              "name": "vocal_description",
              "in": "query",
              "value": "$inputs.vocal_description"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body"
          }
        },
        {
          "stepId": "add-audio-to-collection",
          "description": "Add the found audio tracks to the newly created collection.",
          "operationId": "addTrackCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-audio-collection.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.create-audio-collection.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "collection_data": "$response.body"
          }
        },
        {
          "stepId": "get-audio-collection-items",
          "description": "Retrieve the list of items currently in the audio collection.",
          "operationId": "getTrackCollectionItems",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-audio-collection.outputs.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "share_code",
              "in": "query",
              "value": "$inputs.share_code"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-audio-collection.outputs.id",
        "data.id": "$steps.get-audio-collection-items.outputs.data.id",
        "collection_data": "$steps.add-audio-to-collection.outputs.collection_data",
        "total_count": "$steps.get-audio-collection-items.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-similar-videos-reverse-image-search",
      "summary": "Uploads an image and finds visually similar videos in the Shutterstock library.",
      "description": "Uploads an image and finds visually similar videos in the Shutterstock library.",
      "inputs": {
        "type": "object",
        "properties": {
          "base64_image": {
            "type": "string"
          },
          "asset_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "view": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-cv-image-for-video",
          "description": "Upload an image to use for computer vision search for videos.",
          "operationId": "uploadImage",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "base64_image": "$inputs.base64_image"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "upload_id": "$response.body"
          }
        },
        {
          "stepId": "get-similar-cv-videos",
          "description": "Find videos visually similar to the uploaded image.",
          "operationId": "getSimilarVideos",
          "parameters": [
            {
              "name": "asset_id",
              "in": "query",
              "value": "$steps.upload-cv-image-for-video.outputs.upload_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "upload_id": "$steps.upload-cv-image-for-video.outputs.upload_id",
        "data.id": "$steps.get-similar-cv-videos.outputs.data.id",
        "search_id": "$steps.get-similar-cv-videos.outputs.search_id",
        "total_count": "$steps.get-similar-cv-videos.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-keywords-from-uploaded-image",
      "summary": "Uploads an image and suggests relevant keywords based on its content.",
      "description": "Uploads an image and suggests relevant keywords based on its content.",
      "inputs": {
        "type": "object",
        "properties": {
          "base64_image": {
            "type": "string"
          },
          "asset_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-cv-image-for-keywords",
          "description": "Upload an image to get keyword suggestions.",
          "operationId": "uploadImage",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "base64_image": "$inputs.base64_image"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "upload_id": "$response.body"
          }
        },
        {
          "stepId": "get-cv-keywords",
          "description": "Get suggested keywords for the uploaded image.",
          "operationId": "getKeywords",
          "parameters": [
            {
              "name": "asset_id",
              "in": "query",
              "value": "$steps.upload-cv-image-for-keywords.outputs.upload_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body"
          }
        }
      ],
      "outputs": {
        "upload_id": "$steps.upload-cv-image-for-keywords.outputs.upload_id",
        "data": "$steps.get-cv-keywords.outputs.data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-similar-images-to-a-searched-image",
      "summary": "Searches for images, selects one, and then finds images visually similar to the selected one.",
      "description": "Searches for images, selects one, and then finds images visually similar to the selected one.",
      "inputs": {
        "type": "object",
        "properties": {
          "library": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "aspect_ratio_min": {
            "type": "string"
          },
          "aspect_ratio_max": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "height_from": {
            "type": "string"
          },
          "height_to": {
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "spellcheck_query": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "width_from": {
            "type": "string"
          },
          "width_to": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-initial-images",
          "description": "Perform an initial search for images.",
          "operationId": "searchImages",
          "parameters": [
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "aspect_ratio_min",
              "in": "query",
              "value": "$inputs.aspect_ratio_min"
            },
            {
              "name": "aspect_ratio_max",
              "in": "query",
              "value": "$inputs.aspect_ratio_max"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "color",
              "in": "query",
              "value": "$inputs.color"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "height_from",
              "in": "query",
              "value": "$inputs.height_from"
            },
            {
              "name": "height_to",
              "in": "query",
              "value": "$inputs.height_to"
            },
            {
              "name": "image_type",
              "in": "query",
              "value": "$inputs.image_type"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "spellcheck_query",
              "in": "query",
              "value": "$inputs.spellcheck_query"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "width_from",
              "in": "query",
              "value": "$inputs.width_from"
            },
            {
              "name": "width_to",
              "in": "query",
              "value": "$inputs.width_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body"
          }
        },
        {
          "stepId": "find-similar-images",
          "description": "Find images visually similar to a selected image from the initial search.",
          "operationId": "listSimilarImages",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.find-similar-images.outputs.data.id",
        "total_count": "$steps.find-similar-images.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-similar-videos-to-a-searched-video",
      "summary": "Searches for videos, selects one, and then finds videos visually similar to the selected one.",
      "description": "Searches for videos, selects one, and then finds videos visually similar to the selected one.",
      "inputs": {
        "type": "object",
        "properties": {
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "fps": {
            "type": "string"
          },
          "fps_from": {
            "type": "string"
          },
          "fps_to": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-initial-videos",
          "description": "Perform an initial search for videos.",
          "operationId": "searchVideos",
          "parameters": [
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "fps",
              "in": "query",
              "value": "$inputs.fps"
            },
            {
              "name": "fps_from",
              "in": "query",
              "value": "$inputs.fps_from"
            },
            {
              "name": "fps_to",
              "in": "query",
              "value": "$inputs.fps_to"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "resolution",
              "in": "query",
              "value": "$inputs.resolution"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body"
          }
        },
        {
          "stepId": "find-similar-videos",
          "description": "Find videos visually similar to a selected video from the initial search.",
          "operationId": "findSimilarVideos",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "total_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.find-similar-videos.outputs.data.id",
        "total_count": "$steps.find-similar-videos.outputs.total_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-image-search-suggestions",
      "summary": "Provides autocomplete suggestions for a partial image search query, which can then be used in a full search.",
      "description": "Provides autocomplete suggestions for a partial image search query, which can then be used in a full search.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "library": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "aspect_ratio_min": {
            "type": "string"
          },
          "aspect_ratio_max": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "height_from": {
            "type": "string"
          },
          "height_to": {
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "spellcheck_query": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "width_from": {
            "type": "string"
          },
          "width_to": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-image-query-suggestions",
          "description": "Get autocomplete suggestions for an image search term.",
          "operationId": "getImageSuggestions",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body"
          }
        },
        {
          "stepId": "search-images-with-suggestion",
          "description": "Perform an image search using one of the suggestions.",
          "operationId": "searchImages",
          "parameters": [
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "aspect_ratio_min",
              "in": "query",
              "value": "$inputs.aspect_ratio_min"
            },
            {
              "name": "aspect_ratio_max",
              "in": "query",
              "value": "$inputs.aspect_ratio_max"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "color",
              "in": "query",
              "value": "$inputs.color"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "height_from",
              "in": "query",
              "value": "$inputs.height_from"
            },
            {
              "name": "height_to",
              "in": "query",
              "value": "$inputs.height_to"
            },
            {
              "name": "image_type",
              "in": "query",
              "value": "$inputs.image_type"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "spellcheck_query",
              "in": "query",
              "value": "$inputs.spellcheck_query"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "width_from",
              "in": "query",
              "value": "$inputs.width_from"
            },
            {
              "name": "width_to",
              "in": "query",
              "value": "$inputs.width_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "data": "$steps.get-image-query-suggestions.outputs.data",
        "data.id": "$steps.search-images-with-suggestion.outputs.data.id",
        "search_id": "$steps.search-images-with-suggestion.outputs.search_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-video-search-suggestions",
      "summary": "Provides autocomplete suggestions for a partial video search query, which can then be used in a full search.",
      "description": "Provides autocomplete suggestions for a partial video search query, which can then be used in a full search.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "duration_from": {
            "type": "string"
          },
          "duration_to": {
            "type": "string"
          },
          "fps": {
            "type": "string"
          },
          "fps_from": {
            "type": "string"
          },
          "fps_to": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "view": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-video-query-suggestions",
          "description": "Get autocomplete suggestions for a video search term.",
          "operationId": "getVideoSuggestions",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body"
          }
        },
        {
          "stepId": "search-videos-with-suggestion",
          "description": "Perform a video search using one of the suggestions.",
          "operationId": "searchVideos",
          "parameters": [
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "duration_from",
              "in": "query",
              "value": "$inputs.duration_from"
            },
            {
              "name": "duration_to",
              "in": "query",
              "value": "$inputs.duration_to"
            },
            {
              "name": "fps",
              "in": "query",
              "value": "$inputs.fps"
            },
            {
              "name": "fps_from",
              "in": "query",
              "value": "$inputs.fps_from"
            },
            {
              "name": "fps_to",
              "in": "query",
              "value": "$inputs.fps_to"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "resolution",
              "in": "query",
              "value": "$inputs.resolution"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "search_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "data": "$steps.get-video-query-suggestions.outputs.data",
        "data.id": "$steps.search-videos-with-suggestion.outputs.data.id",
        "search_id": "$steps.search-videos-with-suggestion.outputs.search_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-catalog-collection-items",
      "summary": "Creates a catalog collection, adds assets from a search, and retrieves the collection items.",
      "description": "Creates a catalog collection, adds assets from a search, and retrieves the collection items.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "collection_id": {
            "type": "string"
          },
          "asset_type": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-catalog-collection",
          "description": "Create a new catalog collection.",
          "operationId": "createCollection",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body"
          }
        },
        {
          "stepId": "search-catalog-assets",
          "description": "Search for assets within the user's catalog.",
          "operationId": "searchCatalog",
          "parameters": [
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "collection_id",
              "in": "query",
              "value": "$inputs.collection_id"
            },
            {
              "name": "asset_type",
              "in": "query",
              "value": "$inputs.asset_type"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.asset.id": "$response.body",
            "data.asset.type": "$response.body"
          }
        },
        {
          "stepId": "add-items-to-catalog-collection",
          "description": "Add found assets to the created catalog collection.",
          "operationId": "addToCollection",
          "parameters": [
            {
              "name": "collection_id",
              "in": "path",
              "value": "$steps.create-catalog-collection.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "collection_id": "$steps.create-catalog-collection.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "name": "$response.body",
            "total_item_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.add-items-to-catalog-collection.outputs.id",
        "data.asset.id": "$steps.search-catalog-assets.outputs.data.asset.id",
        "data.asset.type": "$steps.search-catalog-assets.outputs.data.asset.type",
        "name": "$steps.add-items-to-catalog-collection.outputs.name",
        "total_item_count": "$steps.add-items-to-catalog-collection.outputs.total_item_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "re-download-licensed-image",
      "summary": "Retrieves a user's image license history and re-downloads a previously licensed image.",
      "description": "Retrieves a user's image license history and re-downloads a previously licensed image.",
      "inputs": {
        "type": "object",
        "properties": {
          "image_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "download_availability": {
            "type": "string"
          },
          "team_history": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-image-licenses",
          "description": "List the user's existing image licenses, optionally filtering by image ID.",
          "operationId": "getImageLicenseList",
          "parameters": [
            {
              "name": "image_id",
              "in": "query",
              "value": "$inputs.image_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "start_date",
              "in": "query",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "query",
              "value": "$inputs.end_date"
            },
            {
              "name": "download_availability",
              "in": "query",
              "value": "$inputs.download_availability"
            },
            {
              "name": "team_history",
              "in": "query",
              "value": "$inputs.team_history"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.image.id": "$response.body",
            "data.is_downloadable": "$response.body"
          }
        },
        {
          "stepId": "redownload-image",
          "description": "Re-download an image using its license ID.",
          "operationId": "downloadImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "size": "$inputs.size"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.list-image-licenses.outputs.data.id",
        "data.image.id": "$steps.list-image-licenses.outputs.data.image.id",
        "data.is_downloadable": "$steps.list-image-licenses.outputs.data.is_downloadable",
        "url": "$steps.redownload-image.outputs.url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "re-download-licensed-video",
      "summary": "Retrieves a user's video license history and re-downloads a previously licensed video.",
      "description": "Retrieves a user's video license history and re-downloads a previously licensed video.",
      "inputs": {
        "type": "object",
        "properties": {
          "video_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "download_availability": {
            "type": "string"
          },
          "team_history": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-video-licenses",
          "description": "List the user's existing video licenses, optionally filtering by video ID.",
          "operationId": "getVideoLicenseList",
          "parameters": [
            {
              "name": "video_id",
              "in": "query",
              "value": "$inputs.video_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "start_date",
              "in": "query",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "query",
              "value": "$inputs.end_date"
            },
            {
              "name": "download_availability",
              "in": "query",
              "value": "$inputs.download_availability"
            },
            {
              "name": "team_history",
              "in": "query",
              "value": "$inputs.team_history"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.video.id": "$response.body",
            "data.is_downloadable": "$response.body"
          }
        },
        {
          "stepId": "redownload-video",
          "description": "Re-download a video using its license ID.",
          "operationId": "downloadVideos",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "size": "$inputs.size"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.list-video-licenses.outputs.data.id",
        "data.video.id": "$steps.list-video-licenses.outputs.data.video.id",
        "data.is_downloadable": "$steps.list-video-licenses.outputs.data.is_downloadable",
        "url": "$steps.redownload-video.outputs.url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "re-download-licensed-audio-track",
      "summary": "Retrieves a user's audio license history and re-downloads a previously licensed track.",
      "description": "Retrieves a user's audio license history and re-downloads a previously licensed track.",
      "inputs": {
        "type": "object",
        "properties": {
          "audio_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "download_availability": {
            "type": "string"
          },
          "team_history": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-audio-licenses",
          "description": "List the user's existing audio licenses, optionally filtering by track ID.",
          "operationId": "getTrackLicenseList",
          "parameters": [
            {
              "name": "audio_id",
              "in": "query",
              "value": "$inputs.audio_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "start_date",
              "in": "query",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "query",
              "value": "$inputs.end_date"
            },
            {
              "name": "download_availability",
              "in": "query",
              "value": "$inputs.download_availability"
            },
            {
              "name": "team_history",
              "in": "query",
              "value": "$inputs.team_history"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.audio.id": "$response.body",
            "data.is_downloadable": "$response.body"
          }
        },
        {
          "stepId": "redownload-audio-track",
          "description": "Re-download an audio track using its license ID.",
          "operationId": "downloadTracks",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url": "$response.body",
            "shorts_loops_stems": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.list-audio-licenses.outputs.data.id",
        "data.audio.id": "$steps.list-audio-licenses.outputs.data.audio.id",
        "data.is_downloadable": "$steps.list-audio-licenses.outputs.data.is_downloadable",
        "url": "$steps.redownload-audio-track.outputs.url",
        "shorts_loops_stems": "$steps.redownload-audio-track.outputs.shorts_loops_stems"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "re-download-licensed-sound-effect",
      "summary": "Retrieves a user's SFX license history and re-downloads a previously licensed sound effect.",
      "description": "Retrieves a user's SFX license history and re-downloads a previously licensed sound effect.",
      "inputs": {
        "type": "object",
        "properties": {
          "sfx_id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "license_id": {
            "type": "string"
          },
          "download_availability": {
            "type": "string"
          },
          "team_history": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-sfx-licenses",
          "description": "List the user's existing SFX licenses, optionally filtering by SFX ID.",
          "operationId": "getSfxLicenseList",
          "parameters": [
            {
              "name": "sfx_id",
              "in": "query",
              "value": "$inputs.sfx_id"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            },
            {
              "name": "start_date",
              "in": "query",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "query",
              "value": "$inputs.end_date"
            },
            {
              "name": "license_id",
              "in": "query",
              "value": "$inputs.license_id"
            },
            {
              "name": "download_availability",
              "in": "query",
              "value": "$inputs.download_availability"
            },
            {
              "name": "team_history",
              "in": "query",
              "value": "$inputs.team_history"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.sfx.id": "$response.body",
            "data.is_downloadable": "$response.body"
          }
        },
        {
          "stepId": "redownload-sfx",
          "description": "Re-download a sound effect using its license ID.",
          "operationId": "downloadSfx",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.list-sfx-licenses.outputs.data.id",
        "data.sfx.id": "$steps.list-sfx-licenses.outputs.data.sfx.id",
        "data.is_downloadable": "$steps.list-sfx-licenses.outputs.data.is_downloadable",
        "url": "$steps.redownload-sfx.outputs.url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-contributors-portfolio",
      "summary": "Finds media by a contributor, gets contributor details, and lists their collections.",
      "description": "Finds media by a contributor, gets contributor details, and lists their collections.",
      "inputs": {
        "type": "object",
        "properties": {
          "library": {
            "type": "string"
          },
          "added_date": {
            "type": "string"
          },
          "added_date_start": {
            "type": "string"
          },
          "aspect_ratio_min": {
            "type": "string"
          },
          "aspect_ratio_max": {
            "type": "string"
          },
          "aspect_ratio": {
            "type": "string"
          },
          "added_date_end": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "contributor_country": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "height_from": {
            "type": "string"
          },
          "height_to": {
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "keyword_safe_search": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "people_model_released": {
            "type": "string"
          },
          "people_age": {
            "type": "string"
          },
          "people_ethnicity": {
            "type": "string"
          },
          "people_gender": {
            "type": "string"
          },
          "people_number": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "safe": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "spellcheck_query": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "width_from": {
            "type": "string"
          },
          "width_to": {
            "type": "string"
          },
          "contributor_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-media-by-contributor",
          "description": "Search for images by a specific contributor ID or name.",
          "operationId": "searchImages",
          "parameters": [
            {
              "name": "library",
              "in": "query",
              "value": "$inputs.library"
            },
            {
              "name": "added_date",
              "in": "query",
              "value": "$inputs.added_date"
            },
            {
              "name": "added_date_start",
              "in": "query",
              "value": "$inputs.added_date_start"
            },
            {
              "name": "aspect_ratio_min",
              "in": "query",
              "value": "$inputs.aspect_ratio_min"
            },
            {
              "name": "aspect_ratio_max",
              "in": "query",
              "value": "$inputs.aspect_ratio_max"
            },
            {
              "name": "aspect_ratio",
              "in": "query",
              "value": "$inputs.aspect_ratio"
            },
            {
              "name": "added_date_end",
              "in": "query",
              "value": "$inputs.added_date_end"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "color",
              "in": "query",
              "value": "$inputs.color"
            },
            {
              "name": "contributor",
              "in": "query",
              "value": "$inputs.contributor"
            },
            {
              "name": "contributor_country",
              "in": "query",
              "value": "$inputs.contributor_country"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "height_from",
              "in": "query",
              "value": "$inputs.height_from"
            },
            {
              "name": "height_to",
              "in": "query",
              "value": "$inputs.height_to"
            },
            {
              "name": "image_type",
              "in": "query",
              "value": "$inputs.image_type"
            },
            {
              "name": "keyword_safe_search",
              "in": "query",
              "value": "$inputs.keyword_safe_search"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "model",
              "in": "query",
              "value": "$inputs.model"
            },
            {
              "name": "orientation",
              "in": "query",
              "value": "$inputs.orientation"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "people_model_released",
              "in": "query",
              "value": "$inputs.people_model_released"
            },
            {
              "name": "people_age",
              "in": "query",
              "value": "$inputs.people_age"
            },
            {
              "name": "people_ethnicity",
              "in": "query",
              "value": "$inputs.people_ethnicity"
            },
            {
              "name": "people_gender",
              "in": "query",
              "value": "$inputs.people_gender"
            },
            {
              "name": "people_number",
              "in": "query",
              "value": "$inputs.people_number"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "safe",
              "in": "query",
              "value": "$inputs.safe"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "spellcheck_query",
              "in": "query",
              "value": "$inputs.spellcheck_query"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "width_from",
              "in": "query",
              "value": "$inputs.width_from"
            },
            {
              "name": "width_to",
              "in": "query",
              "value": "$inputs.width_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.contributor.id": "$response.body"
          }
        },
        {
          "stepId": "get-contributor-details",
          "description": "Get detailed profile information for the contributor.",
          "operationId": "getContributor",
          "parameters": [
            {
              "name": "contributor_id",
              "in": "path",
              "value": "$inputs.contributor_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "display_name": "$response.body",
            "portfolio_url": "$response.body",
            "styles": "$response.body",
            "subjects": "$response.body"
          }
        },
        {
          "stepId": "get-contributor-collections",
          "description": "List the public collections created by the contributor.",
          "operationId": "getContributorCollectionsList",
          "parameters": [
            {
              "name": "contributor_id",
              "in": "path",
              "value": "$steps.get-contributor-details.outputs.id"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data.id": "$response.body",
            "data.name": "$response.body",
            "data.total_item_count": "$response.body"
          }
        }
      ],
      "outputs": {
        "data.id": "$steps.get-contributor-collections.outputs.data.id",
        "data.contributor.id": "$steps.search-media-by-contributor.outputs.data.contributor.id",
        "id": "$steps.get-contributor-details.outputs.id",
        "display_name": "$steps.get-contributor-details.outputs.display_name",
        "portfolio_url": "$steps.get-contributor-details.outputs.portfolio_url",
        "styles": "$steps.get-contributor-details.outputs.styles",
        "subjects": "$steps.get-contributor-details.outputs.subjects",
        "data.name": "$steps.get-contributor-collections.outputs.data.name",
        "data.total_item_count": "$steps.get-contributor-collections.outputs.data.total_item_count"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}