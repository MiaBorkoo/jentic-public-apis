{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/musixmatch.com/main/1.1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "find-track-and-get-lyrics",
      "summary": "Search for a track by title, artist, or lyrics content, and then retrieve its full lyrics using the track ID obtained from the search results. This is a fundamental workflow for applications needing to display song lyrics.",
      "description": "Search for a track by title, artist, or lyrics content, and then retrieve its full lyrics using the track ID obtained from the search results. This is a fundamental workflow for applications needing to display song lyrics.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_track": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "q_lyrics": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "f_music_genre_id": {
            "type": "string"
          },
          "f_lyrics_language": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          },
          "s_artist_rating": {
            "type": "string"
          },
          "s_track_rating": {
            "type": "string"
          },
          "quorum_factor": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-track",
          "description": "Search for tracks based on query parameters like track title, artist name, or lyrics snippet. Returns a list of matching tracks.",
          "operationPath": "openapi_source#/paths/~1track.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_track",
              "in": "query",
              "value": "$inputs.q_track"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "q_lyrics",
              "in": "query",
              "value": "$inputs.q_lyrics"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "f_music_genre_id",
              "in": "query",
              "value": "$inputs.f_music_genre_id"
            },
            {
              "name": "f_lyrics_language",
              "in": "query",
              "value": "$inputs.f_lyrics_language"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "s_artist_rating",
              "in": "query",
              "value": "$inputs.s_artist_rating"
            },
            {
              "name": "s_track_rating",
              "in": "query",
              "value": "$inputs.s_track_rating"
            },
            {
              "name": "quorum_factor",
              "in": "query",
              "value": "$inputs.quorum_factor"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "track_list": "$response.body"
          }
        },
        {
          "stepId": "get-lyrics",
          "description": "Retrieve the full lyrics for a specific track using its Musixmatch track ID.",
          "operationPath": "openapi_source#/paths/~1track.lyrics.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "track_id",
              "in": "query",
              "value": "$steps.search-track.outputs.track_list.track.track_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lyrics_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "track_list": "$steps.search-track.outputs.track_list",
        "lyrics_data": "$steps.get-lyrics.outputs.lyrics_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "match-track-and-get-lyrics",
      "summary": "Find the best matching track for a given artist and title using the matcher endpoint, then retrieve its lyrics. Ideal for integrating with an existing music library where track/artist names are known.",
      "description": "Find the best matching track for a given artist and title using the matcher endpoint, then retrieve its lyrics. Ideal for integrating with an existing music library where track/artist names are known.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "q_track": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          },
          "f_has_subtitle": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "match-track",
          "description": "Find the single best matching track based on artist and track title.",
          "operationPath": "openapi_source#/paths/~1matcher.track.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "q_track",
              "in": "query",
              "value": "$inputs.q_track"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "f_has_subtitle",
              "in": "query",
              "value": "$inputs.f_has_subtitle"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "matched_track": "$response.body"
          }
        },
        {
          "stepId": "get-matched-lyrics",
          "description": "Retrieve the full lyrics for the matched track using its Musixmatch track ID.",
          "operationPath": "openapi_source#/paths/~1track.lyrics.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "track_id",
              "in": "query",
              "value": "$steps.match-track.outputs.matched_track.track_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lyrics_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "matched_track": "$steps.match-track.outputs.matched_track",
        "lyrics_data": "$steps.get-matched-lyrics.outputs.lyrics_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-track-and-get-synchronized-subtitles",
      "summary": "Search for a track that has synchronized lyrics (subtitles) available and retrieve them. Useful for karaoke applications or features requiring timed lyric display.",
      "description": "Search for a track that has synchronized lyrics (subtitles) available and retrieve them. Useful for karaoke applications or features requiring timed lyric display.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_track": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "q_lyrics": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "f_music_genre_id": {
            "type": "string"
          },
          "f_lyrics_language": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          },
          "s_artist_rating": {
            "type": "string"
          },
          "s_track_rating": {
            "type": "string"
          },
          "quorum_factor": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-track-with-subtitles",
          "description": "Search for tracks, filtering specifically for those that have subtitles available.",
          "operationPath": "openapi_source#/paths/~1track.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_track",
              "in": "query",
              "value": "$inputs.q_track"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "q_lyrics",
              "in": "query",
              "value": "$inputs.q_lyrics"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "f_music_genre_id",
              "in": "query",
              "value": "$inputs.f_music_genre_id"
            },
            {
              "name": "f_lyrics_language",
              "in": "query",
              "value": "$inputs.f_lyrics_language"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "s_artist_rating",
              "in": "query",
              "value": "$inputs.s_artist_rating"
            },
            {
              "name": "s_track_rating",
              "in": "query",
              "value": "$inputs.s_track_rating"
            },
            {
              "name": "quorum_factor",
              "in": "query",
              "value": "$inputs.quorum_factor"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "track_list": "$response.body"
          }
        },
        {
          "stepId": "get-subtitles",
          "description": "Retrieve the synchronized subtitle data (e.g., LRC or other timed format) for a specific track ID.",
          "operationPath": "openapi_source#/paths/~1track.subtitle.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "track_id",
              "in": "query",
              "value": "$steps.search-track-with-subtitles.outputs.track_list.track.track_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subtitle_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "track_list": "$steps.search-track-with-subtitles.outputs.track_list",
        "subtitle_data": "$steps.get-subtitles.outputs.subtitle_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-artist-discography",
      "summary": "Allow users to search for an artist, view their albums (potentially sorted by release date), and then list the tracks for a selected album.",
      "description": "Allow users to search for an artist, view their albums (potentially sorted by release date), and then list the tracks for a selected album.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "artist_id": {
            "type": "string"
          },
          "s_release_date": {
            "type": "string"
          },
          "g_album_name": {
            "type": "string"
          },
          "album_id": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-artist",
          "description": "Search for an artist by name.",
          "operationPath": "openapi_source#/paths/~1artist.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "artist_list": "$response.body"
          }
        },
        {
          "stepId": "get-artist-albums",
          "description": "Retrieve a list of albums for a specific artist ID, optionally sorted by release date.",
          "operationPath": "openapi_source#/paths/~1artist.albums.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "artist_id",
              "in": "query",
              "value": "$steps.search-artist.outputs.artist_list.artist.artist_id"
            },
            {
              "name": "s_release_date",
              "in": "query",
              "value": "$inputs.s_release_date"
            },
            {
              "name": "g_album_name",
              "in": "query",
              "value": "$inputs.g_album_name"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "album_list": "$response.body"
          }
        },
        {
          "stepId": "get-album-tracks",
          "description": "Retrieve the list of tracks for a specific album ID.",
          "operationPath": "openapi_source#/paths/~1album.tracks.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "album_id",
              "in": "query",
              "value": "$steps.get-artist-albums.outputs.album_list.album.album_id"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "track_list": "$response.body"
          }
        }
      ],
      "outputs": {
        "artist_list": "$steps.search-artist.outputs.artist_list",
        "album_list": "$steps.get-artist-albums.outputs.album_list",
        "track_list": "$steps.get-album-tracks.outputs.track_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-full-album-information-and-tracklist",
      "summary": "Retrieve detailed metadata about a specific album (like release date, genres, label) along with its complete tracklist.",
      "description": "Retrieve detailed metadata about a specific album (like release date, genres, label) along with its complete tracklist.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "artist_id": {
            "type": "string"
          },
          "s_release_date": {
            "type": "string"
          },
          "g_album_name": {
            "type": "string"
          },
          "album_id": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-artist-for-album",
          "description": "Find the artist first to locate their albums.",
          "operationPath": "openapi_source#/paths/~1artist.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "artist_list": "$response.body"
          }
        },
        {
          "stepId": "find-artist-albums",
          "description": "Get the list of albums for the found artist.",
          "operationPath": "openapi_source#/paths/~1artist.albums.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "artist_id",
              "in": "query",
              "value": "$steps.search-artist-for-album.outputs.artist_list.artist.artist_id"
            },
            {
              "name": "s_release_date",
              "in": "query",
              "value": "$inputs.s_release_date"
            },
            {
              "name": "g_album_name",
              "in": "query",
              "value": "$inputs.g_album_name"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "album_list": "$response.body"
          }
        },
        {
          "stepId": "get-album-details",
          "description": "Retrieve detailed information for a specific album ID selected from the list.",
          "operationPath": "openapi_source#/paths/~1album.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "album_id",
              "in": "query",
              "value": "$steps.find-artist-albums.outputs.album_list.album.album_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "album_details": "$response.body"
          }
        },
        {
          "stepId": "get-tracks-for-detailed-album",
          "description": "Retrieve the tracklist for the specific album whose details were fetched.",
          "operationPath": "openapi_source#/paths/~1album.tracks.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "album_id",
              "in": "query",
              "value": "$steps.get-album-details.outputs.album_details.album_id"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "album_track_list": "$response.body"
          }
        }
      ],
      "outputs": {
        "artist_list": "$steps.search-artist-for-album.outputs.artist_list",
        "album_list": "$steps.find-artist-albums.outputs.album_list",
        "album_details": "$steps.get-album-details.outputs.album_details",
        "album_track_list": "$steps.get-tracks-for-detailed-album.outputs.album_track_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "discover-top-tracks-in-a-country",
      "summary": "Fetch the list of currently popular tracks in a specific country's chart, and optionally retrieve the lyrics for the number one track.",
      "description": "Fetch the list of currently popular tracks in a specific country's chart, and optionally retrieve the lyrics for the number one track.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-top-tracks",
          "description": "Retrieve the list of top charting tracks for a given country.",
          "operationPath": "openapi_source#/paths/~1chart.tracks.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "top_track_list": "$response.body"
          }
        },
        {
          "stepId": "get-top-track-lyrics",
          "description": "Retrieve the lyrics for the top track from the chart.",
          "operationPath": "openapi_source#/paths/~1track.lyrics.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "track_id",
              "in": "query",
              "value": "$steps.get-top-tracks.outputs.top_track_list.track.track_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lyrics_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "top_track_list": "$steps.get-top-tracks.outputs.top_track_list",
        "lyrics_data": "$steps.get-top-track-lyrics.outputs.lyrics_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-related-artists-for-discovery",
      "summary": "Help users discover new music by finding artists similar to one they already know.",
      "description": "Help users discover new music by finding artists similar to one they already know.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "artist_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-seed-artist",
          "description": "Search for the initial artist by name.",
          "operationPath": "openapi_source#/paths/~1artist.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "artist_list": "$response.body"
          }
        },
        {
          "stepId": "get-related-artists",
          "description": "Retrieve a list of artists related to the specified artist ID.",
          "operationPath": "openapi_source#/paths/~1artist.related.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "artist_id",
              "in": "query",
              "value": "$steps.find-seed-artist.outputs.artist_list.artist.artist_id"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "related_artist_list": "$response.body"
          }
        }
      ],
      "outputs": {
        "artist_list": "$steps.find-seed-artist.outputs.artist_list",
        "related_artist_list": "$steps.get-related-artists.outputs.related_artist_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-track-snippet-for-preview",
      "summary": "Search for a track and retrieve a short snippet of its lyrics. Useful for displaying previews or in identification features.",
      "description": "Search for a track and retrieve a short snippet of its lyrics. Useful for displaying previews or in identification features.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "q_track": {
            "type": "string"
          },
          "q_artist": {
            "type": "string"
          },
          "q_lyrics": {
            "type": "string"
          },
          "f_artist_id": {
            "type": "string"
          },
          "f_music_genre_id": {
            "type": "string"
          },
          "f_lyrics_language": {
            "type": "string"
          },
          "f_has_lyrics": {
            "type": "string"
          },
          "s_artist_rating": {
            "type": "string"
          },
          "s_track_rating": {
            "type": "string"
          },
          "quorum_factor": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "track_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-track-for-snippet",
          "description": "Search for tracks based on query parameters.",
          "operationPath": "openapi_source#/paths/~1track.search/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "q_track",
              "in": "query",
              "value": "$inputs.q_track"
            },
            {
              "name": "q_artist",
              "in": "query",
              "value": "$inputs.q_artist"
            },
            {
              "name": "q_lyrics",
              "in": "query",
              "value": "$inputs.q_lyrics"
            },
            {
              "name": "f_artist_id",
              "in": "query",
              "value": "$inputs.f_artist_id"
            },
            {
              "name": "f_music_genre_id",
              "in": "query",
              "value": "$inputs.f_music_genre_id"
            },
            {
              "name": "f_lyrics_language",
              "in": "query",
              "value": "$inputs.f_lyrics_language"
            },
            {
              "name": "f_has_lyrics",
              "in": "query",
              "value": "$inputs.f_has_lyrics"
            },
            {
              "name": "s_artist_rating",
              "in": "query",
              "value": "$inputs.s_artist_rating"
            },
            {
              "name": "s_track_rating",
              "in": "query",
              "value": "$inputs.s_track_rating"
            },
            {
              "name": "quorum_factor",
              "in": "query",
              "value": "$inputs.quorum_factor"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "track_list": "$response.body"
          }
        },
        {
          "stepId": "get-track-snippet",
          "description": "Retrieve a snippet (a small portion) of the lyrics for a specific track ID.",
          "operationPath": "openapi_source#/paths/~1track.snippet.get/get",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "track_id",
              "in": "query",
              "value": "$steps.search-track-for-snippet.outputs.track_list.track.track_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "snippet_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "track_list": "$steps.search-track-for-snippet.outputs.track_list",
        "snippet_data": "$steps.get-track-snippet.outputs.snippet_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}