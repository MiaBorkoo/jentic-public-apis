{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/rubrikinc.github.io/main/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "register-and-protect-a-vmware-virtual-machine",
      "summary": "Integrates a vCenter Server with the Rubrik cluster, allowing for discovery of virtual machines, and then assigns an SLA Domain to a specific VM for automated data protection.",
      "description": "Integrates a vCenter Server with the Rubrik cluster, allowing for discovery of virtual machines, and then assigns an SLA Domain to a specific VM for automated data protection.",
      "inputs": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "effective_sla_domain_id": {
            "type": "string"
          },
          "primary_cluster_id": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "is_relic": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "moid": {
            "type": "string"
          },
          "sla_assignment": {
            "type": "string"
          },
          "guest_os_name": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "data_sources": {
            "type": "string"
          },
          "snapshot_ids": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-vcenter-server",
          "description": "Adds a vCenter Server to the Rubrik cluster, initiating an asynchronous job to establish connection and discover metadata.",
          "operationId": "createVcenter",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "hostname": "$inputs.hostname",
              "password": "$inputs.password",
              "username": "$inputs.username"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_id": "$response.body#/id"
          }
        },
        {
          "stepId": "monitor-vcenter-add-status",
          "description": "Monitors the asynchronous job status for adding the vCenter Server until it succeeds, retrieving the resulting vCenter URL.",
          "operationId": "getVcenterAsyncRequestStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.add-vcenter-server.outputs.request_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status",
            "vcenter_result_link": "$response.body#/vcenter_result_link"
          }
        },
        {
          "stepId": "query-vms",
          "description": "Retrieves a list of discovered virtual machines from the Rubrik cluster, which can be filtered by name or primary cluster ID.",
          "operationId": "queryVm",
          "parameters": [
            {
              "name": "effective_sla_domain_id",
              "in": "query",
              "value": "$inputs.effective_sla_domain_id"
            },
            {
              "name": "primary_cluster_id",
              "in": "query",
              "value": "$inputs.primary_cluster_id"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "is_relic",
              "in": "query",
              "value": "$inputs.is_relic"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "moid",
              "in": "query",
              "value": "$inputs.moid"
            },
            {
              "name": "sla_assignment",
              "in": "query",
              "value": "$inputs.sla_assignment"
            },
            {
              "name": "guest_os_name",
              "in": "query",
              "value": "$inputs.guest_os_name"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "vm_id": "$response.body#/vm_id"
          }
        },
        {
          "stepId": "query-sla-domains",
          "description": "Retrieves a list of available SLA Domains configured on the Rubrik cluster.",
          "operationId": "querySlaDomain",
          "parameters": [
            {
              "name": "primary_cluster_id",
              "in": "query",
              "value": "$inputs.primary_cluster_id"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            },
            {
              "name": "data_sources",
              "in": "query",
              "value": "$inputs.data_sources"
            },
            {
              "name": "snapshot_ids",
              "in": "query",
              "value": "$inputs.snapshot_ids"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sla_domain_id": "$response.body#/sla_domain_id"
          }
        },
        {
          "stepId": "assign-vm-to-sla",
          "description": "Assigns the selected virtual machine to a specific SLA Domain for automated protection.",
          "operationId": "updateVm",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.query-vms.outputs.vm_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.query-vms.outputs.vm_id",
              "configuredSlaDomainId": "$steps.query-sla-domains.outputs.sla_domain_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "vm_id_assigned": "$response.body#/vm_id_assigned",
            "configured_sla_domain_id": "$response.body#/configured_sla_domain_id"
          }
        }
      ],
      "outputs": {
        "request_id": "$steps.add-vcenter-server.outputs.request_id",
        "status": "$steps.monitor-vcenter-add-status.outputs.status",
        "vcenter_result_link": "$steps.monitor-vcenter-add-status.outputs.vcenter_result_link",
        "vm_id": "$steps.query-vms.outputs.vm_id",
        "sla_domain_id": "$steps.query-sla-domains.outputs.sla_domain_id",
        "vm_id_assigned": "$steps.assign-vm-to-sla.outputs.vm_id_assigned",
        "configured_sla_domain_id": "$steps.assign-vm-to-sla.outputs.configured_sla_domain_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "on-demand-vm-snapshot-and-file-recovery",
      "summary": "Takes an immediate, on-demand snapshot of a VMware virtual machine and then recovers a specific file from that snapshot to its original location.",
      "description": "Takes an immediate, on-demand snapshot of a VMware virtual machine and then recovers a specific file from that snapshot to its original location.",
      "inputs": {
        "type": "object",
        "properties": {
          "effective_sla_domain_id": {
            "type": "string"
          },
          "primary_cluster_id": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "is_relic": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "moid": {
            "type": "string"
          },
          "sla_assignment": {
            "type": "string"
          },
          "guest_os_name": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "slaId": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-vm-for-snapshot",
          "description": "Identifies a specific virtual machine by name to perform a snapshot operation.",
          "operationId": "queryVm",
          "parameters": [
            {
              "name": "effective_sla_domain_id",
              "in": "query",
              "value": "$inputs.effective_sla_domain_id"
            },
            {
              "name": "primary_cluster_id",
              "in": "query",
              "value": "$inputs.primary_cluster_id"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "is_relic",
              "in": "query",
              "value": "$inputs.is_relic"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "moid",
              "in": "query",
              "value": "$inputs.moid"
            },
            {
              "name": "sla_assignment",
              "in": "query",
              "value": "$inputs.sla_assignment"
            },
            {
              "name": "guest_os_name",
              "in": "query",
              "value": "$inputs.guest_os_name"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "vm_id": "$response.body#/vm_id"
          }
        },
        {
          "stepId": "create-on-demand-vm-snapshot",
          "description": "Initiates an on-demand snapshot for the specified virtual machine, optionally assigning it to an SLA Domain.",
          "operationId": "createOnDemandBackup",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.query-vm-for-snapshot.outputs.vm_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.query-vm-for-snapshot.outputs.vm_id",
              "slaId": "$inputs.slaId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_id": "$response.body#/id"
          }
        },
        {
          "stepId": "monitor-snapshot-job-status",
          "description": "Monitors the asynchronous snapshot job's progress and status until completion, retrieving the URL of the created snapshot resource.",
          "operationId": "getAsyncRequestStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-on-demand-vm-snapshot.outputs.request_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_status": "$response.body#/request_status",
            "snapshot_result_link": "$response.body#/snapshot_result_link"
          }
        },
        {
          "stepId": "browse-vm-snapshot-files",
          "description": "Browses the file system of the newly created snapshot at a specified path to locate the desired file or folder.",
          "operationId": "browseVmwareSnapshot",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.monitor-snapshot-job-status.outputs.snapshot_result_link"
            },
            {
              "name": "path",
              "in": "query",
              "value": "$inputs.path"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "file_path": "$response.body#/file_path"
          }
        },
        {
          "stepId": "download-file-from-vm-snapshot",
          "description": "Initiates a job to download the specified file or folder from the VM snapshot to a local location.",
          "operationId": "createDownloadFileJob",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.monitor-snapshot-job-status.outputs.snapshot_result_link"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.monitor-snapshot-job-status.outputs.snapshot_result_link",
              "path": "$steps.browse-vm-snapshot-files.outputs.file_path"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "download_request_id": "$response.body#/id"
          }
        }
      ],
      "outputs": {
        "vm_id": "$steps.query-vm-for-snapshot.outputs.vm_id",
        "request_id": "$steps.create-on-demand-vm-snapshot.outputs.request_id",
        "request_status": "$steps.monitor-snapshot-job-status.outputs.request_status",
        "snapshot_result_link": "$steps.monitor-snapshot-job-status.outputs.snapshot_result_link",
        "file_path": "$steps.browse-vm-snapshot-files.outputs.file_path",
        "download_request_id": "$steps.download-file-from-vm-snapshot.outputs.download_request_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "user-session-management",
      "summary": "Authenticates a user to establish an API session and then demonstrates how to explicitly close that session.",
      "description": "Authenticates a user to establish an API session and then demonstrates how to explicitly close that session.",
      "inputs": {
        "type": "object",
        "properties": {
          "organization_id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-session",
          "description": "Authenticates user credentials (typically via BasicAuth header) to create a new API session and obtain a session token.",
          "operationId": "createSession",
          "parameters": [
            {
              "name": "organization_id",
              "in": "query",
              "value": "$inputs.organization_id"
            },
            {
              "name": "realm",
              "in": "query",
              "value": "$inputs.realm"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "token": "$response.body#/token",
            "userId": "$response.body#/userId"
          }
        },
        {
          "stepId": "delete-session",
          "description": "Closes the active user session and invalidates its token, requiring the session ID and the bearer token for authorization.",
          "operationId": "deleteSession",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-session.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "session_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-session.outputs.id",
        "token": "$steps.create-session.outputs.token",
        "userId": "$steps.create-session.outputs.userId",
        "session_data": "$steps.delete-session.outputs.session_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "live-mount-and-unmount-a-vmware-virtual-machine",
      "summary": "Creates a temporary Live Mount of a VMware VM from a snapshot for testing or data access, demonstrates changing its power state, and then unmounts it to release resources.",
      "description": "Creates a temporary Live Mount of a VMware VM from a snapshot for testing or data access, demonstrates changing its power state, and then unmounts it to release resources.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "powerStatus": {
            "type": "string"
          },
          "force": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-vm-snapshots",
          "description": "Retrieves a list of available snapshots for a specific virtual machine.",
          "operationId": "querySnapshot",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "snapshot_id": "$response.body#/snapshot_id"
          }
        },
        {
          "stepId": "create-live-mount",
          "description": "Initiates a Live Mount operation to create a new virtual machine from the selected snapshot.",
          "operationId": "createMountV1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.query-vm-snapshots.outputs.snapshot_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.query-vm-snapshots.outputs.snapshot_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "mount_request_id": "$response.body#/id"
          }
        },
        {
          "stepId": "monitor-live-mount-status",
          "description": "Monitors the asynchronous Live Mount job status until completion, providing the URL of the mounted VM resource.",
          "operationId": "getAsyncRequestStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-live-mount.outputs.mount_request_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_status": "$response.body#/request_status",
            "mounted_vm_url": "$response.body#/mounted_vm_url"
          }
        },
        {
          "stepId": "get-live-mount-details",
          "description": "Retrieves detailed information about the active Live Mount, including its current power status.",
          "operationId": "getMountV1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.monitor-live-mount-status.outputs.mounted_vm_url"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "mount_id": "$response.body#/mount_id",
            "current_power_status": "$response.body#/current_power_status"
          }
        },
        {
          "stepId": "update-live-mount-power-status",
          "description": "Changes the power status of the mounted virtual machine (e.g., powers it off).",
          "operationId": "updateMount",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-live-mount-details.outputs.mount_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.get-live-mount-details.outputs.mount_id",
              "powerStatus": "$inputs.powerStatus"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "new_power_status": "$response.body#/new_power_status"
          }
        },
        {
          "stepId": "delete-live-mount",
          "description": "Deletes the Live Mount and its associated resources, optionally forcing the unmount.",
          "operationId": "createUnmount",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-live-mount-details.outputs.mount_id"
            },
            {
              "name": "force",
              "in": "query",
              "value": "$inputs.force"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "unmount_request_id": "$response.body#/id"
          }
        }
      ],
      "outputs": {
        "snapshot_id": "$steps.query-vm-snapshots.outputs.snapshot_id",
        "mount_request_id": "$steps.create-live-mount.outputs.mount_request_id",
        "request_status": "$steps.monitor-live-mount-status.outputs.request_status",
        "mounted_vm_url": "$steps.monitor-live-mount-status.outputs.mounted_vm_url",
        "mount_id": "$steps.get-live-mount-details.outputs.mount_id",
        "current_power_status": "$steps.get-live-mount-details.outputs.current_power_status",
        "new_power_status": "$steps.update-live-mount-power-status.outputs.new_power_status",
        "unmount_request_id": "$steps.delete-live-mount.outputs.unmount_request_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "sql-server-database-protection-and-restore",
      "summary": "Assigns an SLA Domain to a SQL Server database for automated protection, initiates an on-demand backup, and then restores the database to a specific point in time.",
      "description": "Assigns an SLA Domain to a SQL Server database for automated protection, initiates an on-demand backup, and then restores the database to a specific point in time.",
      "inputs": {
        "type": "object",
        "properties": {
          "instance_id": {
            "type": "string"
          },
          "availability_group_id": {
            "type": "string"
          },
          "effective_sla_domain_id": {
            "type": "string"
          },
          "primary_cluster_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sla_assignment": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "is_relic": {
            "type": "string"
          },
          "is_live_mount": {
            "type": "string"
          },
          "is_log_shipping_secondary": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "include_backup_task_info": {
            "type": "string"
          },
          "data_sources": {
            "type": "string"
          },
          "snapshot_ids": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "after_time": {
            "type": "string"
          },
          "before_time": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-mssql-dbs",
          "description": "Retrieves a list of discovered Microsoft SQL Server databases, allowing filtering by name or instance ID.",
          "operationId": "queryMssqlDb",
          "parameters": [
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "availability_group_id",
              "in": "query",
              "value": "$inputs.availability_group_id"
            },
            {
              "name": "effective_sla_domain_id",
              "in": "query",
              "value": "$inputs.effective_sla_domain_id"
            },
            {
              "name": "primary_cluster_id",
              "in": "query",
              "value": "$inputs.primary_cluster_id"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "sla_assignment",
              "in": "query",
              "value": "$inputs.sla_assignment"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "is_relic",
              "in": "query",
              "value": "$inputs.is_relic"
            },
            {
              "name": "is_live_mount",
              "in": "query",
              "value": "$inputs.is_live_mount"
            },
            {
              "name": "is_log_shipping_secondary",
              "in": "query",
              "value": "$inputs.is_log_shipping_secondary"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            },
            {
              "name": "include_backup_task_info",
              "in": "query",
              "value": "$inputs.include_backup_task_info"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "db_id": "$response.body#/db_id"
          }
        },
        {
          "stepId": "query-sla-domains-for-mssql",
          "description": "Retrieves available SLA Domains configured on the Rubrik cluster.",
          "operationId": "querySlaDomain",
          "parameters": [
            {
              "name": "primary_cluster_id",
              "in": "query",
              "value": "$inputs.primary_cluster_id"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            },
            {
              "name": "data_sources",
              "in": "query",
              "value": "$inputs.data_sources"
            },
            {
              "name": "snapshot_ids",
              "in": "query",
              "value": "$inputs.snapshot_ids"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sla_domain_id": "$response.body#/sla_domain_id"
          }
        },
        {
          "stepId": "assign-mssql-db-to-sla",
          "description": "Assigns the selected SQL Server database to an SLA Domain for automated protection.",
          "operationId": "updateMssqlDb",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.query-mssql-dbs.outputs.db_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.query-mssql-dbs.outputs.db_id",
              "configuredSlaDomainId": "$steps.query-sla-domains-for-mssql.outputs.sla_domain_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "db_id_assigned": "$response.body#/db_id_assigned"
          }
        },
        {
          "stepId": "create-on-demand-mssql-snapshot",
          "description": "Initiates an on-demand snapshot for the specified SQL Server database, optionally forcing a full backup.",
          "operationId": "createOnDemandMssqlBackup",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_id": "$response.body#/id"
          }
        },
        {
          "stepId": "monitor-mssql-snapshot-job-status",
          "description": "Monitors the asynchronous snapshot job's progress and status until completion, providing the URL of the created snapshot resource.",
          "operationId": "getMssqlAsyncRequestStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-on-demand-mssql-snapshot.outputs.request_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_status": "$response.body#/request_status",
            "snapshot_url": "$response.body#/snapshot_url"
          }
        },
        {
          "stepId": "get-mssql-db-recoverable-ranges",
          "description": "Retrieves available recoverable time ranges for the SQL Server database, useful for point-in-time recovery.",
          "operationId": "getMssqlDbRecoverableRanges",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned"
            },
            {
              "name": "after_time",
              "in": "query",
              "value": "$inputs.after_time"
            },
            {
              "name": "before_time",
              "in": "query",
              "value": "$inputs.before_time"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "recovery_point_time": "$response.body#/recovery_point_time"
          }
        },
        {
          "stepId": "restore-mssql-db",
          "description": "Restores the SQL Server database to a specific recovery point, with options for recovery model and data streams.",
          "operationId": "createRestoreMssqlDb",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned",
              "recoveryPoint": "$steps.get-mssql-db-recoverable-ranges.outputs.recovery_point_time"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "restore_request_id": "$response.body#/id"
          }
        }
      ],
      "outputs": {
        "db_id": "$steps.query-mssql-dbs.outputs.db_id",
        "sla_domain_id": "$steps.query-sla-domains-for-mssql.outputs.sla_domain_id",
        "db_id_assigned": "$steps.assign-mssql-db-to-sla.outputs.db_id_assigned",
        "request_id": "$steps.create-on-demand-mssql-snapshot.outputs.request_id",
        "request_status": "$steps.monitor-mssql-snapshot-job-status.outputs.request_status",
        "snapshot_url": "$steps.monitor-mssql-snapshot-job-status.outputs.snapshot_url",
        "recovery_point_time": "$steps.get-mssql-db-recoverable-ranges.outputs.recovery_point_time",
        "restore_request_id": "$steps.restore-mssql-db.outputs.restore_request_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-legal-holds-on-snapshots",
      "summary": "Applies a legal hold to a specific snapshot for compliance purposes, retrieves information about objects under legal hold, and then dissolves the legal hold when no longer needed.",
      "description": "Applies a legal hold to a specific snapshot for compliance purposes, retrieves information about objects under legal hold, and then dissolves the legal hold when no longer needed.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "holdConfig": {
            "type": "string"
          },
          "object_id": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "object_name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-vm-snapshots-for-legal-hold",
          "description": "Retrieves a list of snapshots for a specified virtual machine to identify a target for legal hold.",
          "operationId": "querySnapshot",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "snapshot_id": "$response.body#/snapshot_id",
            "vm_id": "$response.body#/vm_id"
          }
        },
        {
          "stepId": "apply-legal-hold",
          "description": "Applies a legal hold to the selected snapshot, preventing its deletion until the hold is explicitly dissolved.",
          "operationId": "applyLegalHold",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "snapshotId": "$steps.query-vm-snapshots-for-legal-hold.outputs.snapshot_id",
              "holdConfig": "$inputs.holdConfig"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "held_snapshot_id": "$response.body#/held_snapshot_id",
            "held_object_id": "$response.body#/held_object_id"
          }
        },
        {
          "stepId": "get-objects-under-legal-hold",
          "description": "Retrieves a list of objects that currently have one or more snapshots under legal hold, optionally filtered by object ID.",
          "operationId": "getLegalHoldObjects",
          "parameters": [
            {
              "name": "object_id",
              "in": "query",
              "value": "$steps.apply-legal-hold.outputs.held_object_id"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "object_name",
              "in": "query",
              "value": "$inputs.object_name"
            },
            {
              "name": "object_type",
              "in": "query",
              "value": "$inputs.object_type"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "object_id_with_hold": "$response.body#/object_id_with_hold"
          }
        },
        {
          "stepId": "dissolve-legal-hold",
          "description": "Dissolves the legal hold from the specified snapshot(s) for a given object, allowing them to be expired according to their SLA policies.",
          "operationId": "dissolveLegalHoldSnapshots",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.apply-legal-hold.outputs.held_object_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.apply-legal-hold.outputs.held_object_id",
              "snapshotIds": "$steps.apply-legal-hold.outputs.held_snapshot_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dissolved_snapshot_ids": "$response.body#/dissolvedSnapshotIds"
          }
        }
      ],
      "outputs": {
        "snapshot_id": "$steps.query-vm-snapshots-for-legal-hold.outputs.snapshot_id",
        "vm_id": "$steps.query-vm-snapshots-for-legal-hold.outputs.vm_id",
        "held_snapshot_id": "$steps.apply-legal-hold.outputs.held_snapshot_id",
        "held_object_id": "$steps.apply-legal-hold.outputs.held_object_id",
        "object_id_with_hold": "$steps.get-objects-under-legal-hold.outputs.object_id_with_hold",
        "dissolved_snapshot_ids": "$steps.dissolve-legal-hold.outputs.dissolved_snapshot_ids"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "monitor-job-activity-and-generate-reports",
      "summary": "Provides a comprehensive overview of Rubrik cluster job activities by retrieving job monitoring information, summarizing job counts by type and state, and generating a downloadable CSV report.",
      "description": "Provides a comprehensive overview of Rubrik cluster job activities by retrieving job monitoring information, summarizing job counts by type and state, and generating a downloadable CSV report.",
      "inputs": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "string"
          },
          "job_event_status": {
            "type": "string"
          },
          "job_type": {
            "type": "string"
          },
          "should_include_log_related_job": {
            "type": "string"
          },
          "is_first_full": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "object_name": {
            "type": "string"
          },
          "node_name": {
            "type": "string"
          },
          "effective_sla_domain_id": {
            "type": "string"
          },
          "is_on_demand": {
            "type": "string"
          },
          "last_update_time": {
            "type": "string"
          },
          "after_id": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          },
          "job_monitoring_state": {
            "type": "string"
          },
          "job_types": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-job-monitoring-info",
          "description": "Fetches a detailed list of protection and recovery jobs that are currently running, scheduled, or recently completed, with various filtering options.",
          "operationId": "getJobMonitoringInfo",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "job_event_status",
              "in": "query",
              "value": "$inputs.job_event_status"
            },
            {
              "name": "job_type",
              "in": "query",
              "value": "$inputs.job_type"
            },
            {
              "name": "should_include_log_related_job",
              "in": "query",
              "value": "$inputs.should_include_log_related_job"
            },
            {
              "name": "is_first_full",
              "in": "query",
              "value": "$inputs.is_first_full"
            },
            {
              "name": "object_type",
              "in": "query",
              "value": "$inputs.object_type"
            },
            {
              "name": "object_name",
              "in": "query",
              "value": "$inputs.object_name"
            },
            {
              "name": "node_name",
              "in": "query",
              "value": "$inputs.node_name"
            },
            {
              "name": "effective_sla_domain_id",
              "in": "query",
              "value": "$inputs.effective_sla_domain_id"
            },
            {
              "name": "is_on_demand",
              "in": "query",
              "value": "$inputs.is_on_demand"
            },
            {
              "name": "last_update_time",
              "in": "query",
              "value": "$inputs.last_update_time"
            },
            {
              "name": "after_id",
              "in": "query",
              "value": "$inputs.after_id"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "sort_order",
              "in": "query",
              "value": "$inputs.sort_order"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "job_monitoring_list": "$response.body#/jobMonitoringInfoList"
          }
        },
        {
          "stepId": "get-job-counts-by-type",
          "description": "Retrieves a summary of job counts categorized by job type (e.g., backup, archival, replication) for a specified job monitoring state.",
          "operationId": "getMonitoringJobCountByJobType",
          "parameters": [
            {
              "name": "job_monitoring_state",
              "in": "query",
              "value": "$inputs.job_monitoring_state"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "job_counts_by_type": "$response.body#/job_counts_by_type"
          }
        },
        {
          "stepId": "get-job-counts-by-state",
          "description": "Retrieves a summary of job counts categorized by overall job state (e.g., active, scheduled, success, failure) across all job types.",
          "operationId": "getMonitoringJobCountByJobState",
          "parameters": [
            {
              "name": "job_types",
              "in": "query",
              "value": "$inputs.job_types"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "job_counts_by_state": "$response.body#/job_counts_by_state"
          }
        },
        {
          "stepId": "get-job-monitoring-csv-link",
          "description": "Generates a downloadable CSV link containing detailed job monitoring information, filtered by specified criteria.",
          "operationId": "getJobMonitoringInfoCsvDownloadLink",
          "parameters": [
            {
              "name": "job_monitoring_state",
              "in": "query",
              "value": "$inputs.job_monitoring_state"
            },
            {
              "name": "job_event_status",
              "in": "query",
              "value": "$inputs.job_event_status"
            },
            {
              "name": "job_type",
              "in": "query",
              "value": "$inputs.job_type"
            },
            {
              "name": "should_include_log_related_job",
              "in": "query",
              "value": "$inputs.should_include_log_related_job"
            },
            {
              "name": "object_type",
              "in": "query",
              "value": "$inputs.object_type"
            },
            {
              "name": "object_name",
              "in": "query",
              "value": "$inputs.object_name"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "csv_download_link": "$response.body#/downloadLink"
          }
        }
      ],
      "outputs": {
        "job_monitoring_list": "$steps.get-job-monitoring-info.outputs.job_monitoring_list",
        "job_counts_by_type": "$steps.get-job-counts-by-type.outputs.job_counts_by_type",
        "job_counts_by_state": "$steps.get-job-counts-by-state.outputs.job_counts_by_state",
        "csv_download_link": "$steps.get-job-monitoring-csv-link.outputs.csv_download_link"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
