{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/trashnothing.com/main/1.4/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "discover-and-view-item-details",
      "summary": "This workflow allows a user to search for items (posts) based on keywords and location, and then retrieve comprehensive details about a selected item, including information about the original poster and associated groups. This is a fundamental user journey for finding and learning about available items.",
      "description": "This workflow allows a user to search for items (posts) based on keywords and location, and then retrieve comprehensive details about a selected item, including information about the original poster and associated groups. This is a fundamental user journey for finding and learning about available items.",
      "inputs": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "types": {
            "type": "string"
          },
          "sources": {
            "type": "string"
          },
          "group_ids": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "device_pixel_ratio": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "date_min": {
            "type": "string"
          },
          "date_max": {
            "type": "string"
          },
          "outcomes": {
            "type": "string"
          },
          "include_reposts": {
            "type": "string"
          },
          "post_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-posts",
          "description": "Searches for posts (offer, wanted, admin) based on a search query, types, sources, and optional geographical parameters. It returns a paginated list of matching posts.",
          "operationId": "search_posts",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "value": "$inputs.search"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "types",
              "in": "query",
              "value": "$inputs.types"
            },
            {
              "name": "sources",
              "in": "query",
              "value": "$inputs.sources"
            },
            {
              "name": "group_ids",
              "in": "query",
              "value": "$inputs.group_ids"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "device_pixel_ratio",
              "in": "query",
              "value": "$inputs.device_pixel_ratio"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "date_min",
              "in": "query",
              "value": "$inputs.date_min"
            },
            {
              "name": "date_max",
              "in": "query",
              "value": "$inputs.date_max"
            },
            {
              "name": "outcomes",
              "in": "query",
              "value": "$inputs.outcomes"
            },
            {
              "name": "include_reposts",
              "in": "query",
              "value": "$inputs.include_reposts"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "posts": "$response.body#/posts",
            "num_posts": "$response.body#/num_posts",
            "num_pages": "$response.body#/num_pages",
            "start_index": "$response.body#/start_index",
            "end_index": "$response.body#/end_index",
            "per_page": "$response.body#/per_page",
            "group_ids": "$response.body#/group_ids"
          }
        },
        {
          "stepId": "get-post-display-data",
          "description": "Retrieves detailed information for a specific post, including the post content, author details, and the groups it was published on. This provides a rich context for the discovered item.",
          "operationId": "get_post_and_related_data",
          "parameters": [
            {
              "name": "post_id",
              "in": "path",
              "value": "$inputs.post_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "post": "$response.body#/post",
            "author": "$response.body#/author",
            "groups": "$response.body#/groups",
            "author_posts": "$response.body#/author_posts",
            "bookmarked": "$response.body#/bookmarked",
            "replied": "$response.body#/replied",
            "user_can_reply": "$response.body#/user_can_reply",
            "viewed": "$response.body#/viewed",
            "author_offer_count": "$response.body#/author_offer_count",
            "author_wanted_count": "$response.body#/author_wanted_count",
            "hidden": "$response.body#/hidden"
          }
        }
      ],
      "outputs": {
        "posts": "$steps.search-posts.outputs.posts",
        "num_posts": "$steps.search-posts.outputs.num_posts",
        "num_pages": "$steps.search-posts.outputs.num_pages",
        "start_index": "$steps.search-posts.outputs.start_index",
        "end_index": "$steps.search-posts.outputs.end_index",
        "per_page": "$steps.search-posts.outputs.per_page",
        "group_ids": "$steps.search-posts.outputs.group_ids",
        "post": "$steps.get-post-display-data.outputs.post",
        "author": "$steps.get-post-display-data.outputs.author",
        "groups": "$steps.get-post-display-data.outputs.groups",
        "author_posts": "$steps.get-post-display-data.outputs.author_posts",
        "bookmarked": "$steps.get-post-display-data.outputs.bookmarked",
        "replied": "$steps.get-post-display-data.outputs.replied",
        "user_can_reply": "$steps.get-post-display-data.outputs.user_can_reply",
        "viewed": "$steps.get-post-display-data.outputs.viewed",
        "author_offer_count": "$steps.get-post-display-data.outputs.author_offer_count",
        "author_wanted_count": "$steps.get-post-display-data.outputs.author_wanted_count",
        "hidden": "$steps.get-post-display-data.outputs.hidden"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "public-post-feed-and-change-tracking",
      "summary": "This workflow is designed for applications or integrations that need to maintain a comprehensive and up-to-date feed of all publicly published posts on Trash Nothing. It allows for fetching new posts and monitoring changes (e.g., satisfied, deleted, edited) to existing posts, enabling robust data synchronization.",
      "description": "This workflow is designed for applications or integrations that need to maintain a comprehensive and up-to-date feed of all publicly published posts on Trash Nothing. It allows for fetching new posts and monitoring changes (e.g., satisfied, deleted, edited) to existing posts, enabling robust data synchronization.",
      "inputs": {
        "type": "object",
        "properties": {
          "types": {
            "type": "string"
          },
          "date_min": {
            "type": "string"
          },
          "date_max": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "device_pixel_ratio": {
            "type": "string"
          },
          "post_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-all-public-posts",
          "description": "Retrieves a feed of all publicly published offer and wanted posts within a specified date range (up to 30 days). This is useful for initial data population or periodic updates.",
          "operationId": "get_all_posts",
          "parameters": [
            {
              "name": "types",
              "in": "query",
              "value": "$inputs.types"
            },
            {
              "name": "date_min",
              "in": "query",
              "value": "$inputs.date_min"
            },
            {
              "name": "date_max",
              "in": "query",
              "value": "$inputs.date_max"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "device_pixel_ratio",
              "in": "query",
              "value": "$inputs.device_pixel_ratio"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "posts": "$response.body#/posts"
          }
        },
        {
          "stepId": "get-public-post-changes",
          "description": "Retrieves a feed of all changes (e.g., deleted, undeleted, satisfied, edited) made to publicly published posts within a specified date range. This is critical for keeping a local data store synchronized.",
          "operationId": "get_all_posts_changes",
          "parameters": [
            {
              "name": "date_min",
              "in": "query",
              "value": "$inputs.date_min"
            },
            {
              "name": "date_max",
              "in": "query",
              "value": "$inputs.date_max"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "changes": "$response.body#/changes"
          }
        },
        {
          "stepId": "retrieve-changed-post-details",
          "description": "Fetches the current details of a specific post. This is used to get the updated content or status of a post identified as 'changed' in the previous step.",
          "operationId": "get_post",
          "parameters": [
            {
              "name": "post_id",
              "in": "path",
              "value": "$inputs.post_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "post": "$response.body#/post"
          }
        }
      ],
      "outputs": {
        "posts": "$steps.get-all-public-posts.outputs.posts",
        "changes": "$steps.get-public-post-changes.outputs.changes",
        "post": "$steps.retrieve-changed-post-details.outputs.post"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-local-groups-and-their-listings",
      "summary": "This workflow enables users to discover freecycling groups in their area or by name, view details about those groups, and then browse the specific listings (posts) published within a chosen group. This is crucial for community engagement and finding local opportunities.",
      "description": "This workflow enables users to discover freecycling groups in their area or by name, view details about those groups, and then browse the specific listings (posts) published within a chosen group. This is crucial for community engagement and finding local opportunities.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "distance": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "types": {
            "type": "string"
          },
          "sources": {
            "type": "string"
          },
          "group_ids": {
            "type": "string"
          },
          "device_pixel_ratio": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "date_min": {
            "type": "string"
          },
          "date_max": {
            "type": "string"
          },
          "outcomes": {
            "type": "string"
          },
          "include_reposts": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-groups",
          "description": "Searches for groups based on name, location (latitude, longitude, distance), country, region, or postal code. It returns a paginated list of groups.",
          "operationId": "search_groups",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "distance",
              "in": "query",
              "value": "$inputs.distance"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "postal_code",
              "in": "query",
              "value": "$inputs.postal_code"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "groups": "$response.body#/groups",
            "num_groups": "$response.body#/num_groups",
            "num_pages": "$response.body#/num_pages",
            "start_index": "$response.body#/start_index",
            "end_index": "$response.body#/end_index",
            "per_page": "$response.body#/per_page"
          }
        },
        {
          "stepId": "list-group-posts",
          "description": "Lists posts (offer, wanted, admin) specifically from a selected group, allowing users to see what items are available or wanted within that community.",
          "operationId": "get_posts",
          "parameters": [
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "types",
              "in": "query",
              "value": "$inputs.types"
            },
            {
              "name": "sources",
              "in": "query",
              "value": "$inputs.sources"
            },
            {
              "name": "group_ids",
              "in": "query",
              "value": "$inputs.group_ids"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "device_pixel_ratio",
              "in": "query",
              "value": "$inputs.device_pixel_ratio"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "date_min",
              "in": "query",
              "value": "$inputs.date_min"
            },
            {
              "name": "date_max",
              "in": "query",
              "value": "$inputs.date_max"
            },
            {
              "name": "outcomes",
              "in": "query",
              "value": "$inputs.outcomes"
            },
            {
              "name": "include_reposts",
              "in": "query",
              "value": "$inputs.include_reposts"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "posts": "$response.body#/posts",
            "num_posts": "$response.body#/num_posts",
            "num_pages": "$response.body#/num_pages",
            "start_index": "$response.body#/start_index",
            "end_index": "$response.body#/end_index",
            "per_page": "$response.body#/per_page",
            "group_ids": "$response.body#/group_ids",
            "last_listings_view": "$response.body#/last_listings_view"
          }
        }
      ],
      "outputs": {
        "groups": "$steps.search-groups.outputs.groups",
        "num_groups": "$steps.search-groups.outputs.num_groups",
        "num_pages": "$steps.list-group-posts.outputs.num_pages",
        "start_index": "$steps.list-group-posts.outputs.start_index",
        "end_index": "$steps.list-group-posts.outputs.end_index",
        "per_page": "$steps.list-group-posts.outputs.per_page",
        "posts": "$steps.list-group-posts.outputs.posts",
        "num_posts": "$steps.list-group-posts.outputs.num_posts",
        "group_ids": "$steps.list-group-posts.outputs.group_ids",
        "last_listings_view": "$steps.list-group-posts.outputs.last_listings_view"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "view-authors-other-listings",
      "summary": "After a user finds an interesting post, this workflow allows them to explore other active listings (offers or wanted) by the same author. This helps users discover more items from a trusted or prolific giver/receiver.",
      "description": "After a user finds an interesting post, this workflow allows them to explore other active listings (offers or wanted) by the same author. This helps users discover more items from a trusted or prolific giver/receiver.",
      "inputs": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "sort_by": {
            "type": "string"
          },
          "types": {
            "type": "string"
          },
          "sources": {
            "type": "string"
          },
          "group_ids": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "device_pixel_ratio": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "date_min": {
            "type": "string"
          },
          "date_max": {
            "type": "string"
          },
          "outcomes": {
            "type": "string"
          },
          "include_reposts": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-post-details-for-author",
          "description": "Retrieves the full details of a specific post, including information about its author. This step is the entry point, assuming the user has found a post they are interested in.",
          "operationId": "get_post_and_related_data",
          "parameters": [
            {
              "name": "post_id",
              "in": "path",
              "value": "$inputs.post_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "post": "$response.body#/post",
            "author": "$response.body#/author",
            "groups": "$response.body#/groups",
            "author_posts": "$response.body#/author_posts",
            "bookmarked": "$response.body#/bookmarked",
            "replied": "$response.body#/replied",
            "user_can_reply": "$response.body#/user_can_reply",
            "viewed": "$response.body#/viewed",
            "author_offer_count": "$response.body#/author_offer_count",
            "author_wanted_count": "$response.body#/author_wanted_count",
            "hidden": "$response.body#/hidden"
          }
        },
        {
          "stepId": "list-author-posts",
          "description": "Lists all posts (offers, wanted, admin) made by a specific user. This allows the user to see the full history or current active listings of the post's author.",
          "operationId": "get_user_posts",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "value": "$inputs.user_id"
            },
            {
              "name": "sort_by",
              "in": "query",
              "value": "$inputs.sort_by"
            },
            {
              "name": "types",
              "in": "query",
              "value": "$inputs.types"
            },
            {
              "name": "sources",
              "in": "query",
              "value": "$inputs.sources"
            },
            {
              "name": "group_ids",
              "in": "query",
              "value": "$inputs.group_ids"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "device_pixel_ratio",
              "in": "query",
              "value": "$inputs.device_pixel_ratio"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "date_min",
              "in": "query",
              "value": "$inputs.date_min"
            },
            {
              "name": "date_max",
              "in": "query",
              "value": "$inputs.date_max"
            },
            {
              "name": "outcomes",
              "in": "query",
              "value": "$inputs.outcomes"
            },
            {
              "name": "include_reposts",
              "in": "query",
              "value": "$inputs.include_reposts"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "posts": "$response.body#/posts",
            "num_posts": "$response.body#/num_posts",
            "num_pages": "$response.body#/num_pages",
            "start_index": "$response.body#/start_index",
            "end_index": "$response.body#/end_index",
            "per_page": "$response.body#/per_page",
            "group_ids": "$response.body#/group_ids",
            "last_listings_view": "$response.body#/last_listings_view"
          }
        }
      ],
      "outputs": {
        "post": "$steps.get-post-details-for-author.outputs.post",
        "author": "$steps.get-post-details-for-author.outputs.author",
        "groups": "$steps.get-post-details-for-author.outputs.groups",
        "author_posts": "$steps.get-post-details-for-author.outputs.author_posts",
        "bookmarked": "$steps.get-post-details-for-author.outputs.bookmarked",
        "replied": "$steps.get-post-details-for-author.outputs.replied",
        "user_can_reply": "$steps.get-post-details-for-author.outputs.user_can_reply",
        "viewed": "$steps.get-post-details-for-author.outputs.viewed",
        "author_offer_count": "$steps.get-post-details-for-author.outputs.author_offer_count",
        "author_wanted_count": "$steps.get-post-details-for-author.outputs.author_wanted_count",
        "hidden": "$steps.get-post-details-for-author.outputs.hidden",
        "posts": "$steps.list-author-posts.outputs.posts",
        "num_posts": "$steps.list-author-posts.outputs.num_posts",
        "num_pages": "$steps.list-author-posts.outputs.num_pages",
        "start_index": "$steps.list-author-posts.outputs.start_index",
        "end_index": "$steps.list-author-posts.outputs.end_index",
        "per_page": "$steps.list-author-posts.outputs.per_page",
        "group_ids": "$steps.list-author-posts.outputs.group_ids",
        "last_listings_view": "$steps.list-author-posts.outputs.last_listings_view"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}