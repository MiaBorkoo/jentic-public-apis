{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/apideck.com/customer-support/9.5.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "add-and-verify-new-customer",
      "summary": "Creates a new customer record in the support system and then retrieves the created record to verify its details and obtain the system-assigned ID.",
      "description": "Creates a new customer record in the support system and then retrieves the created record to verify its details and obtain the system-assigned ID.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "individual": {
            "type": "string"
          },
          "addresses": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "phone_numbers": {
            "type": "string"
          },
          "emails": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "bank_accounts": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-customer",
          "description": "Create a new customer support customer record.",
          "operationId": "customersAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "company_name": "$inputs.company_name",
              "first_name": "$inputs.first_name",
              "last_name": "$inputs.last_name",
              "individual": "$inputs.individual",
              "addresses": "$inputs.addresses",
              "notes": "$inputs.notes",
              "phone_numbers": "$inputs.phone_numbers",
              "emails": "$inputs.emails",
              "tax_number": "$inputs.tax_number",
              "currency": "$inputs.currency",
              "bank_accounts": "$inputs.bank_accounts",
              "status": "$inputs.status"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "new_customer_id": "$response.body"
          }
        },
        {
          "stepId": "get-new-customer",
          "description": "Retrieve the details of the newly created customer using its ID.",
          "operationId": "customersOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "customer_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "new_customer_id": "$steps.create-customer.outputs.new_customer_id",
        "customer_details": "$steps.get-new-customer.outputs.customer_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-customer-contact-information",
      "summary": "Retrieves an existing customer's record and then updates their contact details (like email or phone number).",
      "description": "Retrieves an existing customer's record and then updates their contact details (like email or phone number).",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "raw": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-customer-for-update",
          "description": "Retrieve the current details of a specific customer.",
          "operationId": "customersOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "customer_details": "$response.body",
            "retrieved_customer_id": "$response.body"
          }
        },
        {
          "stepId": "update-customer-contact",
          "description": "Update the customer's record with new contact information.",
          "operationId": "customersUpdate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "customer_id": "$steps.get-customer-for-update.outputs.retrieved_customer_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "update_confirmation_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "customer_details": "$steps.get-customer-for-update.outputs.customer_details",
        "retrieved_customer_id": "$steps.get-customer-for-update.outputs.retrieved_customer_id",
        "update_confirmation_id": "$steps.update-customer-contact.outputs.update_confirmation_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-and-delete-customer-record",
      "summary": "Retrieves a specific customer's record to confirm identity or details before permanently deleting it, often used for offboarding or handling data privacy requests.",
      "description": "Retrieves a specific customer's record to confirm identity or details before permanently deleting it, often used for offboarding or handling data privacy requests.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "raw": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-customer-for-deletion",
          "description": "Retrieve the details of the customer intended for deletion.",
          "operationId": "customersOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "customer_details": "$response.body",
            "retrieved_customer_id": "$response.body"
          }
        },
        {
          "stepId": "delete-customer",
          "description": "Delete the specified customer record.",
          "operationId": "customersDelete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "deletion_confirmation_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "customer_details": "$steps.get-customer-for-deletion.outputs.customer_details",
        "retrieved_customer_id": "$steps.get-customer-for-deletion.outputs.retrieved_customer_id",
        "deletion_confirmation_id": "$steps.delete-customer.outputs.deletion_confirmation_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}