{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/transitfeeds.com/main/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "discover-feeds-by-location-and-download-latest",
      "summary": "Allows a user to first discover available transit locations, then find feeds associated with a chosen location, and finally retrieve the download URL for the latest version of a specific feed.",
      "description": "Allows a user to first discover available transit locations, then find feeds associated with a chosen location, and finally retrieve the download URL for the latest version of a specific feed.",
      "inputs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "descendants": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "feed": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-locations",
          "description": "Retrieve a hierarchical list of all available transit locations.",
          "operationId": "getLocations",
          "parameters": [
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "locations": "$response.body#/results/locations"
          }
        },
        {
          "stepId": "get-feeds-by-location",
          "description": "Retrieve a list of transit feeds filtered by a specific location ID.",
          "operationId": "getFeeds",
          "parameters": [
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$inputs.location"
            },
            {
              "name": "descendants",
              "in": "query",
              "value": "$inputs.descendants"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "type",
              "in": "query",
              "value": "$inputs.type"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "feeds": "$response.body#/results/feeds"
          }
        },
        {
          "stepId": "download-latest-feed-version",
          "description": "Get the direct download URL for the latest version of a selected feed.",
          "operationId": "getLatestFeedVersion",
          "parameters": [
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "feed",
              "in": "query",
              "value": "$inputs.feed"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "download_url": "$response.headers.download_url"
          }
        }
      ],
      "outputs": {
        "locations": "$steps.get-locations.outputs.locations",
        "feeds": "$steps.get-feeds-by-location.outputs.feeds",
        "download_url": "$steps.download-latest-feed-version.outputs.download_url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "browse-all-feeds-and-inspect-versions",
      "summary": "Enables a user to list all available transit feeds and then delve into the historical versions of a particular feed, including any detected errors or warnings during import.",
      "description": "Enables a user to list all available transit feeds and then delve into the historical versions of a particular feed, including any detected errors or warnings during import.",
      "inputs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "descendants": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "feed": {
            "type": "string"
          },
          "err": {
            "type": "string"
          },
          "warn": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-all-feeds",
          "description": "Retrieve a comprehensive list of all transit feeds available in the system.",
          "operationId": "getFeeds",
          "parameters": [
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$inputs.location"
            },
            {
              "name": "descendants",
              "in": "query",
              "value": "$inputs.descendants"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "type",
              "in": "query",
              "value": "$inputs.type"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "feeds": "$response.body#/results/feeds"
          }
        },
        {
          "stepId": "get-feed-versions-with-issues",
          "description": "Retrieve all historical versions for a specific feed, optionally including error and warning details.",
          "operationId": "getFeedVersions",
          "parameters": [
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "feed",
              "in": "query",
              "value": "$inputs.feed"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "err",
              "in": "query",
              "value": "$inputs.err"
            },
            {
              "name": "warn",
              "in": "query",
              "value": "$inputs.warn"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "feed_versions": "$response.body#/feed_versions"
          }
        }
      ],
      "outputs": {
        "feeds": "$steps.get-all-feeds.outputs.feeds",
        "feed_versions": "$steps.get-feed-versions-with-issues.outputs.feed_versions"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}