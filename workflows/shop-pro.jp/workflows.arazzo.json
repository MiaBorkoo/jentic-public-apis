{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/shop-pro.jp/main/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "shop-script-tag-management",
      "summary": "This workflow allows app developers to manage custom JavaScript or CSS code injected into the shop's storefront or thank-you pages. This is essential for integrating custom functionalities, analytics, or marketing tools directly into the shop's user experience.",
      "description": "This workflow allows app developers to manage custom JavaScript or CSS code injected into the shop's storefront or thank-you pages. This is essential for integrating custom functionalities, analytics, or marketing tools directly into the shop's user experience.",
      "inputs": {
        "type": "object",
        "properties": {
          "scriptTagId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-shop-script-tag",
          "description": "Registers a new external JavaScript or CSS file to be loaded on specified shop pages. The 'integrity' parameter is crucial for security and should be a hash of the script file.",
          "operationId": "createShopScriptTag",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/script_tag/id",
            "src": "$response.body#/script_tag/src",
            "display_scope": "$response.body#/script_tag/display_scope",
            "integrity": "$response.body#/script_tag/integrity",
            "account_id": "$response.body#/script_tag/account_id",
            "oauth_application_id": "$response.body#/script_tag/oauth_application_id",
            "make_date": "$response.body#/script_tag/make_date",
            "update_date": "$response.body#/script_tag/update_date"
          }
        },
        {
          "stepId": "get-all-shop-script-tags",
          "description": "Retrieves a list of all script tags currently registered by the app for the shop. This is useful for auditing or identifying existing script IDs.",
          "operationId": "getShopScriptTags",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "script_tags": "$response.body#/script_tags"
          }
        },
        {
          "stepId": "get-specific-shop-script-tag",
          "description": "Fetches the detailed information of a single script tag using its unique ID.",
          "operationId": "getShopScriptTag",
          "parameters": [
            {
              "name": "scriptTagId",
              "in": "path",
              "value": "$steps.create-shop-script-tag.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/script_tag/id",
            "src": "$response.body#/script_tag/src",
            "display_scope": "$response.body#/script_tag/display_scope",
            "integrity": "$response.body#/script_tag/integrity",
            "account_id": "$response.body#/script_tag/account_id",
            "oauth_application_id": "$response.body#/script_tag/oauth_application_id",
            "make_date": "$response.body#/script_tag/make_date",
            "update_date": "$response.body#/script_tag/update_date"
          }
        },
        {
          "stepId": "update-shop-script-tag",
          "description": "Modifies the properties (e.g., URL, display scope, integrity hash) of an existing script tag. This is useful for updating script versions or changing where they are displayed.",
          "operationId": "updateShopScriptTag",
          "parameters": [
            {
              "name": "scriptTagId",
              "in": "path",
              "value": "$steps.get-specific-shop-script-tag.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "scriptTagId": "$steps.get-specific-shop-script-tag.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/script_tag/id",
            "src": "$response.body#/script_tag/src",
            "display_scope": "$response.body#/script_tag/display_scope",
            "integrity": "$response.body#/script_tag/integrity",
            "account_id": "$response.body#/script_tag/account_id",
            "oauth_application_id": "$response.body#/script_tag/oauth_application_id",
            "make_date": "$response.body#/script_tag/make_date",
            "update_date": "$response.body#/script_tag/update_date"
          }
        },
        {
          "stepId": "delete-shop-script-tag",
          "description": "Removes a specific script tag from the shop. Note that script tags are automatically removed upon app uninstallation.",
          "operationId": "deleteScriptTag",
          "parameters": [
            {
              "name": "scriptTagId",
              "in": "path",
              "value": "$steps.create-shop-script-tag.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tag_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.update-shop-script-tag.outputs.id",
        "src": "$steps.update-shop-script-tag.outputs.src",
        "display_scope": "$steps.update-shop-script-tag.outputs.display_scope",
        "integrity": "$steps.update-shop-script-tag.outputs.integrity",
        "account_id": "$steps.update-shop-script-tag.outputs.account_id",
        "oauth_application_id": "$steps.update-shop-script-tag.outputs.oauth_application_id",
        "make_date": "$steps.update-shop-script-tag.outputs.make_date",
        "update_date": "$steps.update-shop-script-tag.outputs.update_date",
        "script_tags": "$steps.get-all-shop-script-tags.outputs.script_tags",
        "tag_data": "$steps.delete-shop-script-tag.outputs.tag_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "programmatic-app-uninstallation--final-usage-billing",
      "summary": "This workflow allows an app to initiate its own uninstallation from a shop. If the app uses usage-based billing, it also provides a mechanism to submit final usage charges after uninstallation, using a special token that remains valid until the closing date.",
      "description": "This workflow allows an app to initiate its own uninstallation from a shop. If the app uses usage-based billing, it also provides a mechanism to submit final usage charges after uninstallation, using a special token that remains valid until the closing date.",
      "inputs": {
        "type": "object",
        "properties": {
          "recurringApplicationChargeId": {
            "type": "string"
          },
          "X-Appstore-Usage-Charge-Token": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "uninstall-app",
          "description": "Uninstalls the app from the shop, invalidating its OAuth access token and automatically removing associated script tags. The response includes data necessary for final usage billing if the app had a usage-based plan.",
          "operationId": "deleteInstallation",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "account_id": "$response.body#/account_id",
            "application_charge_source_id": "$response.body#/application_charge_source_id",
            "recurring_application_charge_id": "$response.body#/recurring_application_charge_id",
            "uninstalled_at": "$response.body#/uninstalled_at",
            "usage_charge": "$response.body#/usage_charge"
          }
        },
        {
          "stepId": "submit-final-usage-charge",
          "description": "Submits the final usage charge for the period leading up to uninstallation. This operation uses a special 'X-Appstore-Usage-Charge-Token' provided by the uninstallation response, as the regular OAuth token is invalidated. This step is conditional and only applies if 'usage_charge.api_token' is provided by the 'uninstall-app' response.",
          "operationId": "createUsageCharge",
          "parameters": [
            {
              "name": "recurringApplicationChargeId",
              "in": "path",
              "value": "$steps.uninstall-app.outputs.recurring_application_charge_id"
            },
            {
              "name": "X-Appstore-Usage-Charge-Token",
              "in": "header",
              "value": "$steps.uninstall-app.outputs.usage_charge.api_token"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "recurringApplicationChargeId": "$steps.uninstall-app.outputs.recurring_application_charge_id",
              "X-Appstore-Usage-Charge-Token": "$steps.uninstall-app.outputs.usage_charge.api_token"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/usage_charge/id",
            "point": "$response.body#/usage_charge/point",
            "description": "$response.body#/usage_charge/description",
            "make_date": "$response.body#/usage_charge/make_date",
            "update_date": "$response.body#/usage_charge/update_date"
          }
        }
      ],
      "outputs": {
        "account_id": "$steps.uninstall-app.outputs.account_id",
        "application_charge_source_id": "$steps.uninstall-app.outputs.application_charge_source_id",
        "recurring_application_charge_id": "$steps.uninstall-app.outputs.recurring_application_charge_id",
        "uninstalled_at": "$steps.uninstall-app.outputs.uninstalled_at",
        "usage_charge": "$steps.uninstall-app.outputs.usage_charge",
        "id": "$steps.submit-final-usage-charge.outputs.id",
        "point": "$steps.submit-final-usage-charge.outputs.point",
        "description": "$steps.submit-final-usage-charge.outputs.description",
        "make_date": "$steps.submit-final-usage-charge.outputs.make_date",
        "update_date": "$steps.submit-final-usage-charge.outputs.update_date"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}