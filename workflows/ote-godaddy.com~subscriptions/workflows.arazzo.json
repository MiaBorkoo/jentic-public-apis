{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/ote-godaddy.com/subscriptions/0.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "view-all-subscriptions-and-details",
      "summary": "Allows a shopper or an administrator to retrieve a paginated list of all subscriptions for a specified shopper, and then drill down to view comprehensive details of a particular subscription from that list.",
      "description": "Allows a shopper or an administrator to retrieve a paginated list of all subscriptions for a specified shopper, and then drill down to view comprehensive details of a particular subscription from that list.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-App-Key": {
            "type": "string"
          },
          "X-Shopper-Id": {
            "type": "string"
          },
          "X-Market-Id": {
            "type": "string"
          },
          "productGroupKeys": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-shopper-subscriptions",
          "description": "Retrieves a paginated list of all subscriptions associated with the shopper. This step provides an overview and allows selection of a specific subscription ID.",
          "operationId": "list",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "X-Market-Id",
              "in": "header",
              "value": "$inputs.X-Market-Id"
            },
            {
              "name": "productGroupKeys",
              "in": "query",
              "value": "$inputs.productGroupKeys"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptions": "$response.body#/subscriptions",
            "pagination": "$response.body#/pagination"
          }
        },
        {
          "stepId": "get-subscription-details",
          "description": "Retrieves detailed information for a specific subscription using its ID, obtained from the previous list operation.",
          "operationId": "get",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "subscriptionId",
              "in": "path",
              "value": "$inputs.subscriptionId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Subscription": "$response.body#/subscriptionId"
          }
        }
      ],
      "outputs": {
        "subscriptions": "$steps.list-shopper-subscriptions.outputs.subscriptions",
        "pagination": "$steps.list-shopper-subscriptions.outputs.pagination",
        "Subscription": "$steps.get-subscription-details.outputs.Subscription"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-subscription-auto-renewal",
      "summary": "Enables a shopper to view their current subscriptions, select one, and then update its automatic renewal setting (enable or disable). This workflow demonstrates a common self-service task.",
      "description": "Enables a shopper to view their current subscriptions, select one, and then update its automatic renewal setting (enable or disable). This workflow demonstrates a common self-service task.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-App-Key": {
            "type": "string"
          },
          "X-Shopper-Id": {
            "type": "string"
          },
          "X-Market-Id": {
            "type": "string"
          },
          "productGroupKeys": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          },
          "paymentProfileId": {
            "type": "string"
          },
          "renewAuto": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-shopper-subscriptions-for-renewal-management",
          "description": "Retrieves a list of subscriptions to allow the shopper to choose which one to manage for auto-renewal. This step provides the necessary subscription ID.",
          "operationId": "list",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "X-Market-Id",
              "in": "header",
              "value": "$inputs.X-Market-Id"
            },
            {
              "name": "productGroupKeys",
              "in": "query",
              "value": "$inputs.productGroupKeys"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptions": "$response.body#/subscriptions",
            "pagination": "$response.body#/pagination"
          }
        },
        {
          "stepId": "update-subscription-auto-renewal",
          "description": "Updates the `renewAuto` status for the selected subscription. This endpoint requires JWT authentication and allows changing the auto-renewal preference.",
          "operationId": "update",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "subscriptionId",
              "in": "path",
              "value": "$inputs.subscriptionId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "paymentProfileId": "$inputs.paymentProfileId",
              "renewAuto": "$inputs.renewAuto"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        }
      ],
      "outputs": {
        "subscriptions": "$steps.list-shopper-subscriptions-for-renewal-management.outputs.subscriptions",
        "pagination": "$steps.list-shopper-subscriptions-for-renewal-management.outputs.pagination",
        "status": "$steps.update-subscription-auto-renewal.outputs.status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "cancel-shopper-subscription",
      "summary": "Allows a shopper to list their subscriptions, retrieve detailed information for a specific subscription (including its cancelability status), and then proceed to cancel it if allowed. This is a critical self-service operation.",
      "description": "Allows a shopper to list their subscriptions, retrieve detailed information for a specific subscription (including its cancelability status), and then proceed to cancel it if allowed. This is a critical self-service operation.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-App-Key": {
            "type": "string"
          },
          "X-Shopper-Id": {
            "type": "string"
          },
          "X-Market-Id": {
            "type": "string"
          },
          "productGroupKeys": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-shopper-subscriptions-for-cancellation",
          "description": "Retrieves a list of subscriptions to allow the shopper to choose which one to cancel. This provides the initial subscription ID.",
          "operationId": "list",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "X-Market-Id",
              "in": "header",
              "value": "$inputs.X-Market-Id"
            },
            {
              "name": "productGroupKeys",
              "in": "query",
              "value": "$inputs.productGroupKeys"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptions": "$response.body#/subscriptions",
            "pagination": "$response.body#/pagination"
          }
        },
        {
          "stepId": "get-subscription-details-for-cancellation",
          "description": "Retrieves detailed information for the selected subscription, including its `cancelable` status, which is crucial before attempting cancellation.",
          "operationId": "get",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "subscriptionId",
              "in": "path",
              "value": "$inputs.subscriptionId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Subscription": "$response.body#/subscriptionId"
          }
        },
        {
          "stepId": "perform-subscription-cancellation",
          "description": "Cancels the specified subscription. This step should ideally be performed only if the `cancelable` status from the previous step is true, ensuring a valid operation.",
          "operationId": "cancel",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "subscriptionId",
              "in": "path",
              "value": "$inputs.subscriptionId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        }
      ],
      "outputs": {
        "subscriptions": "$steps.list-shopper-subscriptions-for-cancellation.outputs.subscriptions",
        "pagination": "$steps.list-shopper-subscriptions-for-cancellation.outputs.pagination",
        "Subscription": "$steps.get-subscription-details-for-cancellation.outputs.Subscription",
        "status": "$steps.perform-subscription-cancellation.outputs.status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-subscriptions-by-product-group",
      "summary": "Enables a shopper to first see the categories (product groups) of subscriptions they own, and then filter their subscription list to view only those belonging to a specific product group. This helps in organizing and navigating subscriptions.",
      "description": "Enables a shopper to first see the categories (product groups) of subscriptions they own, and then filter their subscription list to view only those belonging to a specific product group. This helps in organizing and navigating subscriptions.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-App-Key": {
            "type": "string"
          },
          "X-Shopper-Id": {
            "type": "string"
          },
          "X-Market-Id": {
            "type": "string"
          },
          "productGroupKeys": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-shopper-product-groups",
          "description": "Retrieves a list of product groups that the shopper has subscriptions in, along with the count of subscriptions per group. This provides the available product group keys.",
          "operationId": "productGroups",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "productGroups": "$response.body#/0/productGroupKey"
          }
        },
        {
          "stepId": "list-subscriptions-filtered-by-product-group",
          "description": "Retrieves a list of subscriptions, filtered by a `productGroupKey` selected from the previously retrieved product groups, allowing for focused viewing.",
          "operationId": "list",
          "parameters": [
            {
              "name": "X-App-Key",
              "in": "header",
              "value": "$inputs.X-App-Key"
            },
            {
              "name": "X-Shopper-Id",
              "in": "header",
              "value": "$inputs.X-Shopper-Id"
            },
            {
              "name": "X-Market-Id",
              "in": "header",
              "value": "$inputs.X-Market-Id"
            },
            {
              "name": "productGroupKeys",
              "in": "query",
              "value": "$inputs.productGroupKeys"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptions": "$response.body#/subscriptions",
            "pagination": "$response.body#/pagination"
          }
        }
      ],
      "outputs": {
        "productGroups": "$steps.list-shopper-product-groups.outputs.productGroups",
        "subscriptions": "$steps.list-subscriptions-filtered-by-product-group.outputs.subscriptions",
        "pagination": "$steps.list-subscriptions-filtered-by-product-group.outputs.pagination"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}