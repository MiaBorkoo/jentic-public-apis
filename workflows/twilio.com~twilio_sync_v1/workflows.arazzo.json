{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_sync_v1/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "initialize-sync-service-and-data-structures",
      "summary": "Establishes a new Twilio Sync environment by creating a Sync Service and then provisioning the fundamental data structures (Document, List, Map, and Stream) within that service. This workflow is essential for setting up a new application that leverages Twilio Sync for real-time data synchronization.",
      "description": "Establishes a new Twilio Sync environment by creating a Sync Service and then provisioning the fundamental data structures (Document, List, Map, and Stream) within that service. This workflow is essential for setting up a new application that leverages Twilio Sync for real-time data synchronization.",
      "inputs": {
        "type": "object",
        "properties": {
          "FriendlyName": {
            "type": "string"
          },
          "WebhookUrl": {
            "type": "string"
          },
          "ReachabilityWebhooksEnabled": {
            "type": "string"
          },
          "AclEnabled": {
            "type": "string"
          },
          "ReachabilityDebouncingEnabled": {
            "type": "string"
          },
          "ReachabilityDebouncingWindow": {
            "type": "string"
          },
          "WebhooksFromRestEnabled": {
            "type": "string"
          },
          "ServiceSid": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "Ttl": {
            "type": "string"
          },
          "CollectionTtl": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-sync-service",
          "description": "Creates a new Twilio Sync Service, which acts as a container for all other Sync resources.",
          "operationId": "CreateService",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "WebhookUrl": "$inputs.WebhookUrl",
              "ReachabilityWebhooksEnabled": "$inputs.ReachabilityWebhooksEnabled",
              "AclEnabled": "$inputs.AclEnabled",
              "ReachabilityDebouncingEnabled": "$inputs.ReachabilityDebouncingEnabled",
              "ReachabilityDebouncingWindow": "$inputs.ReachabilityDebouncingWindow",
              "WebhooksFromRestEnabled": "$inputs.WebhooksFromRestEnabled"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "unique_name": "$response.body#/unique_name"
          }
        },
        {
          "stepId": "create-sync-document",
          "description": "Creates a new Sync Document, a flexible schema-less JSON object, within the newly created Sync Service.",
          "operationId": "CreateDocument",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-service.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-service.outputs.sid",
              "UniqueName": "$inputs.UniqueName",
              "Data": "$inputs.Data",
              "Ttl": "$inputs.Ttl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "unique_name": "$response.body#/unique_name"
          }
        },
        {
          "stepId": "create-sync-list",
          "description": "Creates a new Sync List, an ordered collection of schema-less JSON objects, within the Sync Service.",
          "operationId": "CreateSyncList",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-service.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-service.outputs.sid",
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "unique_name": "$response.body#/unique_name"
          }
        },
        {
          "stepId": "create-sync-map",
          "description": "Creates a new Sync Map, a key-value store of schema-less JSON objects, within the Sync Service.",
          "operationId": "CreateSyncMap",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-service.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-service.outputs.sid",
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "unique_name": "$response.body#/unique_name"
          }
        },
        {
          "stepId": "create-sync-stream",
          "description": "Creates a new Sync Stream, used for publishing real-time messages, within the Sync Service.",
          "operationId": "CreateSyncStream",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-service.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-service.outputs.sid",
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "unique_name": "$response.body#/unique_name"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.create-sync-stream.outputs.sid",
        "unique_name": "$steps.create-sync-stream.outputs.unique_name"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-document-access-permissions",
      "summary": "Configures and verifies access permissions for a specific user identity on a Sync Document. This workflow allows administrators to grant or revoke read, write, and manage capabilities, ensuring secure and controlled data access.",
      "description": "Configures and verifies access permissions for a specific user identity on a Sync Document. This workflow allows administrators to grant or revoke read, write, and manage capabilities, ensuring secure and controlled data access.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "Ttl": {
            "type": "string"
          },
          "DocumentSid": {
            "type": "string"
          },
          "Identity": {
            "type": "string"
          },
          "Read": {
            "type": "string"
          },
          "Write": {
            "type": "string"
          },
          "Manage": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-document-for-permissions",
          "description": "Creates a Sync Document that will have its permissions managed. (Assumes ServiceSid is already known or created externally).",
          "operationId": "CreateDocument",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "UniqueName": "$inputs.UniqueName",
              "Data": "$inputs.Data",
              "Ttl": "$inputs.Ttl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "service_sid": "$response.body#/service_sid"
          }
        },
        {
          "stepId": "update-document-permission",
          "description": "Updates the read, write, and manage permissions for a specified identity on the Sync Document.",
          "operationId": "UpdateDocumentPermission",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-document-for-permissions.outputs.service_sid"
            },
            {
              "name": "DocumentSid",
              "in": "path",
              "value": "$steps.create-document-for-permissions.outputs.sid"
            },
            {
              "name": "Identity",
              "in": "path",
              "value": "$inputs.Identity"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-document-for-permissions.outputs.service_sid",
              "DocumentSid": "$steps.create-document-for-permissions.outputs.sid",
              "Read": "$inputs.Read",
              "Write": "$inputs.Write",
              "Manage": "$inputs.Manage"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "read": "$response.body#/read",
            "write": "$response.body#/write",
            "manage": "$response.body#/manage",
            "identity": "$response.body#/identity"
          }
        },
        {
          "stepId": "fetch-document-permission",
          "description": "Retrieves the current permissions for the specified identity on the Sync Document to confirm the update.",
          "operationId": "FetchDocumentPermission",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-document-for-permissions.outputs.service_sid"
            },
            {
              "name": "DocumentSid",
              "in": "path",
              "value": "$steps.create-document-for-permissions.outputs.sid"
            },
            {
              "name": "Identity",
              "in": "path",
              "value": "$steps.update-document-permission.outputs.identity"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "read": "$response.body#/read",
            "write": "$response.body#/write",
            "manage": "$response.body#/manage"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.create-document-for-permissions.outputs.sid",
        "service_sid": "$steps.create-document-for-permissions.outputs.service_sid",
        "read": "$steps.fetch-document-permission.outputs.read",
        "write": "$steps.fetch-document-permission.outputs.write",
        "manage": "$steps.fetch-document-permission.outputs.manage",
        "identity": "$steps.update-document-permission.outputs.identity"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-sync-list-items",
      "summary": "Provides a comprehensive workflow for interacting with items within a Sync List. This includes adding new items, retrieving specific items, updating existing items, listing all items, and deleting items, demonstrating dynamic ordered data management.",
      "description": "Provides a comprehensive workflow for interacting with items within a Sync List. This includes adding new items, retrieving specific items, updating existing items, listing all items, and deleting items, demonstrating dynamic ordered data management.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "Ttl": {
            "type": "string"
          },
          "CollectionTtl": {
            "type": "string"
          },
          "ListSid": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "Index": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          },
          "ItemTtl": {
            "type": "string"
          },
          "Order": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "Bounds": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-sync-list-for-items",
          "description": "Creates a Sync List to serve as the container for items. (Assumes ServiceSid is already known or created externally).",
          "operationId": "CreateSyncList",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "service_sid": "$response.body#/service_sid"
          }
        },
        {
          "stepId": "add-sync-list-item",
          "description": "Adds a new data item to the Sync List.",
          "operationId": "CreateSyncListItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.service_sid"
            },
            {
              "name": "ListSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-list-for-items.outputs.service_sid",
              "ListSid": "$steps.create-sync-list-for-items.outputs.sid",
              "Data": "$inputs.Data"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "index": "$response.body#/index",
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "fetch-sync-list-item",
          "description": "Retrieves the details of a specific item from the Sync List using its index.",
          "operationId": "FetchSyncListItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.service_sid"
            },
            {
              "name": "ListSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.sid"
            },
            {
              "name": "Index",
              "in": "path",
              "value": "$steps.add-sync-list-item.outputs.index"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data",
            "index": "$response.body#/index"
          }
        },
        {
          "stepId": "update-sync-list-item",
          "description": "Updates the data content of an existing item in the Sync List.",
          "operationId": "UpdateSyncListItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.service_sid"
            },
            {
              "name": "ListSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.sid"
            },
            {
              "name": "Index",
              "in": "path",
              "value": "$steps.add-sync-list-item.outputs.index"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-list-for-items.outputs.service_sid",
              "ListSid": "$steps.create-sync-list-for-items.outputs.sid",
              "Index": "$steps.add-sync-list-item.outputs.index",
              "Data": "$inputs.Data",
              "Ttl": "$inputs.Ttl",
              "ItemTtl": "$inputs.ItemTtl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data",
            "index": "$response.body#/index"
          }
        },
        {
          "stepId": "list-sync-list-items",
          "description": "Retrieves a paginated list of all items within the Sync List.",
          "operationId": "ListSyncListItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.service_sid"
            },
            {
              "name": "ListSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.sid"
            },
            {
              "name": "Order",
              "in": "query",
              "value": "$inputs.Order"
            },
            {
              "name": "From",
              "in": "query",
              "value": "$inputs.From"
            },
            {
              "name": "Bounds",
              "in": "query",
              "value": "$inputs.Bounds"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body#/items"
          }
        },
        {
          "stepId": "delete-sync-list-item",
          "description": "Deletes a specific item from the Sync List by its index.",
          "operationId": "DeleteSyncListItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.service_sid"
            },
            {
              "name": "ListSid",
              "in": "path",
              "value": "$steps.create-sync-list-for-items.outputs.sid"
            },
            {
              "name": "Index",
              "in": "path",
              "value": "$steps.add-sync-list-item.outputs.index"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "item_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.create-sync-list-for-items.outputs.sid",
        "service_sid": "$steps.create-sync-list-for-items.outputs.service_sid",
        "index": "$steps.update-sync-list-item.outputs.index",
        "data": "$steps.update-sync-list-item.outputs.data",
        "items": "$steps.list-sync-list-items.outputs.items",
        "item_data": "$steps.delete-sync-list-item.outputs.item_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-sync-map-key-value-pairs",
      "summary": "Provides a comprehensive workflow for interacting with key-value pairs within a Sync Map. This includes adding new entries, retrieving specific entries by key, updating existing entries, listing all entries, and deleting entries, demonstrating dynamic key-indexed data management.",
      "description": "Provides a comprehensive workflow for interacting with key-value pairs within a Sync Map. This includes adding new entries, retrieving specific entries by key, updating existing entries, listing all entries, and deleting entries, demonstrating dynamic key-indexed data management.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "Ttl": {
            "type": "string"
          },
          "CollectionTtl": {
            "type": "string"
          },
          "MapSid": {
            "type": "string"
          },
          "Key": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          },
          "ItemTtl": {
            "type": "string"
          },
          "Order": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "Bounds": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-sync-map-for-items",
          "description": "Creates a Sync Map to serve as the container for key-value pairs. (Assumes ServiceSid is already known or created externally).",
          "operationId": "CreateSyncMap",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "service_sid": "$response.body#/service_sid"
          }
        },
        {
          "stepId": "add-sync-map-item",
          "description": "Adds a new key-value pair to the Sync Map.",
          "operationId": "CreateSyncMapItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.service_sid"
            },
            {
              "name": "MapSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-map-for-items.outputs.service_sid",
              "MapSid": "$steps.create-sync-map-for-items.outputs.sid",
              "Key": "$inputs.Key",
              "Data": "$inputs.Data"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "key": "$response.body#/key",
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "fetch-sync-map-item",
          "description": "Retrieves the details of a specific item from the Sync Map using its key.",
          "operationId": "FetchSyncMapItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.service_sid"
            },
            {
              "name": "MapSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.sid"
            },
            {
              "name": "Key",
              "in": "path",
              "value": "$steps.add-sync-map-item.outputs.key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data",
            "key": "$response.body#/key"
          }
        },
        {
          "stepId": "update-sync-map-item",
          "description": "Updates the data content of an existing item in the Sync Map.",
          "operationId": "UpdateSyncMapItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.service_sid"
            },
            {
              "name": "MapSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.sid"
            },
            {
              "name": "Key",
              "in": "path",
              "value": "$steps.add-sync-map-item.outputs.key"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-map-for-items.outputs.service_sid",
              "MapSid": "$steps.create-sync-map-for-items.outputs.sid",
              "Key": "$steps.add-sync-map-item.outputs.key",
              "Data": "$inputs.Data",
              "Ttl": "$inputs.Ttl",
              "ItemTtl": "$inputs.ItemTtl",
              "CollectionTtl": "$inputs.CollectionTtl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data",
            "key": "$response.body#/key"
          }
        },
        {
          "stepId": "list-sync-map-items",
          "description": "Retrieves a paginated list of all items within the Sync Map.",
          "operationId": "ListSyncMapItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.service_sid"
            },
            {
              "name": "MapSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.sid"
            },
            {
              "name": "Order",
              "in": "query",
              "value": "$inputs.Order"
            },
            {
              "name": "From",
              "in": "query",
              "value": "$inputs.From"
            },
            {
              "name": "Bounds",
              "in": "query",
              "value": "$inputs.Bounds"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body#/items"
          }
        },
        {
          "stepId": "delete-sync-map-item",
          "description": "Deletes a specific item from the Sync Map by its key.",
          "operationId": "DeleteSyncMapItem",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.service_sid"
            },
            {
              "name": "MapSid",
              "in": "path",
              "value": "$steps.create-sync-map-for-items.outputs.sid"
            },
            {
              "name": "Key",
              "in": "path",
              "value": "$steps.add-sync-map-item.outputs.key"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "item_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.create-sync-map-for-items.outputs.sid",
        "service_sid": "$steps.create-sync-map-for-items.outputs.service_sid",
        "key": "$steps.update-sync-map-item.outputs.key",
        "data": "$steps.update-sync-map-item.outputs.data",
        "items": "$steps.list-sync-map-items.outputs.items",
        "item_data": "$steps.delete-sync-map-item.outputs.item_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "publish-message-to-sync-stream",
      "summary": "Establishes a Sync Stream and then publishes a real-time message to it. This workflow is fundamental for implementing event-driven architectures and broadcasting data to multiple subscribers.",
      "description": "Establishes a Sync Stream and then publishes a real-time message to it. This workflow is fundamental for implementing event-driven architectures and broadcasting data to multiple subscribers.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "Ttl": {
            "type": "string"
          },
          "StreamSid": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-sync-stream-for-message",
          "description": "Creates a Sync Stream to which messages will be published. (Assumes ServiceSid is already known or created externally).",
          "operationId": "CreateSyncStream",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "UniqueName": "$inputs.UniqueName",
              "Ttl": "$inputs.Ttl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "service_sid": "$response.body#/service_sid"
          }
        },
        {
          "stepId": "publish-stream-message",
          "description": "Publishes a new message, containing arbitrary JSON data, to the created Sync Stream.",
          "operationId": "CreateStreamMessage",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.create-sync-stream-for-message.outputs.service_sid"
            },
            {
              "name": "StreamSid",
              "in": "path",
              "value": "$steps.create-sync-stream-for-message.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$steps.create-sync-stream-for-message.outputs.service_sid",
              "StreamSid": "$steps.create-sync-stream-for-message.outputs.sid",
              "Data": "$inputs.Data"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "data": "$response.body#/data"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.publish-stream-message.outputs.sid",
        "service_sid": "$steps.create-sync-stream-for-message.outputs.service_sid",
        "data": "$steps.publish-stream-message.outputs.data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "clean-up-sync-service-resources",
      "summary": "Performs a complete cleanup of a Twilio Sync Service by first listing and deleting all associated Documents, Lists, Maps, and Streams, and then finally deleting the Sync Service itself. This is a crucial administrative workflow for resource management and cost control.",
      "description": "Performs a complete cleanup of a Twilio Sync Service by first listing and deleting all associated Documents, Lists, Maps, and Streams, and then finally deleting the Sync Service itself. This is a crucial administrative workflow for resource management and cost control.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-documents-for-deletion",
          "description": "Lists all Sync Documents within the specified Service to identify them for deletion.",
          "operationId": "ListDocument",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documents": "$response.body#/documents",
            "service_sid": "$response.body#/service_sid"
          }
        },
        {
          "stepId": "delete-all-documents",
          "description": "Deletes each Sync Document identified in the previous listing step.",
          "operationId": "DeleteDocument",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.documents.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documents_data": "$response.body"
          }
        },
        {
          "stepId": "list-sync-lists-for-deletion",
          "description": "Lists all Sync Lists within the Service to identify them for deletion.",
          "operationId": "ListSyncList",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lists": "$response.body#/lists"
          }
        },
        {
          "stepId": "delete-all-sync-lists",
          "description": "Deletes each Sync List identified in the previous listing step.",
          "operationId": "DeleteSyncList",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-sync-lists-for-deletion.outputs.lists.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lists_data": "$response.body"
          }
        },
        {
          "stepId": "list-sync-maps-for-deletion",
          "description": "Lists all Sync Maps within the Service to identify them for deletion.",
          "operationId": "ListSyncMap",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "maps": "$response.body#/maps"
          }
        },
        {
          "stepId": "delete-all-sync-maps",
          "description": "Deletes each Sync Map identified in the previous listing step.",
          "operationId": "DeleteSyncMap",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-sync-maps-for-deletion.outputs.maps.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "maps_data": "$response.body"
          }
        },
        {
          "stepId": "list-sync-streams-for-deletion",
          "description": "Lists all Sync Streams within the Service to identify them for deletion.",
          "operationId": "ListSyncStream",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "streams": "$response.body#/streams"
          }
        },
        {
          "stepId": "delete-all-sync-streams",
          "description": "Deletes each Sync Stream identified in the previous listing step.",
          "operationId": "DeleteSyncStream",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-sync-streams-for-deletion.outputs.streams.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "streams_data": "$response.body"
          }
        },
        {
          "stepId": "delete-sync-service",
          "description": "Deletes the Sync Service itself, after all its contained resources have been removed.",
          "operationId": "DeleteService",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-documents-for-deletion.outputs.service_sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "service_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "documents": "$steps.list-documents-for-deletion.outputs.documents",
        "service_sid": "$steps.list-documents-for-deletion.outputs.service_sid",
        "documents_data": "$steps.delete-all-documents.outputs.documents_data",
        "lists": "$steps.list-sync-lists-for-deletion.outputs.lists",
        "lists_data": "$steps.delete-all-sync-lists.outputs.lists_data",
        "maps": "$steps.list-sync-maps-for-deletion.outputs.maps",
        "maps_data": "$steps.delete-all-sync-maps.outputs.maps_data",
        "streams": "$steps.list-sync-streams-for-deletion.outputs.streams",
        "streams_data": "$steps.delete-all-sync-streams.outputs.streams_data",
        "service_data": "$steps.delete-sync-service.outputs.service_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}