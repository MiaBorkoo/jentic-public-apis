{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/ote-godaddy.com/shoppers/0.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "manage-shopper-profile",
      "summary": "This workflow enables a Reseller to retrieve an existing shopper's profile details and then update specific information such as email, name, or market ID. It's crucial for maintaining accurate customer records.",
      "description": "This workflow enables a Reseller to retrieve an existing shopper's profile details and then update specific information such as email, name, or market ID. It's crucial for maintaining accurate customer records.",
      "inputs": {
        "type": "object",
        "properties": {
          "shopperId": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "marketId": {
            "type": "string"
          },
          "nameFirst": {
            "type": "string"
          },
          "nameLast": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-shopper-profile",
          "description": "Retrieves the complete profile details for a specified shopper.",
          "operationId": "get",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "shopperId": "$response.body#/shopperId",
            "customerId": "$response.body#/customerId",
            "email": "$response.body#/email",
            "externalId": "$response.body#/externalId",
            "marketId": "$response.body#/marketId",
            "nameFirst": "$response.body#/nameFirst",
            "nameLast": "$response.body#/nameLast"
          }
        },
        {
          "stepId": "update-shopper-profile",
          "description": "Updates specific details of the shopper's profile using the retrieved shopper ID.",
          "operationId": "update",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "email": "$inputs.email",
              "externalId": "$inputs.externalId",
              "marketId": "$inputs.marketId",
              "nameFirst": "$inputs.nameFirst",
              "nameLast": "$inputs.nameLast"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "shopperId": "$response.body#/shopperId",
            "customerId": "$response.body#/customerId"
          }
        }
      ],
      "outputs": {
        "shopperId": "$steps.update-shopper-profile.outputs.shopperId",
        "customerId": "$steps.update-shopper-profile.outputs.customerId",
        "email": "$steps.get-shopper-profile.outputs.email",
        "externalId": "$steps.get-shopper-profile.outputs.externalId",
        "marketId": "$steps.get-shopper-profile.outputs.marketId",
        "nameFirst": "$steps.get-shopper-profile.outputs.nameFirst",
        "nameLast": "$steps.get-shopper-profile.outputs.nameLast"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "shopper-account-support--password-reset",
      "summary": "This workflow supports reseller customer service by allowing them to retrieve a shopper's profile, check their billing status, and reset their password. This is vital for assisting customers with account issues.",
      "description": "This workflow supports reseller customer service by allowing them to retrieve a shopper's profile, check their billing status, and reset their password. This is vital for assisting customers with account issues.",
      "inputs": {
        "type": "object",
        "properties": {
          "shopperId": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "auditClientIp": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-shopper-profile-for-support",
          "description": "Retrieves the full profile details for a specified shopper, often as a first step in a support interaction.",
          "operationId": "get",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "shopperId": "$response.body#/shopperId",
            "customerId": "$response.body#/customerId",
            "email": "$response.body#/email",
            "externalId": "$response.body#/externalId",
            "marketId": "$response.body#/marketId",
            "nameFirst": "$response.body#/nameFirst",
            "nameLast": "$response.body#/nameLast"
          }
        },
        {
          "stepId": "get-shopper-status",
          "description": "Retrieves the billing status of the shopper, which can inform support decisions.",
          "operationId": "getStatus",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            },
            {
              "name": "auditClientIp",
              "in": "query",
              "value": "$inputs.auditClientIp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "billingState": "$response.body#/billingState"
          }
        },
        {
          "stepId": "reset-shopper-password",
          "description": "Resets the password for the shopper's subaccount, a common support request.",
          "operationId": "changePassword",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "secret": "$inputs.secret"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "shopperId": "$response.body#/shopperId",
            "customerId": "$response.body#/customerId"
          }
        }
      ],
      "outputs": {
        "shopperId": "$steps.reset-shopper-password.outputs.shopperId",
        "customerId": "$steps.reset-shopper-password.outputs.customerId",
        "email": "$steps.get-shopper-profile-for-support.outputs.email",
        "externalId": "$steps.get-shopper-profile-for-support.outputs.externalId",
        "marketId": "$steps.get-shopper-profile-for-support.outputs.marketId",
        "nameFirst": "$steps.get-shopper-profile-for-support.outputs.nameFirst",
        "nameLast": "$steps.get-shopper-profile-for-support.outputs.nameLast",
        "billingState": "$steps.get-shopper-status.outputs.billingState"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "shopper-account-deletion-request",
      "summary": "This workflow facilitates the process of requesting a shopper profile deletion. It includes retrieving basic shopper details to confirm the correct account before proceeding with the deletion request.",
      "description": "This workflow facilitates the process of requesting a shopper profile deletion. It includes retrieving basic shopper details to confirm the correct account before proceeding with the deletion request.",
      "inputs": {
        "type": "object",
        "properties": {
          "shopperId": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "auditClientIp": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-shopper-profile-for-deletion",
          "description": "Retrieves basic shopper details to confirm the correct account is targeted for deletion.",
          "operationId": "get",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            },
            {
              "name": "includes",
              "in": "query",
              "value": "$inputs.includes"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "shopperId": "$response.body#/shopperId",
            "customerId": "$response.body#/customerId",
            "email": "$response.body#/email",
            "nameFirst": "$response.body#/nameFirst",
            "nameLast": "$response.body#/nameLast"
          }
        },
        {
          "stepId": "request-shopper-deletion",
          "description": "Requests the deletion of the specified shopper profile. Note that active and locked shoppers cannot be deleted.",
          "operationId": "delete",
          "parameters": [
            {
              "name": "shopperId",
              "in": "path",
              "value": "$inputs.shopperId"
            },
            {
              "name": "auditClientIp",
              "in": "query",
              "value": "$inputs.auditClientIp"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "deletion_success": "$response.body#/deletion_success"
          }
        }
      ],
      "outputs": {
        "shopperId": "$steps.get-shopper-profile-for-deletion.outputs.shopperId",
        "customerId": "$steps.get-shopper-profile-for-deletion.outputs.customerId",
        "email": "$steps.get-shopper-profile-for-deletion.outputs.email",
        "nameFirst": "$steps.get-shopper-profile-for-deletion.outputs.nameFirst",
        "nameLast": "$steps.get-shopper-profile-for-deletion.outputs.nameLast",
        "deletion_success": "$steps.request-shopper-deletion.outputs.deletion_success"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}