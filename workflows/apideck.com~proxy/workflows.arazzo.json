{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/apideck.com/proxy/10.14.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "create-and-retrieve-downstream-resource-via-proxy",
      "summary": "Creates a resource on a specified downstream service using the POST proxy endpoint and then retrieves the newly created resource using the GET proxy endpoint. This demonstrates a common pattern of creation followed by verification or retrieval.",
      "description": "Creates a resource on a specified downstream service using the POST proxy endpoint and then retrieves the newly created resource using the GET proxy endpoint. This demonstrates a common pattern of creation followed by verification or retrieval.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "x-apideck-downstream-url": {
            "type": "string"
          },
          "x-apideck-downstream-authorization": {
            "type": "string"
          },
          "create-downstream-resource_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-downstream-resource",
          "description": "Proxies a POST request to create a resource on the downstream service specified in the headers. Assumes the downstream service returns an identifier for the created resource.",
          "operationId": "postProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "requestBody": {
            "contentType": "*/*",
            "payload": "$inputs.create-downstream-resource_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_creation_response": "$response.body",
            "created_resource_id": "$response.body"
          }
        },
        {
          "stepId": "get-downstream-resource",
          "description": "Proxies a GET request to retrieve the resource created in the previous step from the downstream service. The downstream URL needs to be constructed using the ID obtained from the creation step.",
          "operationId": "getProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_retrieval_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "downstream_creation_response": "$steps.create-downstream-resource.outputs.downstream_creation_response",
        "created_resource_id": "$steps.create-downstream-resource.outputs.created_resource_id",
        "downstream_retrieval_response": "$steps.get-downstream-resource.outputs.downstream_retrieval_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-and-update-downstream-resource-via-proxy",
      "summary": "Retrieves the current state of a resource from a downstream service using the GET proxy endpoint and then updates it using the PUT or PATCH proxy endpoint. This is useful for modifying existing data managed by the downstream service.",
      "description": "Retrieves the current state of a resource from a downstream service using the GET proxy endpoint and then updates it using the PUT or PATCH proxy endpoint. This is useful for modifying existing data managed by the downstream service.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "x-apideck-downstream-url": {
            "type": "string"
          },
          "x-apideck-downstream-authorization": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-resource-for-update",
          "description": "Proxies a GET request to retrieve the current details of a resource from the downstream service.",
          "operationId": "getProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_resource_data": "$response.body",
            "resource_identifier": "$response.body"
          }
        },
        {
          "stepId": "update-downstream-resource",
          "description": "Proxies a PUT request (or PATCH, using the patchProxy endpoint instead) to update the resource retrieved in the previous step on the downstream service. The downstream URL and request body would typically use information from the GET step.",
          "operationId": "putProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "requestBody": {
            "contentType": "*/*",
            "payload": {
              "x-apideck-downstream-url-with-id": "$steps.get-resource-for-update.outputs.resource_identifier",
              "update_request_body": "$steps.get-resource-for-update.outputs.downstream_resource_data"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_update_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "downstream_resource_data": "$steps.get-resource-for-update.outputs.downstream_resource_data",
        "resource_identifier": "$steps.get-resource-for-update.outputs.resource_identifier",
        "downstream_update_response": "$steps.update-downstream-resource.outputs.downstream_update_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "check-resource-existence-and-delete-via-proxy",
      "summary": "Checks if a resource exists on a downstream service by attempting to retrieve it using the GET proxy endpoint. If found (or based on some logic), it proceeds to delete the resource using the DELETE proxy endpoint.",
      "description": "Checks if a resource exists on a downstream service by attempting to retrieve it using the GET proxy endpoint. If found (or based on some logic), it proceeds to delete the resource using the DELETE proxy endpoint.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "x-apideck-downstream-url": {
            "type": "string"
          },
          "x-apideck-downstream-authorization": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "check-resource-existence",
          "description": "Proxies a GET request to check if a specific resource exists on the downstream service and potentially retrieve its exact identifier.",
          "operationId": "getProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_check_response": "$response.body",
            "resource_identifier_for_delete": "$response.body"
          }
        },
        {
          "stepId": "delete-downstream-resource",
          "description": "Proxies a DELETE request to remove the resource identified in the previous step from the downstream service. The downstream URL needs to be constructed using the ID obtained from the check step.",
          "operationId": "deleteProxy",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "x-apideck-downstream-url",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-url"
            },
            {
              "name": "x-apideck-downstream-authorization",
              "in": "header",
              "value": "$inputs.x-apideck-downstream-authorization"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downstream_delete_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "downstream_check_response": "$steps.check-resource-existence.outputs.downstream_check_response",
        "resource_identifier_for_delete": "$steps.check-resource-existence.outputs.resource_identifier_for_delete",
        "downstream_delete_response": "$steps.delete-downstream-resource.outputs.downstream_delete_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}