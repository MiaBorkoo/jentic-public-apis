{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/automl/v1beta1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "train-deploy-and-get-online-predictions",
      "summary": "Creates a dataset, imports data, trains a model, deploys the model, and performs an online prediction. This represents a core end-to-end user journey for many AutoML use cases.",
      "description": "Creates a dataset, imports data, trains a model, deploys the model, and performs an online prediction. This represents a core end-to-end user journey for many AutoML use cases.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "create-dataset_body": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "fieldMask": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-dataset",
          "description": "Creates a new dataset resource within a project and location.",
          "operationId": "automl.projects.locations.datasets.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dataset_name": "$response.body",
            "dataset_object": "$response.body"
          }
        },
        {
          "stepId": "import-data",
          "description": "Imports data into the created dataset from a specified source (GCS or BigQuery). This is an asynchronous operation.",
          "operationId": "automl.projects.locations.datasets.importData",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-dataset.outputs.dataset_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-import-operation",
          "description": "Polls the long-running import data operation until it completes.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.import-data.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "create-model",
          "description": "Starts the training process for a new model based on the imported dataset. This is an asynchronous operation.",
          "operationId": "automl.projects.locations.models.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "Model object (displayName, datasetId, specific metadata e.g., imageClassificationModelMetadata)": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-create-model-operation",
          "description": "Polls the long-running model creation (training) operation until it completes.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body",
            "model_name": "$response.body",
            "model_object": "$response.body"
          }
        },
        {
          "stepId": "deploy-model",
          "description": "Deploys the trained model so it can serve predictions. This is required for some model types and is an asynchronous operation.",
          "operationId": "automl.projects.locations.models.deploy",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.poll-create-model-operation.outputs.model_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.poll-create-model-operation.outputs.model_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-deploy-operation",
          "description": "Polls the long-running model deployment operation until it completes.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.deploy-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "predict-online",
          "description": "Performs a synchronous online prediction using the deployed model.",
          "operationId": "automl.projects.locations.models.predict",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.poll-create-model-operation.outputs.model_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.poll-create-model-operation.outputs.model_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "PredictResponse (payload)": "$response.body"
          }
        }
      ],
      "outputs": {
        "dataset_name": "$steps.create-dataset.outputs.dataset_name",
        "dataset_object": "$steps.create-dataset.outputs.dataset_object",
        "operation_name": "$steps.deploy-model.outputs.operation_name",
        "operation_object": "$steps.deploy-model.outputs.operation_object",
        "operation_object_completed": "$steps.poll-deploy-operation.outputs.operation_object_completed",
        "model_name": "$steps.poll-create-model-operation.outputs.model_name",
        "model_object": "$steps.poll-create-model-operation.outputs.model_object",
        "PredictResponse (payload)": "$steps.predict-online.outputs.PredictResponse (payload)"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "train-and-get-batch-predictions",
      "summary": "Creates a dataset, imports data, trains a model, deploys it (if necessary), and initiates a batch prediction job. The status of the batch job is then polled to retrieve the results location.",
      "description": "Creates a dataset, imports data, trains a model, deploys it (if necessary), and initiates a batch prediction job. The status of the batch job is then polled to retrieve the results location.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "create-dataset_body": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "fieldMask": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-dataset",
          "description": "Creates a new dataset resource.",
          "operationId": "automl.projects.locations.datasets.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dataset_name": "$response.body",
            "dataset_object": "$response.body"
          }
        },
        {
          "stepId": "import-data",
          "description": "Imports data into the dataset asynchronously.",
          "operationId": "automl.projects.locations.datasets.importData",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-dataset.outputs.dataset_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-import-operation",
          "description": "Polls the import data operation.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.import-data.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "create-model",
          "description": "Starts model training asynchronously.",
          "operationId": "automl.projects.locations.models.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "Model object": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-create-model-operation",
          "description": "Polls the model creation operation.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body",
            "model_name": "$response.body",
            "model_object": "$response.body"
          }
        },
        {
          "stepId": "deploy-model",
          "description": "Deploys the trained model asynchronously (required for some types like Tables).",
          "operationId": "automl.projects.locations.models.deploy",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.poll-create-model-operation.outputs.model_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.poll-create-model-operation.outputs.model_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-deploy-operation",
          "description": "Polls the model deployment operation.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.deploy-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "batch-predict",
          "description": "Starts an asynchronous batch prediction job using the deployed model.",
          "operationId": "automl.projects.locations.models.batchPredict",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.poll-create-model-operation.outputs.model_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.poll-create-model-operation.outputs.model_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-batch-predict-operation",
          "description": "Polls the batch prediction operation until it completes to get the results location.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.batch-predict.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body",
            "batch_predict_result": "$response.body",
            "output_info": "$response.body"
          }
        }
      ],
      "outputs": {
        "dataset_name": "$steps.create-dataset.outputs.dataset_name",
        "dataset_object": "$steps.create-dataset.outputs.dataset_object",
        "operation_name": "$steps.batch-predict.outputs.operation_name",
        "operation_object": "$steps.batch-predict.outputs.operation_object",
        "operation_object_completed": "$steps.poll-batch-predict-operation.outputs.operation_object_completed",
        "model_name": "$steps.poll-create-model-operation.outputs.model_name",
        "model_object": "$steps.poll-create-model-operation.outputs.model_object",
        "batch_predict_result": "$steps.poll-batch-predict-operation.outputs.batch_predict_result",
        "output_info": "$steps.poll-batch-predict-operation.outputs.output_info"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "train-and-evaluate-model",
      "summary": "Creates a dataset, imports data, trains a model, and then retrieves the evaluation metrics generated during training.",
      "description": "Creates a dataset, imports data, trains a model, and then retrieves the evaluation metrics generated during training.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "create-dataset_body": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "fieldMask": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pageSize": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-dataset",
          "description": "Creates a new dataset resource.",
          "operationId": "automl.projects.locations.datasets.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dataset_name": "$response.body",
            "dataset_object": "$response.body"
          }
        },
        {
          "stepId": "import-data",
          "description": "Imports data into the dataset asynchronously.",
          "operationId": "automl.projects.locations.datasets.importData",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-dataset.outputs.dataset_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-import-operation",
          "description": "Polls the import data operation.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.import-data.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "create-model",
          "description": "Starts model training asynchronously. Model evaluations are generated automatically upon completion.",
          "operationId": "automl.projects.locations.models.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "Model object": "$steps.create-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-create-model-operation",
          "description": "Polls the model creation operation.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body",
            "model_name": "$response.body",
            "model_object": "$response.body"
          }
        },
        {
          "stepId": "list-evaluations",
          "description": "Lists the model evaluations associated with the trained model.",
          "operationId": "automl.projects.locations.models.modelEvaluations.list",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$steps.poll-create-model-operation.outputs.model_name"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pageSize",
              "in": "query",
              "value": "$inputs.pageSize"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ListModelEvaluationsResponse": "$response.body"
          }
        }
      ],
      "outputs": {
        "dataset_name": "$steps.create-dataset.outputs.dataset_name",
        "dataset_object": "$steps.create-dataset.outputs.dataset_object",
        "operation_name": "$steps.create-model.outputs.operation_name",
        "operation_object": "$steps.create-model.outputs.operation_object",
        "operation_object_completed": "$steps.poll-create-model-operation.outputs.operation_object_completed",
        "model_name": "$steps.poll-create-model-operation.outputs.model_name",
        "model_object": "$steps.poll-create-model-operation.outputs.model_object",
        "ListModelEvaluationsResponse": "$steps.list-evaluations.outputs.ListModelEvaluationsResponse"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "export-trained-model",
      "summary": "Finds an existing model and exports it to a specified Google Cloud Storage location or Google Container Registry.",
      "description": "Finds an existing model and exports it to a specified Google Cloud Storage location or Google Container Registry.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pageSize": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldMask": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-models",
          "description": "Lists models within a project and location to find the desired model.",
          "operationId": "automl.projects.locations.models.list",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pageSize",
              "in": "query",
              "value": "$inputs.pageSize"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ListModelsResponse": "$response.body"
          }
        },
        {
          "stepId": "export-model",
          "description": "Starts an asynchronous operation to export a specified model.",
          "operationId": "automl.projects.locations.models.export",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.list-models.outputs.ListModelsResponse.model[0].name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.list-models.outputs.ListModelsResponse.model[0].name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-export-operation",
          "description": "Polls the export model operation until it completes to confirm export and get output details.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.export-model.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body",
            "output_info": "$response.body"
          }
        }
      ],
      "outputs": {
        "ListModelsResponse": "$steps.list-models.outputs.ListModelsResponse",
        "operation_name": "$steps.export-model.outputs.operation_name",
        "operation_object": "$steps.export-model.outputs.operation_object",
        "operation_object_completed": "$steps.poll-export-operation.outputs.operation_object_completed",
        "output_info": "$steps.poll-export-operation.outputs.output_info"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-tables-dataset-schema",
      "summary": "Creates a Tables dataset, imports data (triggering schema inference), lists the inferred table and column specifications, and allows updating a column specification (e.g., correcting a data type).",
      "description": "Creates a Tables dataset, imports data (triggering schema inference), lists the inferred table and column specifications, and allows updating a column specification (e.g., correcting a data type).",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "create-tables-dataset_body": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "fieldMask": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pageSize": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "updateMask": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-tables-dataset",
          "description": "Creates a new dataset specifically configured for Tables.",
          "operationId": "automl.projects.locations.datasets.create",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$inputs.parent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-tables-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dataset_name": "$response.body",
            "dataset_object": "$response.body"
          }
        },
        {
          "stepId": "import-tables-data",
          "description": "Imports data into the Tables dataset, specifying the schema inference version. Asynchronous.",
          "operationId": "automl.projects.locations.datasets.importData",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.create-tables-dataset.outputs.dataset_name"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.create-tables-dataset.outputs.dataset_name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_name": "$response.body",
            "operation_object": "$response.body"
          }
        },
        {
          "stepId": "poll-import-operation",
          "description": "Polls the import data operation until schema inference is complete.",
          "operationId": "automl.projects.locations.operations.get",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.import-tables-data.outputs.operation_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operation_object_completed": "$response.body"
          }
        },
        {
          "stepId": "list-table-specs",
          "description": "Lists the table specifications within the dataset.",
          "operationId": "automl.projects.locations.datasets.tableSpecs.list",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$steps.create-tables-dataset.outputs.dataset_name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pageSize",
              "in": "query",
              "value": "$inputs.pageSize"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ListTableSpecsResponse": "$response.body"
          }
        },
        {
          "stepId": "list-column-specs",
          "description": "Lists the column specifications for a specific table spec.",
          "operationId": "automl.projects.locations.datasets.tableSpecs.columnSpecs.list",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "parent",
              "in": "path",
              "value": "$steps.list-table-specs.outputs.ListTableSpecsResponse.tableSpecs[0].name"
            },
            {
              "name": "fieldMask",
              "in": "query",
              "value": "$inputs.fieldMask"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pageSize",
              "in": "query",
              "value": "$inputs.pageSize"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ListColumnSpecsResponse": "$response.body"
          }
        },
        {
          "stepId": "update-column-spec",
          "description": "Updates a specific column specification, e.g., to change its data type.",
          "operationId": "automl.projects.locations.datasets.tableSpecs.columnSpecs.patch",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$steps.list-column-specs.outputs.ListColumnSpecsResponse.columnSpecs[0].name"
            },
            {
              "name": "updateMask",
              "in": "query",
              "value": "$inputs.updateMask"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$steps.list-column-specs.outputs.ListColumnSpecsResponse.columnSpecs[0].name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ColumnSpec object": "$response.body"
          }
        }
      ],
      "outputs": {
        "dataset_name": "$steps.create-tables-dataset.outputs.dataset_name",
        "dataset_object": "$steps.create-tables-dataset.outputs.dataset_object",
        "operation_name": "$steps.import-tables-data.outputs.operation_name",
        "operation_object": "$steps.import-tables-data.outputs.operation_object",
        "operation_object_completed": "$steps.poll-import-operation.outputs.operation_object_completed",
        "ListTableSpecsResponse": "$steps.list-table-specs.outputs.ListTableSpecsResponse",
        "ListColumnSpecsResponse": "$steps.list-column-specs.outputs.ListColumnSpecsResponse",
        "ColumnSpec object": "$steps.update-column-spec.outputs.ColumnSpec object"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-model-access-control",
      "summary": "Retrieves, modifies, and tests the IAM policy for a specific AutoML model to control user access.",
      "description": "Retrieves, modifies, and tests the IAM policy for a specific AutoML model to control user access.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "options.requestedPolicyVersion": {
            "type": "string"
          },
          "test-model-iam-permissions_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-model-iam-policy",
          "description": "Gets the current IAM policy for a specified model.",
          "operationId": "automl.projects.locations.models.getIamPolicy",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "resource",
              "in": "path",
              "value": "$inputs.resource"
            },
            {
              "name": "options.requestedPolicyVersion",
              "in": "query",
              "value": "$inputs.options.requestedPolicyVersion"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Policy object": "$response.body"
          }
        },
        {
          "stepId": "set-model-iam-policy",
          "description": "Sets a new IAM policy for the model, replacing the existing one.",
          "operationId": "automl.projects.locations.models.setIamPolicy",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "resource",
              "in": "path",
              "value": "$inputs.resource"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "SetIamPolicyRequest (policy)": "$steps.get-model-iam-policy.outputs.Policy object"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Policy object": "$response.body"
          }
        },
        {
          "stepId": "test-model-iam-permissions",
          "description": "Tests whether the caller has a given set of permissions on the model.",
          "operationId": "automl.projects.locations.testIamPermissions",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "resource",
              "in": "path",
              "value": "$inputs.resource"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.test-model-iam-permissions_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "TestIamPermissionsResponse (permissions)": "$response.body"
          }
        }
      ],
      "outputs": {
        "Policy object": "$steps.set-model-iam-policy.outputs.Policy object",
        "TestIamPermissionsResponse (permissions)": "$steps.test-model-iam-permissions.outputs.TestIamPermissionsResponse (permissions)"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}