{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/autotask.net/main/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "user-authentication-and-zone-check",
      "summary": "Authenticates the API user and retrieves their specific zone URL for subsequent API calls.",
      "description": "Authenticates the API user and retrieves their specific zone URL for subsequent API calls.",
      "inputs": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-zone-information",
          "description": "Retrieves the user's specific API zone URL based on their username.",
          "operationId": "ZoneInformationApiIntegration_QueryZoneInformation",
          "parameters": [
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url": "$response.body",
            "zoneName": "$response.body"
          }
        },
        {
          "stepId": "authenticate-user",
          "description": "Authenticates the user with their credentials and retrieves an auth token.",
          "operationId": "AuthenticateApiIntegration_QueryAuthenticate",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "authToken": "$response.body",
            "expiration": "$response.body"
          }
        }
      ],
      "outputs": {
        "url": "$steps.get-zone-information.outputs.url",
        "zoneName": "$steps.get-zone-information.outputs.zoneName",
        "authToken": "$steps.authenticate-user.outputs.authToken",
        "expiration": "$steps.authenticate-user.outputs.expiration"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "onboard-new-client",
      "summary": "Creates a new company record along with its primary contact and location.",
      "description": "Creates a new company record along with its primary contact and location.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "isActive": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryID": {
            "type": "string"
          },
          "isPrimary": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-company",
          "description": "Creates a new company record.",
          "operationId": "Companies_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "create-contact",
          "description": "Creates a new contact associated with the newly created company.",
          "operationId": "CompanyContactsChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-company.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-company.outputs.itemId",
              "emailAddress": "$inputs.emailAddress",
              "firstName": "$inputs.firstName",
              "isActive": "$inputs.isActive",
              "lastName": "$inputs.lastName",
              "phone": "$inputs.phone"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "create-company-location",
          "description": "Creates a new location for the company.",
          "operationId": "CompanyLocationsChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-company.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-company.outputs.itemId",
              "address1": "$inputs.address1",
              "city": "$inputs.city",
              "countryID": "$inputs.countryID",
              "isPrimary": "$inputs.isPrimary",
              "name": "$inputs.name",
              "postalCode": "$inputs.postalCode",
              "state": "$inputs.state"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "itemId": "$steps.create-company-location.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-document-ticket",
      "summary": "Creates a new support ticket and adds an initial note and attachment.",
      "description": "Creates a new support ticket and adds an initial note and attachment.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "noteType": {
            "type": "string"
          },
          "publish": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "attachmentType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "fileSize": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-ticket",
          "description": "Creates a new support ticket.",
          "operationId": "Tickets_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "add-ticket-note",
          "description": "Adds a note to the newly created ticket.",
          "operationId": "TicketNotesChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-ticket.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-ticket.outputs.itemId",
              "description": "$inputs.description",
              "noteType": "$inputs.noteType",
              "publish": "$inputs.publish",
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "add-ticket-attachment",
          "description": "Adds an attachment to the newly created ticket.",
          "operationId": "TicketAttachmentsChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-ticket.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-ticket.outputs.itemId",
              "attachmentType": "$inputs.attachmentType",
              "contentType": "$inputs.contentType",
              "data": "$inputs.data",
              "fileSize": "$inputs.fileSize",
              "publish": "$inputs.publish",
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "itemId": "$steps.add-ticket-attachment.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-project-tasks",
      "summary": "Retrieve tasks for a project, add a new task, and then add a note to that task.",
      "description": "Retrieve tasks for a project, add a new task, and then add a note to that task.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "assignedResourceID": {
            "type": "string"
          },
          "assignedResourceRoleID": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          },
          "estimatedHours": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "noteType": {
            "type": "string"
          },
          "publish": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-project",
          "description": "Find a project by name or number.",
          "operationId": "Projects_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].id": "$response.body"
          }
        },
        {
          "stepId": "get-project-tasks",
          "description": "Retrieve all tasks associated with the specified project.",
          "operationId": "TasksChild_Query",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$inputs.parentId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body"
          }
        },
        {
          "stepId": "create-project-task",
          "description": "Creates a new task within the specified project.",
          "operationId": "TasksChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$inputs.parentId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "assignedResourceID": "$inputs.assignedResourceID",
              "assignedResourceRoleID": "$inputs.assignedResourceRoleID",
              "description": "$inputs.description",
              "endDateTime": "$inputs.endDateTime",
              "estimatedHours": "$inputs.estimatedHours",
              "priority": "$inputs.priority",
              "startDateTime": "$inputs.startDateTime",
              "status": "$inputs.status",
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "add-task-note",
          "description": "Adds a note to the newly created task.",
          "operationId": "TaskNotesChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-project-task.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-project-task.outputs.itemId",
              "description": "$inputs.description",
              "noteType": "$inputs.noteType",
              "publish": "$inputs.publish",
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "items[0].id": "$steps.query-project.outputs.items[0].id",
        "items": "$steps.get-project-tasks.outputs.items",
        "itemId": "$steps.add-task-note.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "log-time-against-ticket",
      "summary": "Finds a ticket and logs time against it.",
      "description": "Finds a ticket and logs time against it.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-ticket",
          "description": "Queries for a specific ticket using criteria (e.g., ticket number or title).",
          "operationId": "Tickets_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].id": "$response.body"
          }
        },
        {
          "stepId": "create-time-entry",
          "description": "Creates a time entry associated with the found ticket.",
          "operationId": "TimeEntries_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "items[0].id": "$steps.find-ticket.outputs.items[0].id",
        "itemId": "$steps.create-time-entry.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-sales-opportunity-and-initial-quote",
      "summary": "Creates a new sales opportunity and an associated quote with an initial item.",
      "description": "Creates a new sales opportunity and an associated quote with an initial item.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isTaxable": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productID": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "taxCategoryID": {
            "type": "string"
          },
          "unitCost": {
            "type": "string"
          },
          "unitPrice": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-opportunity",
          "description": "Creates a new sales opportunity.",
          "operationId": "Opportunities_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "create-quote",
          "description": "Creates a new quote linked to the opportunity.",
          "operationId": "Quotes_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "add-quote-item",
          "description": "Adds an item (product, service, etc.) to the quote.",
          "operationId": "QuoteItemsChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-quote.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-quote.outputs.itemId",
              "description": "$inputs.description",
              "isTaxable": "$inputs.isTaxable",
              "name": "$inputs.name",
              "productID": "$inputs.productID",
              "quantity": "$inputs.quantity",
              "taxCategoryID": "$inputs.taxCategoryID",
              "unitCost": "$inputs.unitCost",
              "unitPrice": "$inputs.unitPrice"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "itemId": "$steps.add-quote-item.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "receive-inventory-via-purchase-order",
      "summary": "Creates a purchase order, adds an item, receives the item, and verifies inventory.",
      "description": "Creates a purchase order, adds an item, receives the item, and verifies inventory.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "estimatedArrivalDate": {
            "type": "string"
          },
          "inventoryLocationID": {
            "type": "string"
          },
          "productID": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "unitCost": {
            "type": "string"
          },
          "quantityNowReceiving": {
            "type": "string"
          },
          "receiveDate": {
            "type": "string"
          },
          "receivedByResourceID": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-purchase-order",
          "description": "Creates a new purchase order.",
          "operationId": "PurchaseOrders_CreateEntity",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "add-purchase-order-item",
          "description": "Adds an item to the purchase order.",
          "operationId": "PurchaseOrderItemsChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.create-purchase-order.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.create-purchase-order.outputs.itemId",
              "estimatedArrivalDate": "$inputs.estimatedArrivalDate",
              "inventoryLocationID": "$inputs.inventoryLocationID",
              "productID": "$inputs.productID",
              "quantity": "$inputs.quantity",
              "unitCost": "$inputs.unitCost"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "receive-purchase-order-item",
          "description": "Receives a specified quantity of the purchase order item.",
          "operationId": "PurchaseOrderItemReceivingChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$steps.add-purchase-order-item.outputs.itemId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "parentId": "$steps.add-purchase-order-item.outputs.itemId",
              "quantityNowReceiving": "$inputs.quantityNowReceiving",
              "receiveDate": "$inputs.receiveDate",
              "receivedByResourceID": "$inputs.receivedByResourceID",
              "serialNumber": "$inputs.serialNumber"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        },
        {
          "stepId": "query-inventory-item",
          "description": "Queries the inventory item to verify the updated quantity on hand.",
          "operationId": "InventoryItems_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].quantityOnHand": "$response.body",
            "items[0].productID": "$response.body",
            "items[0].inventoryLocationID": "$response.body"
          }
        }
      ],
      "outputs": {
        "itemId": "$steps.receive-purchase-order-item.outputs.itemId",
        "items[0].quantityOnHand": "$steps.query-inventory-item.outputs.items[0].quantityOnHand",
        "items[0].productID": "$steps.query-inventory-item.outputs.items[0].productID",
        "items[0].inventoryLocationID": "$steps.query-inventory-item.outputs.items[0].inventoryLocationID"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-company-contacts",
      "summary": "Retrieve contacts for a specific company and update a contact's details.",
      "description": "Retrieve contacts for a specific company and update a contact's details.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "isActive": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-company",
          "description": "Find a company by name or other criteria.",
          "operationId": "Companies_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].id": "$response.body"
          }
        },
        {
          "stepId": "get-company-contacts",
          "description": "Retrieve all contacts associated with the specified company.",
          "operationId": "CompanyContactsChild_Query",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$inputs.parentId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body"
          }
        },
        {
          "stepId": "update-contact",
          "description": "Updates details for a specific contact within the company.",
          "operationId": "CompanyContactsChild_UpdateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$inputs.parentId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.get-company-contacts.outputs.items[0].id",
              "emailAddress": "$inputs.emailAddress",
              "firstName": "$inputs.firstName",
              "isActive": "$inputs.isActive",
              "lastName": "$inputs.lastName",
              "phone": "$inputs.phone",
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "items[0].id": "$steps.query-company.outputs.items[0].id",
        "items": "$steps.get-company-contacts.outputs.items",
        "itemId": "$steps.update-contact.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-resource-time-off-request",
      "summary": "Allows a resource to request time off and a manager to approve or reject it.",
      "description": "Allows a resource to request time off and a manager to approve or reject it.",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-time-off-request",
          "description": "Queries for the submitted time off request (e.g., by resourceID and status).",
          "operationId": "TimeOffRequests_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].id": "$response.body"
          }
        },
        {
          "stepId": "approve-time-off-request",
          "description": "Approves the specified time off request.",
          "operationId": "TimeOffRequestsApproveChild_CreateEntity",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "value": "$inputs.parentId"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "itemId": "$response.body"
          }
        }
      ],
      "outputs": {
        "items[0].id": "$steps.query-time-off-request.outputs.items[0].id",
        "itemId": "$steps.approve-time-off-request.outputs.itemId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-invoice-details",
      "summary": "Finds an invoice and retrieves its details, including line items (BillingItems).",
      "description": "Finds an invoice and retrieves its details, including line items (BillingItems).",
      "inputs": {
        "type": "object",
        "properties": {
          "ApiIntegrationCode": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "Secret": {
            "type": "string"
          },
          "ImpersonationResourceId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "query-invoice",
          "description": "Queries for a specific invoice (e.g., by Invoice Number or Company ID).",
          "operationId": "Invoices_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items[0].id": "$response.body",
            "items[0].invoiceNumber": "$response.body"
          }
        },
        {
          "stepId": "get-invoice-details",
          "description": "Retrieves the full details of the specified invoice.",
          "operationId": "Invoices_QueryItem",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "item": "$response.body"
          }
        },
        {
          "stepId": "get-invoice-billing-items",
          "description": "Queries for all billing items associated with the specific invoice ID.",
          "operationId": "BillingItems_Query",
          "parameters": [
            {
              "name": "ApiIntegrationCode",
              "in": "header",
              "value": "$inputs.ApiIntegrationCode"
            },
            {
              "name": "UserName",
              "in": "header",
              "value": "$inputs.UserName"
            },
            {
              "name": "Secret",
              "in": "header",
              "value": "$inputs.Secret"
            },
            {
              "name": "ImpersonationResourceId",
              "in": "header",
              "value": "$inputs.ImpersonationResourceId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body"
          }
        }
      ],
      "outputs": {
        "items[0].id": "$steps.query-invoice.outputs.items[0].id",
        "items[0].invoiceNumber": "$steps.query-invoice.outputs.items[0].invoiceNumber",
        "item": "$steps.get-invoice-details.outputs.item",
        "items": "$steps.get-invoice-billing-items.outputs.items"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}