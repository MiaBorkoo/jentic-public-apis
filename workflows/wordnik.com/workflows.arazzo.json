{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/wordnik.com/main/4.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "comprehensive-word-lookup",
      "summary": "Retrieves detailed information about a specific word, including definitions, examples, pronunciations (text and audio), and related words. Useful for dictionary applications or language learning tools.",
      "description": "Retrieves detailed information about a specific word, including definitions, examples, pronunciations (text and audio), and related words. Useful for dictionary applications or language learning tools.",
      "inputs": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          },
          "includeDuplicates": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "sourceDictionary": {
            "type": "string"
          },
          "typeFormat": {
            "type": "string"
          },
          "relationshipTypes": {
            "type": "string"
          },
          "limitPerRelationshipType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-word-definitions",
          "description": "Fetch definitions for the specified word.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-word-examples",
          "description": "Fetch example sentences for the specified word.",
          "operationId": "getExamples",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "includeDuplicates",
              "in": "query",
              "value": "$inputs.includeDuplicates"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "examples": "$response.body"
          }
        },
        {
          "stepId": "get-word-text-pronunciations",
          "description": "Fetch text pronunciations (e.g., IPA) for the specified word.",
          "operationId": "getTextPronunciations",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "sourceDictionary",
              "in": "query",
              "value": "$inputs.sourceDictionary"
            },
            {
              "name": "typeFormat",
              "in": "query",
              "value": "$inputs.typeFormat"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "text_pronunciations": "$response.body"
          }
        },
        {
          "stepId": "get-word-audio",
          "description": "Fetch audio pronunciation metadata (including file URL) for the specified word.",
          "operationId": "getAudio",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_files": "$response.body"
          }
        },
        {
          "stepId": "get-related-words",
          "description": "Fetch words related to the specified word (synonyms, antonyms, etc.).",
          "operationId": "getRelatedWords",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "relationshipTypes",
              "in": "query",
              "value": "$inputs.relationshipTypes"
            },
            {
              "name": "limitPerRelationshipType",
              "in": "query",
              "value": "$inputs.limitPerRelationshipType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "related_words": "$response.body"
          }
        }
      ],
      "outputs": {
        "definitions": "$steps.get-word-definitions.outputs.definitions",
        "examples": "$steps.get-word-examples.outputs.examples",
        "text_pronunciations": "$steps.get-word-text-pronunciations.outputs.text_pronunciations",
        "audio_files": "$steps.get-word-audio.outputs.audio_files",
        "related_words": "$steps.get-related-words.outputs.related_words"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "word-of-the-day-display",
      "summary": "Fetches the Wordnik Word of the Day, along with its definition, a top example, and audio pronunciation. Ideal for websites or apps featuring daily content.",
      "description": "Fetches the Wordnik Word of the Day, along with its definition, a top example, and audio pronunciation. Ideal for websites or apps featuring daily content.",
      "inputs": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "word": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-word-of-the-day",
          "description": "Retrieve the Word of the Day object, which includes the word string.",
          "operationId": "getWordOfTheDay",
          "parameters": [
            {
              "name": "date",
              "in": "query",
              "value": "$inputs.date"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "word_of_the_day_object": "$response.body",
            "word_of_the_day_string": "$response.body"
          }
        },
        {
          "stepId": "get-wotd-definitions",
          "description": "Fetch definitions for the Word of the Day.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.get-word-of-the-day.outputs.word_of_the_day_string"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-wotd-top-example",
          "description": "Fetch the top example sentence for the Word of the Day.",
          "operationId": "getTopExample",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.get-word-of-the-day.outputs.word_of_the_day_string"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "top_example": "$response.body"
          }
        },
        {
          "stepId": "get-wotd-audio",
          "description": "Fetch audio pronunciation for the Word of the Day.",
          "operationId": "getAudio",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.get-word-of-the-day.outputs.word_of_the_day_string"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_files": "$response.body"
          }
        }
      ],
      "outputs": {
        "word_of_the_day_object": "$steps.get-word-of-the-day.outputs.word_of_the_day_object",
        "word_of_the_day_string": "$steps.get-word-of-the-day.outputs.word_of_the_day_string",
        "definitions": "$steps.get-wotd-definitions.outputs.definitions",
        "top_example": "$steps.get-wotd-top-example.outputs.top_example",
        "audio_files": "$steps.get-wotd-audio.outputs.audio_files"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "basic-language-learning-aid",
      "summary": "Provides essential information for learning a word: its definition, text and audio pronunciation, and a clear example sentence.",
      "description": "Provides essential information for learning a word: its definition, text and audio pronunciation, and a clear example sentence.",
      "inputs": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          },
          "sourceDictionary": {
            "type": "string"
          },
          "typeFormat": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-learning-word-definition",
          "description": "Fetch definitions for the word being learned.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-learning-word-pronunciation-text",
          "description": "Fetch text-based pronunciation (e.g., IPA).",
          "operationId": "getTextPronunciations",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "sourceDictionary",
              "in": "query",
              "value": "$inputs.sourceDictionary"
            },
            {
              "name": "typeFormat",
              "in": "query",
              "value": "$inputs.typeFormat"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "text_pronunciations": "$response.body"
          }
        },
        {
          "stepId": "get-learning-word-pronunciation-audio",
          "description": "Fetch audio pronunciation.",
          "operationId": "getAudio",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_files": "$response.body"
          }
        },
        {
          "stepId": "get-learning-word-example",
          "description": "Fetch a top example sentence for context.",
          "operationId": "getTopExample",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$inputs.word"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "top_example": "$response.body"
          }
        }
      ],
      "outputs": {
        "definitions": "$steps.get-learning-word-definition.outputs.definitions",
        "text_pronunciations": "$steps.get-learning-word-pronunciation-text.outputs.text_pronunciations",
        "audio_files": "$steps.get-learning-word-pronunciation-audio.outputs.audio_files",
        "top_example": "$steps.get-learning-word-example.outputs.top_example"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "vocabulary-quiz-generator",
      "summary": "Generates data for a vocabulary quiz question by fetching a random word, its definition, and related words (like synonyms or antonyms) to potentially use as distractors.",
      "description": "Generates data for a vocabulary quiz question by fetching a random word, its definition, and related words (like synonyms or antonyms) to potentially use as distractors.",
      "inputs": {
        "type": "object",
        "properties": {
          "hasDictionaryDef": {
            "type": "string"
          },
          "includePartOfSpeech": {
            "type": "string"
          },
          "excludePartOfSpeech": {
            "type": "string"
          },
          "minCorpusCount": {
            "type": "string"
          },
          "maxCorpusCount": {
            "type": "string"
          },
          "minDictionaryCount": {
            "type": "string"
          },
          "maxDictionaryCount": {
            "type": "string"
          },
          "minLength": {
            "type": "string"
          },
          "maxLength": {
            "type": "string"
          },
          "word": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          },
          "relationshipTypes": {
            "type": "string"
          },
          "limitPerRelationshipType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-random-quiz-word",
          "description": "Fetch a random word object, ensuring it has a definition.",
          "operationId": "getRandomWord",
          "parameters": [
            {
              "name": "hasDictionaryDef",
              "in": "query",
              "value": "$inputs.hasDictionaryDef"
            },
            {
              "name": "includePartOfSpeech",
              "in": "query",
              "value": "$inputs.includePartOfSpeech"
            },
            {
              "name": "excludePartOfSpeech",
              "in": "query",
              "value": "$inputs.excludePartOfSpeech"
            },
            {
              "name": "minCorpusCount",
              "in": "query",
              "value": "$inputs.minCorpusCount"
            },
            {
              "name": "maxCorpusCount",
              "in": "query",
              "value": "$inputs.maxCorpusCount"
            },
            {
              "name": "minDictionaryCount",
              "in": "query",
              "value": "$inputs.minDictionaryCount"
            },
            {
              "name": "maxDictionaryCount",
              "in": "query",
              "value": "$inputs.maxDictionaryCount"
            },
            {
              "name": "minLength",
              "in": "query",
              "value": "$inputs.minLength"
            },
            {
              "name": "maxLength",
              "in": "query",
              "value": "$inputs.maxLength"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "random_word_object": "$response.body",
            "random_word_string": "$response.body"
          }
        },
        {
          "stepId": "get-quiz-word-definition",
          "description": "Fetch the definition for the randomly selected quiz word.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.get-random-quiz-word.outputs.random_word_string"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-quiz-word-distractors",
          "description": "Fetch related words (e.g., synonyms, antonyms) for the quiz word to use as potential distractors.",
          "operationId": "getRelatedWords",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.get-random-quiz-word.outputs.random_word_string"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "relationshipTypes",
              "in": "query",
              "value": "$inputs.relationshipTypes"
            },
            {
              "name": "limitPerRelationshipType",
              "in": "query",
              "value": "$inputs.limitPerRelationshipType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "related_words": "$response.body"
          }
        }
      ],
      "outputs": {
        "random_word_object": "$steps.get-random-quiz-word.outputs.random_word_object",
        "random_word_string": "$steps.get-random-quiz-word.outputs.random_word_string",
        "definitions": "$steps.get-quiz-word-definition.outputs.definitions",
        "related_words": "$steps.get-quiz-word-distractors.outputs.related_words"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "concept-to-word-finder",
      "summary": "Performs a reverse dictionary search based on a concept or definition query, retrieves matching words, and then fetches detailed information (definition, example) for a selected word.",
      "description": "Performs a reverse dictionary search based on a concept or definition query, retrieves matching words, and then fetches detailed information (definition, example) for a selected word.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "findSenseForWord": {
            "type": "string"
          },
          "includeSourceDictionaries": {
            "type": "string"
          },
          "excludeSourceDictionaries": {
            "type": "string"
          },
          "includePartOfSpeech": {
            "type": "string"
          },
          "excludePartOfSpeech": {
            "type": "string"
          },
          "minCorpusCount": {
            "type": "string"
          },
          "maxCorpusCount": {
            "type": "string"
          },
          "minLength": {
            "type": "string"
          },
          "maxLength": {
            "type": "string"
          },
          "expandTerms": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          },
          "sortBy": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "word": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-words-by-concept",
          "description": "Search for words based on a definition or concept query.",
          "operationId": "reverseDictionary",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "findSenseForWord",
              "in": "query",
              "value": "$inputs.findSenseForWord"
            },
            {
              "name": "includeSourceDictionaries",
              "in": "query",
              "value": "$inputs.includeSourceDictionaries"
            },
            {
              "name": "excludeSourceDictionaries",
              "in": "query",
              "value": "$inputs.excludeSourceDictionaries"
            },
            {
              "name": "includePartOfSpeech",
              "in": "query",
              "value": "$inputs.includePartOfSpeech"
            },
            {
              "name": "excludePartOfSpeech",
              "in": "query",
              "value": "$inputs.excludePartOfSpeech"
            },
            {
              "name": "minCorpusCount",
              "in": "query",
              "value": "$inputs.minCorpusCount"
            },
            {
              "name": "maxCorpusCount",
              "in": "query",
              "value": "$inputs.maxCorpusCount"
            },
            {
              "name": "minLength",
              "in": "query",
              "value": "$inputs.minLength"
            },
            {
              "name": "maxLength",
              "in": "query",
              "value": "$inputs.maxLength"
            },
            {
              "name": "expandTerms",
              "in": "query",
              "value": "$inputs.expandTerms"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            },
            {
              "name": "sortBy",
              "in": "query",
              "value": "$inputs.sortBy"
            },
            {
              "name": "sortOrder",
              "in": "query",
              "value": "$inputs.sortOrder"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "search_results": "$response.body",
            "found_words": "$response.body"
          }
        },
        {
          "stepId": "get-found-word-definition",
          "description": "Fetch definitions for a specific word found in the reverse dictionary search.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.find-words-by-concept.outputs.search_results"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-found-word-example",
          "description": "Fetch a top example sentence for the selected word.",
          "operationId": "getTopExample",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.find-words-by-concept.outputs.search_results"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "top_example": "$response.body"
          }
        }
      ],
      "outputs": {
        "search_results": "$steps.find-words-by-concept.outputs.search_results",
        "found_words": "$steps.find-words-by-concept.outputs.found_words",
        "definitions": "$steps.get-found-word-definition.outputs.definitions",
        "top_example": "$steps.get-found-word-example.outputs.top_example"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "word-game-assistant-scrabble",
      "summary": "Helps word game players by searching for words matching a pattern (e.g., using wildcards via regex), validating their existence with a definition lookup, and retrieving their Scrabble score.",
      "description": "Helps word game players by searching for words matching a pattern (e.g., using wildcards via regex), validating their existence with a definition lookup, and retrieving their Scrabble score.",
      "inputs": {
        "type": "object",
        "properties": {
          "allowRegex": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "caseSensitive": {
            "type": "string"
          },
          "includePartOfSpeech": {
            "type": "string"
          },
          "excludePartOfSpeech": {
            "type": "string"
          },
          "minCorpusCount": {
            "type": "string"
          },
          "maxCorpusCount": {
            "type": "string"
          },
          "minDictionaryCount": {
            "type": "string"
          },
          "maxDictionaryCount": {
            "type": "string"
          },
          "minLength": {
            "type": "string"
          },
          "maxLength": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "word": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "includeRelated": {
            "type": "string"
          },
          "sourceDictionaries": {
            "type": "string"
          },
          "useCanonical": {
            "type": "string"
          },
          "includeTags": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-words-by-pattern",
          "description": "Search for words matching a specific pattern or query, potentially using regex.",
          "operationId": "searchWords",
          "parameters": [
            {
              "name": "allowRegex",
              "in": "query",
              "value": "$inputs.allowRegex"
            },
            {
              "name": "query",
              "in": "path",
              "value": "$inputs.query"
            },
            {
              "name": "caseSensitive",
              "in": "query",
              "value": "$inputs.caseSensitive"
            },
            {
              "name": "includePartOfSpeech",
              "in": "query",
              "value": "$inputs.includePartOfSpeech"
            },
            {
              "name": "excludePartOfSpeech",
              "in": "query",
              "value": "$inputs.excludePartOfSpeech"
            },
            {
              "name": "minCorpusCount",
              "in": "query",
              "value": "$inputs.minCorpusCount"
            },
            {
              "name": "maxCorpusCount",
              "in": "query",
              "value": "$inputs.maxCorpusCount"
            },
            {
              "name": "minDictionaryCount",
              "in": "query",
              "value": "$inputs.minDictionaryCount"
            },
            {
              "name": "maxDictionaryCount",
              "in": "query",
              "value": "$inputs.maxDictionaryCount"
            },
            {
              "name": "minLength",
              "in": "query",
              "value": "$inputs.minLength"
            },
            {
              "name": "maxLength",
              "in": "query",
              "value": "$inputs.maxLength"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "search_results": "$response.body",
            "matched_words": "$response.body"
          }
        },
        {
          "stepId": "validate-word-definition",
          "description": "Fetch definitions for a potential word to validate its existence and meaning.",
          "operationId": "getDefinitions",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.search-words-by-pattern.outputs.search_results"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "partOfSpeech",
              "in": "query",
              "value": "$inputs.partOfSpeech"
            },
            {
              "name": "includeRelated",
              "in": "query",
              "value": "$inputs.includeRelated"
            },
            {
              "name": "sourceDictionaries",
              "in": "query",
              "value": "$inputs.sourceDictionaries"
            },
            {
              "name": "useCanonical",
              "in": "query",
              "value": "$inputs.useCanonical"
            },
            {
              "name": "includeTags",
              "in": "query",
              "value": "$inputs.includeTags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitions": "$response.body"
          }
        },
        {
          "stepId": "get-word-scrabble-score",
          "description": "Get the Scrabble score for the validated word.",
          "operationId": "getScrabbleScore",
          "parameters": [
            {
              "name": "word",
              "in": "path",
              "value": "$steps.search-words-by-pattern.outputs.search_results"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "scrabble_score": "$response.body"
          }
        }
      ],
      "outputs": {
        "search_results": "$steps.search-words-by-pattern.outputs.search_results",
        "matched_words": "$steps.search-words-by-pattern.outputs.matched_words",
        "definitions": "$steps.validate-word-definition.outputs.definitions",
        "scrabble_score": "$steps.get-word-scrabble-score.outputs.scrabble_score"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}