{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/onsched.com/consumer/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "book-new-appointment-two-step-process",
      "summary": "Guides a user through selecting a service, checking availability, creating an initial appointment, and then confirming the booking. This workflow is suitable for scenarios where additional information or payment might be collected between the initial creation and final booking.",
      "description": "Guides a user through selecting a service, checking availability, creating an initial appointment, and then confirming the booking. This workflow is suitable for scenarios where additional information or payment might be collected between the initial creation and final booking.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "serviceGroupId": {
            "type": "string"
          },
          "defaultService": {
            "type": "string"
          },
          "allLocations": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string"
          },
          "sortDescending": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceGroupId": {
            "type": "string"
          },
          "resourceIds": {
            "type": "string"
          },
          "roundRobin": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "tzOffset": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "dayAvailabilityStartDate": {
            "type": "string"
          },
          "dayAvailability": {
            "type": "string"
          },
          "firstDayAvailable": {
            "type": "string"
          },
          "completeBooking": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "customerMessage": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-available-services",
          "description": "Retrieves a list of services offered by the business, optionally filtered by location.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1services/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$inputs.locationId"
            },
            {
              "name": "serviceGroupId",
              "in": "query",
              "value": "$inputs.serviceGroupId"
            },
            {
              "name": "defaultService",
              "in": "query",
              "value": "$inputs.defaultService"
            },
            {
              "name": "allLocations",
              "in": "query",
              "value": "$inputs.allLocations"
            },
            {
              "name": "scope",
              "in": "query",
              "value": "$inputs.scope"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sortOrder",
              "in": "query",
              "value": "$inputs.sortOrder"
            },
            {
              "name": "sortDescending",
              "in": "query",
              "value": "$inputs.sortDescending"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "check-availability",
          "description": "Checks available time slots for a selected service and date range, optionally for a specific resource.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1availability~1{serviceId}~1{startDate}~1{endDate}/get",
          "parameters": [
            {
              "name": "serviceId",
              "in": "path",
              "value": "$steps.get-available-services.outputs.data.id"
            },
            {
              "name": "startDate",
              "in": "path",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "path",
              "value": "$inputs.endDate"
            },
            {
              "name": "startTime",
              "in": "query",
              "value": "$inputs.startTime"
            },
            {
              "name": "endTime",
              "in": "query",
              "value": "$inputs.endTime"
            },
            {
              "name": "locationId",
              "in": "query",
              "value": "$steps.get-available-services.outputs.data.locationId"
            },
            {
              "name": "resourceId",
              "in": "query",
              "value": "$inputs.resourceId"
            },
            {
              "name": "resourceGroupId",
              "in": "query",
              "value": "$inputs.resourceGroupId"
            },
            {
              "name": "resourceIds",
              "in": "query",
              "value": "$inputs.resourceIds"
            },
            {
              "name": "roundRobin",
              "in": "query",
              "value": "$inputs.roundRobin"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "timezoneName",
              "in": "query",
              "value": "$inputs.timezoneName"
            },
            {
              "name": "tzOffset",
              "in": "query",
              "value": "$inputs.tzOffset"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "dayAvailabilityStartDate",
              "in": "query",
              "value": "$inputs.dayAvailabilityStartDate"
            },
            {
              "name": "dayAvailability",
              "in": "query",
              "value": "$inputs.dayAvailability"
            },
            {
              "name": "firstDayAvailable",
              "in": "query",
              "value": "$inputs.firstDayAvailable"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "availableTimes": "$response.body#/availableTimes",
            "locationId": "$response.body#/locationId",
            "serviceId": "$response.body#/serviceId"
          }
        },
        {
          "stepId": "create-initial-appointment",
          "description": "Creates an appointment with an 'IN' (initial) status, holding the time slot. This step requires minimal information.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments/post",
          "parameters": [
            {
              "name": "completeBooking",
              "in": "query",
              "value": "$inputs.completeBooking"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$steps.check-availability.outputs.locationId",
              "serviceId": "$steps.check-availability.outputs.serviceId",
              "resourceId": "$steps.check-availability.outputs.availableTimes[0].resourceId",
              "startDateTime": "$steps.check-availability.outputs.availableTimes[0].startDateTime",
              "endDateTime": "$steps.check-availability.outputs.availableTimes[0].endDateTime",
              "customerId": "$inputs.customerId",
              "email": "$inputs.email",
              "name": "$inputs.name",
              "phone": "$inputs.phone"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "confirmationNumber": "$response.body#/confirmationNumber",
            "customerId": "$response.body#/customerId",
            "serviceId": "$response.body#/serviceId",
            "resourceId": "$response.body#/resourceId",
            "startDateTime": "$response.body#/startDateTime",
            "endDateTime": "$response.body#/endDateTime"
          }
        },
        {
          "stepId": "book-appointment",
          "description": "Completes the booking transaction for the initial appointment, changing its status to 'BK' (booked).",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments~1{id}~1book/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-initial-appointment.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-initial-appointment.outputs.id",
              "email": "$inputs.email",
              "name": "$inputs.name",
              "phone": "$inputs.phone",
              "customerMessage": "$inputs.customerMessage",
              "notes": "$inputs.notes"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "confirmationNumber": "$response.body#/confirmationNumber"
          }
        }
      ],
      "outputs": {
        "data": "$steps.get-available-services.outputs.data",
        "availableTimes": "$steps.check-availability.outputs.availableTimes",
        "locationId": "$steps.check-availability.outputs.locationId",
        "serviceId": "$steps.create-initial-appointment.outputs.serviceId",
        "id": "$steps.book-appointment.outputs.id",
        "status": "$steps.book-appointment.outputs.status",
        "confirmationNumber": "$steps.book-appointment.outputs.confirmationNumber",
        "customerId": "$steps.create-initial-appointment.outputs.customerId",
        "resourceId": "$steps.create-initial-appointment.outputs.resourceId",
        "startDateTime": "$steps.create-initial-appointment.outputs.startDateTime",
        "endDateTime": "$steps.create-initial-appointment.outputs.endDateTime"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "book-new-appointment-one-step-with-new-customer",
      "summary": "Allows a new customer to be registered and an appointment to be booked in a single, streamlined process, suitable for quick sign-up and booking flows.",
      "description": "Allows a new customer to be registered and an appointment to be booked in a single, streamlined process, suitable for quick sign-up and booking flows.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "serviceGroupId": {
            "type": "string"
          },
          "defaultService": {
            "type": "string"
          },
          "allLocations": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string"
          },
          "sortDescending": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceGroupId": {
            "type": "string"
          },
          "resourceIds": {
            "type": "string"
          },
          "roundRobin": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "tzOffset": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "dayAvailabilityStartDate": {
            "type": "string"
          },
          "dayAvailability": {
            "type": "string"
          },
          "firstDayAvailable": {
            "type": "string"
          },
          "completeBooking": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-customer",
          "description": "Registers a new customer in the system, providing their basic contact information.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1customers/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$inputs.locationId",
              "email": "$inputs.email",
              "lastname": "$inputs.lastname",
              "firstname": "$inputs.firstname"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "email": "$response.body#/email",
            "name": "$response.body#/name"
          }
        },
        {
          "stepId": "get-available-services",
          "description": "Retrieves a list of services offered by the business.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1services/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$inputs.locationId"
            },
            {
              "name": "serviceGroupId",
              "in": "query",
              "value": "$inputs.serviceGroupId"
            },
            {
              "name": "defaultService",
              "in": "query",
              "value": "$inputs.defaultService"
            },
            {
              "name": "allLocations",
              "in": "query",
              "value": "$inputs.allLocations"
            },
            {
              "name": "scope",
              "in": "query",
              "value": "$inputs.scope"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sortOrder",
              "in": "query",
              "value": "$inputs.sortOrder"
            },
            {
              "name": "sortDescending",
              "in": "query",
              "value": "$inputs.sortDescending"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "check-availability",
          "description": "Checks available time slots for a selected service and date range.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1availability~1{serviceId}~1{startDate}~1{endDate}/get",
          "parameters": [
            {
              "name": "serviceId",
              "in": "path",
              "value": "$steps.get-available-services.outputs.data.id"
            },
            {
              "name": "startDate",
              "in": "path",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "path",
              "value": "$inputs.endDate"
            },
            {
              "name": "startTime",
              "in": "query",
              "value": "$inputs.startTime"
            },
            {
              "name": "endTime",
              "in": "query",
              "value": "$inputs.endTime"
            },
            {
              "name": "locationId",
              "in": "query",
              "value": "$steps.get-available-services.outputs.data.locationId"
            },
            {
              "name": "resourceId",
              "in": "query",
              "value": "$inputs.resourceId"
            },
            {
              "name": "resourceGroupId",
              "in": "query",
              "value": "$inputs.resourceGroupId"
            },
            {
              "name": "resourceIds",
              "in": "query",
              "value": "$inputs.resourceIds"
            },
            {
              "name": "roundRobin",
              "in": "query",
              "value": "$inputs.roundRobin"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "timezoneName",
              "in": "query",
              "value": "$inputs.timezoneName"
            },
            {
              "name": "tzOffset",
              "in": "query",
              "value": "$inputs.tzOffset"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "dayAvailabilityStartDate",
              "in": "query",
              "value": "$inputs.dayAvailabilityStartDate"
            },
            {
              "name": "dayAvailability",
              "in": "query",
              "value": "$inputs.dayAvailability"
            },
            {
              "name": "firstDayAvailable",
              "in": "query",
              "value": "$inputs.firstDayAvailable"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "availableTimes": "$response.body#/availableTimes",
            "locationId": "$response.body#/locationId",
            "serviceId": "$response.body#/serviceId"
          }
        },
        {
          "stepId": "create-and-complete-appointment",
          "description": "Creates and immediately books an appointment in one transaction using the newly created customer's details.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments/post",
          "parameters": [
            {
              "name": "completeBooking",
              "in": "query",
              "value": "$inputs.completeBooking"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$steps.check-availability.outputs.locationId",
              "serviceId": "$steps.check-availability.outputs.serviceId",
              "resourceId": "$steps.check-availability.outputs.availableTimes[0].resourceId",
              "startDateTime": "$steps.check-availability.outputs.availableTimes[0].startDateTime",
              "endDateTime": "$steps.check-availability.outputs.availableTimes[0].endDateTime",
              "customerId": "$steps.create-customer.outputs.id",
              "email": "$steps.create-customer.outputs.email",
              "name": "$steps.create-customer.outputs.name",
              "phone": "$inputs.phone"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "confirmationNumber": "$response.body#/confirmationNumber"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-and-complete-appointment.outputs.id",
        "email": "$steps.create-customer.outputs.email",
        "name": "$steps.create-customer.outputs.name",
        "data": "$steps.get-available-services.outputs.data",
        "availableTimes": "$steps.check-availability.outputs.availableTimes",
        "locationId": "$steps.check-availability.outputs.locationId",
        "serviceId": "$steps.check-availability.outputs.serviceId",
        "status": "$steps.create-and-complete-appointment.outputs.status",
        "confirmationNumber": "$steps.create-and-complete-appointment.outputs.confirmationNumber"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-existing-appointment",
      "summary": "Allows a customer to retrieve details of their existing appointments and then perform actions such as rescheduling or canceling a specific appointment.",
      "description": "Allows a customer to retrieve details of their existing appointments and then perform actions such as rescheduling or canceling a specific appointment.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "serviceAllocationId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "bookedBy": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-appointments",
          "description": "Retrieves a list of appointments for a given customer or based on other filtering criteria.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$inputs.locationId"
            },
            {
              "name": "email",
              "in": "query",
              "value": "$inputs.email"
            },
            {
              "name": "lastname",
              "in": "query",
              "value": "$inputs.lastname"
            },
            {
              "name": "phone",
              "in": "query",
              "value": "$inputs.phone"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "calendarId",
              "in": "query",
              "value": "$inputs.calendarId"
            },
            {
              "name": "resourceId",
              "in": "query",
              "value": "$inputs.resourceId"
            },
            {
              "name": "customerId",
              "in": "query",
              "value": "$inputs.customerId"
            },
            {
              "name": "serviceAllocationId",
              "in": "query",
              "value": "$inputs.serviceAllocationId"
            },
            {
              "name": "startDate",
              "in": "query",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "query",
              "value": "$inputs.endDate"
            },
            {
              "name": "status",
              "in": "query",
              "value": "$inputs.status"
            },
            {
              "name": "bookedBy",
              "in": "query",
              "value": "$inputs.bookedBy"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "get-appointment-details",
          "description": "Fetches detailed information for a specific appointment using its ID.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-appointments.outputs.data.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "serviceId": "$response.body#/serviceId",
            "resourceId": "$response.body#/resourceId",
            "startDateTime": "$response.body#/startDateTime",
            "endDateTime": "$response.body#/endDateTime",
            "status": "$response.body#/status",
            "confirmationNumber": "$response.body#/confirmationNumber"
          }
        },
        {
          "stepId": "reschedule-appointment",
          "description": "Changes the date, time, or resource for a booked appointment. It's recommended to check availability before rescheduling.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments~1{id}~1reschedule/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-appointment-details.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.get-appointment-details.outputs.id",
              "serviceId": "$inputs.serviceId",
              "resourceId": "$inputs.resourceId",
              "startDateTime": "$inputs.startDateTime",
              "endDateTime": "$inputs.endDateTime"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "startDateTime": "$response.body#/startDateTime",
            "endDateTime": "$response.body#/endDateTime"
          }
        },
        {
          "stepId": "cancel-appointment",
          "description": "Cancels a booked or reserved appointment, freeing up the time slot.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1appointments~1{id}~1cancel/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-appointment-details.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status"
          }
        }
      ],
      "outputs": {
        "data": "$steps.list-appointments.outputs.data",
        "id": "$steps.cancel-appointment.outputs.id",
        "serviceId": "$steps.get-appointment-details.outputs.serviceId",
        "resourceId": "$steps.get-appointment-details.outputs.resourceId",
        "startDateTime": "$steps.reschedule-appointment.outputs.startDateTime",
        "endDateTime": "$steps.reschedule-appointment.outputs.endDateTime",
        "status": "$steps.cancel-appointment.outputs.status",
        "confirmationNumber": "$steps.get-appointment-details.outputs.confirmationNumber"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "browse-business-offerings-and-availability",
      "summary": "Allows a potential customer to explore locations, services, and resources offered by the business, and then check their availability for booking.",
      "description": "Allows a potential customer to explore locations, services, and resources offered by the business, and then check their availability for booking.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nearestTo": {
            "type": "string"
          },
          "proximity": {
            "type": "string"
          },
          "units": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "friendlyId": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "ignorePrimary": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "serviceGroupId": {
            "type": "string"
          },
          "defaultService": {
            "type": "string"
          },
          "allLocations": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string"
          },
          "sortDescending": {
            "type": "string"
          },
          "resourceGroupId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceIds": {
            "type": "string"
          },
          "roundRobin": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "tzOffset": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "dayAvailabilityStartDate": {
            "type": "string"
          },
          "dayAvailability": {
            "type": "string"
          },
          "firstDayAvailable": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-locations",
          "description": "Retrieves a list of all business locations, which can be filtered by name or proximity.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1locations/get",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "nearestTo",
              "in": "query",
              "value": "$inputs.nearestTo"
            },
            {
              "name": "proximity",
              "in": "query",
              "value": "$inputs.proximity"
            },
            {
              "name": "units",
              "in": "query",
              "value": "$inputs.units"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "friendlyId",
              "in": "query",
              "value": "$inputs.friendlyId"
            },
            {
              "name": "regionId",
              "in": "query",
              "value": "$inputs.regionId"
            },
            {
              "name": "ignorePrimary",
              "in": "query",
              "value": "$inputs.ignorePrimary"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "get-location-details",
          "description": "Fetches detailed information for a specific business location, including its services.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1locations~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-locations.outputs.data.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "address": "$response.body#/address",
            "timezoneId": "$response.body#/timezoneId",
            "services": "$response.body#/services"
          }
        },
        {
          "stepId": "list-services-by-location",
          "description": "Lists services available at the selected location.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1services/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$steps.get-location-details.outputs.id"
            },
            {
              "name": "serviceGroupId",
              "in": "query",
              "value": "$inputs.serviceGroupId"
            },
            {
              "name": "defaultService",
              "in": "query",
              "value": "$inputs.defaultService"
            },
            {
              "name": "allLocations",
              "in": "query",
              "value": "$inputs.allLocations"
            },
            {
              "name": "scope",
              "in": "query",
              "value": "$inputs.scope"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sortOrder",
              "in": "query",
              "value": "$inputs.sortOrder"
            },
            {
              "name": "sortDescending",
              "in": "query",
              "value": "$inputs.sortDescending"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "list-resources-by-location",
          "description": "Lists resources (e.g., staff, equipment) available at the selected location.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1resources/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$steps.get-location-details.outputs.id"
            },
            {
              "name": "resourceGroupId",
              "in": "query",
              "value": "$inputs.resourceGroupId"
            },
            {
              "name": "email",
              "in": "query",
              "value": "$inputs.email"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "sortOrder",
              "in": "query",
              "value": "$inputs.sortOrder"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "check-availability-for-service-and-resource",
          "description": "Checks available time slots for a specific service and resource within a date range at the selected location.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1availability~1{serviceId}~1{startDate}~1{endDate}/get",
          "parameters": [
            {
              "name": "serviceId",
              "in": "path",
              "value": "$steps.list-services-by-location.outputs.data.id"
            },
            {
              "name": "startDate",
              "in": "path",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "path",
              "value": "$inputs.endDate"
            },
            {
              "name": "startTime",
              "in": "query",
              "value": "$inputs.startTime"
            },
            {
              "name": "endTime",
              "in": "query",
              "value": "$inputs.endTime"
            },
            {
              "name": "locationId",
              "in": "query",
              "value": "$steps.get-location-details.outputs.id"
            },
            {
              "name": "resourceId",
              "in": "query",
              "value": "$steps.list-resources-by-location.outputs.data.id"
            },
            {
              "name": "resourceGroupId",
              "in": "query",
              "value": "$inputs.resourceGroupId"
            },
            {
              "name": "resourceIds",
              "in": "query",
              "value": "$inputs.resourceIds"
            },
            {
              "name": "roundRobin",
              "in": "query",
              "value": "$inputs.roundRobin"
            },
            {
              "name": "duration",
              "in": "query",
              "value": "$inputs.duration"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "timezoneName",
              "in": "query",
              "value": "$inputs.timezoneName"
            },
            {
              "name": "tzOffset",
              "in": "query",
              "value": "$inputs.tzOffset"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "dayAvailabilityStartDate",
              "in": "query",
              "value": "$inputs.dayAvailabilityStartDate"
            },
            {
              "name": "dayAvailability",
              "in": "query",
              "value": "$inputs.dayAvailability"
            },
            {
              "name": "firstDayAvailable",
              "in": "query",
              "value": "$inputs.firstDayAvailable"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "availableTimes": "$response.body#/availableTimes"
          }
        }
      ],
      "outputs": {
        "data": "$steps.list-resources-by-location.outputs.data",
        "id": "$steps.get-location-details.outputs.id",
        "name": "$steps.get-location-details.outputs.name",
        "address": "$steps.get-location-details.outputs.address",
        "timezoneId": "$steps.get-location-details.outputs.timezoneId",
        "services": "$steps.get-location-details.outputs.services",
        "availableTimes": "$steps.check-availability-for-service-and-resource.outputs.availableTimes"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "customer-profile-management",
      "summary": "Allows an existing customer to retrieve and update their profile information, ensuring their details are current.",
      "description": "Allows an existing customer to retrieve and update their profile information, ensuring their details are current.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "customFields": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-customers",
          "description": "Searches for a customer by email or name to obtain their customer ID.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1customers/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$inputs.locationId"
            },
            {
              "name": "groupId",
              "in": "query",
              "value": "$inputs.groupId"
            },
            {
              "name": "email",
              "in": "query",
              "value": "$inputs.email"
            },
            {
              "name": "lastname",
              "in": "query",
              "value": "$inputs.lastname"
            },
            {
              "name": "firstname",
              "in": "query",
              "value": "$inputs.firstname"
            },
            {
              "name": "deleted",
              "in": "query",
              "value": "$inputs.deleted"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "data": "$response.body#/data"
          }
        },
        {
          "stepId": "get-customer-details",
          "description": "Retrieves the full profile details for a specific customer using their ID.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1customers~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-customers.outputs.data.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "email": "$response.body#/email",
            "name": "$response.body#/name",
            "firstname": "$response.body#/firstname",
            "lastname": "$response.body#/lastname",
            "address": "$response.body#/address",
            "contact": "$response.body#/contact",
            "customFields": "$response.body#/customFields"
          }
        },
        {
          "stepId": "update-customer-profile",
          "description": "Updates the customer's contact, address, or other profile information.",
          "operationPath": "openapi_source#/paths/~1consumer~1v1~1customers~1{id}/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-customer-details.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.get-customer-details.outputs.id",
              "email": "$inputs.email",
              "name": "$inputs.name",
              "lastname": "$inputs.lastname",
              "firstname": "$inputs.firstname",
              "address": "$inputs.address",
              "contact": "$inputs.contact",
              "customFields": "$inputs.customFields"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "profile_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "data": "$steps.list-customers.outputs.data",
        "id": "$steps.get-customer-details.outputs.id",
        "email": "$steps.get-customer-details.outputs.email",
        "name": "$steps.get-customer-details.outputs.name",
        "firstname": "$steps.get-customer-details.outputs.firstname",
        "lastname": "$steps.get-customer-details.outputs.lastname",
        "address": "$steps.get-customer-details.outputs.address",
        "contact": "$steps.get-customer-details.outputs.contact",
        "customFields": "$steps.get-customer-details.outputs.customFields",
        "profile_data": "$steps.update-customer-profile.outputs.profile_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}