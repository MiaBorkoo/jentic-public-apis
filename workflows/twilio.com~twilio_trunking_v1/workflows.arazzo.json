{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_trunking_v1/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "complete-sip-trunk-provisioning",
      "summary": "Provision a new SIP Trunk with essential configurations, including origination routing, IP access control, associated phone numbers, and recording settings. This workflow enables a user to set up a fully functional SIP Trunk from scratch.",
      "description": "Provision a new SIP Trunk with essential configurations, including origination routing, IP access control, associated phone numbers, and recording settings. This workflow enables a user to set up a fully functional SIP Trunk from scratch.",
      "inputs": {
        "type": "object",
        "properties": {
          "FriendlyName": {
            "type": "string"
          },
          "DomainName": {
            "type": "string"
          },
          "DisasterRecoveryUrl": {
            "type": "string"
          },
          "DisasterRecoveryMethod": {
            "type": "string"
          },
          "TransferMode": {
            "type": "string"
          },
          "Secure": {
            "type": "string"
          },
          "CnamLookupEnabled": {
            "type": "string"
          },
          "TransferCallerId": {
            "type": "string"
          },
          "TrunkSid": {
            "type": "string"
          },
          "Weight": {
            "type": "string"
          },
          "Priority": {
            "type": "string"
          },
          "Enabled": {
            "type": "string"
          },
          "SipUrl": {
            "type": "string"
          },
          "IpAccessControlListSid": {
            "type": "string"
          },
          "PhoneNumberSid": {
            "type": "string"
          },
          "Mode": {
            "type": "string"
          },
          "Trim": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-trunk",
          "description": "Create a new SIP Trunk resource.",
          "operationId": "CreateTrunk",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "DomainName": "$inputs.DomainName",
              "DisasterRecoveryUrl": "$inputs.DisasterRecoveryUrl",
              "DisasterRecoveryMethod": "$inputs.DisasterRecoveryMethod",
              "TransferMode": "$inputs.TransferMode",
              "Secure": "$inputs.Secure",
              "CnamLookupEnabled": "$inputs.CnamLookupEnabled",
              "TransferCallerId": "$inputs.TransferCallerId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid"
          }
        },
        {
          "stepId": "add-origination-url",
          "description": "Add an Origination URL to the newly created Trunk for routing outgoing calls.",
          "operationId": "CreateOriginationUrl",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.create-trunk.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.create-trunk.outputs.sid",
              "Weight": "$inputs.Weight",
              "Priority": "$inputs.Priority",
              "Enabled": "$inputs.Enabled",
              "FriendlyName": "$inputs.FriendlyName",
              "SipUrl": "$inputs.SipUrl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid"
          }
        },
        {
          "stepId": "associate-ip-access-control-list",
          "description": "Associate an existing IP Access Control List with the Trunk for authentication.",
          "operationId": "CreateIpAccessControlList",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.create-trunk.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.create-trunk.outputs.sid",
              "IpAccessControlListSid": "$inputs.IpAccessControlListSid"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid"
          }
        },
        {
          "stepId": "associate-phone-number",
          "description": "Associate an existing Twilio Phone Number with the Trunk for inbound calls.",
          "operationId": "CreatePhoneNumber",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.create-trunk.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.create-trunk.outputs.sid",
              "PhoneNumberSid": "$inputs.PhoneNumberSid"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid"
          }
        },
        {
          "stepId": "configure-recording-settings",
          "description": "Set the desired recording mode and trim settings for the Trunk.",
          "operationId": "UpdateRecording",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.create-trunk.outputs.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.create-trunk.outputs.sid",
              "Mode": "$inputs.Mode",
              "Trim": "$inputs.Trim"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "mode": "$response.body#/mode",
            "trim": "$response.body#/trim"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.associate-phone-number.outputs.sid",
        "mode": "$steps.configure-recording-settings.outputs.mode",
        "trim": "$steps.configure-recording-settings.outputs.trim"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-trunk-global-settings",
      "summary": "Retrieve the current global settings of a specific SIP Trunk and then update its properties such as friendly name, disaster recovery URL, or security settings.",
      "description": "Retrieve the current global settings of a specific SIP Trunk and then update its properties such as friendly name, disaster recovery URL, or security settings.",
      "inputs": {
        "type": "object",
        "properties": {
          "Sid": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "DomainName": {
            "type": "string"
          },
          "DisasterRecoveryUrl": {
            "type": "string"
          },
          "DisasterRecoveryMethod": {
            "type": "string"
          },
          "TransferMode": {
            "type": "string"
          },
          "Secure": {
            "type": "string"
          },
          "CnamLookupEnabled": {
            "type": "string"
          },
          "TransferCallerId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-trunk-details",
          "description": "Fetch the current details and configuration of a specific Trunk.",
          "operationId": "FetchTrunk",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "trunk": "$response.body#/trunk"
          }
        },
        {
          "stepId": "update-trunk-settings",
          "description": "Update the global settings of the Trunk, such as friendly name, disaster recovery, or security.",
          "operationId": "UpdateTrunk",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.fetch-trunk-details.outputs.trunk.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "Sid": "$steps.fetch-trunk-details.outputs.trunk.sid",
              "FriendlyName": "$inputs.FriendlyName",
              "DomainName": "$inputs.DomainName",
              "DisasterRecoveryUrl": "$inputs.DisasterRecoveryUrl",
              "DisasterRecoveryMethod": "$inputs.DisasterRecoveryMethod",
              "TransferMode": "$inputs.TransferMode",
              "Secure": "$inputs.Secure",
              "CnamLookupEnabled": "$inputs.CnamLookupEnabled",
              "TransferCallerId": "$inputs.TransferCallerId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "trunk": "$response.body#/trunk"
          }
        }
      ],
      "outputs": {
        "trunk": "$steps.update-trunk-settings.outputs.trunk"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-trunk-origination-routing",
      "summary": "List all existing Origination URLs for a SIP Trunk, and then update or delete a specific one to manage call routing preferences.",
      "description": "List all existing Origination URLs for a SIP Trunk, and then update or delete a specific one to manage call routing preferences.",
      "inputs": {
        "type": "object",
        "properties": {
          "TrunkSid": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "Weight": {
            "type": "string"
          },
          "Priority": {
            "type": "string"
          },
          "Enabled": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "SipUrl": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-origination-urls",
          "description": "Retrieve a list of all Origination URLs configured for a given Trunk.",
          "operationId": "ListOriginationUrl",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$inputs.TrunkSid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "origination_urls": "$response.body#/origination_urls"
          }
        },
        {
          "stepId": "update-origination-url",
          "description": "Update the properties (e.g., weight, priority, SIP URL) of a specific Origination URL.",
          "operationId": "UpdateOriginationUrl",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.list-origination-urls.outputs.origination_urls.trunk_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-origination-urls.outputs.origination_urls.sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.list-origination-urls.outputs.origination_urls[0].trunk_sid",
              "Sid": "$steps.list-origination-urls.outputs.origination_urls[0].sid",
              "Weight": "$inputs.Weight",
              "Priority": "$inputs.Priority",
              "Enabled": "$inputs.Enabled",
              "FriendlyName": "$inputs.FriendlyName",
              "SipUrl": "$inputs.SipUrl"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "origination_url": "$response.body#/origination_url"
          }
        },
        {
          "stepId": "delete-origination-url",
          "description": "Delete a specific Origination URL from the Trunk.",
          "operationId": "DeleteOriginationUrl",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.list-origination-urls.outputs.origination_urls.trunk_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-origination-urls.outputs.origination_urls.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "url_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "origination_urls": "$steps.list-origination-urls.outputs.origination_urls",
        "origination_url": "$steps.update-origination-url.outputs.origination_url",
        "url_data": "$steps.delete-origination-url.outputs.url_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-trunk-inbound-phone-numbers",
      "summary": "List all phone numbers currently associated with a SIP Trunk and then remove a specific phone number from it.",
      "description": "List all phone numbers currently associated with a SIP Trunk and then remove a specific phone number from it.",
      "inputs": {
        "type": "object",
        "properties": {
          "TrunkSid": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-phone-numbers",
          "description": "Retrieve a list of all phone numbers associated with a given Trunk.",
          "operationId": "ListPhoneNumber",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$inputs.TrunkSid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "phone_numbers": "$response.body#/phone_numbers"
          }
        },
        {
          "stepId": "delete-phone-number",
          "description": "Remove a specific phone number from its association with the Trunk.",
          "operationId": "DeletePhoneNumber",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.list-phone-numbers.outputs.phone_numbers.trunk_sid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$steps.list-phone-numbers.outputs.phone_numbers.sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "number_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "phone_numbers": "$steps.list-phone-numbers.outputs.phone_numbers",
        "number_data": "$steps.delete-phone-number.outputs.number_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "configure-trunk-recording-policy",
      "summary": "Fetch the current call recording settings for a specific SIP Trunk and then update them to enable or disable recording and trim options.",
      "description": "Fetch the current call recording settings for a specific SIP Trunk and then update them to enable or disable recording and trim options.",
      "inputs": {
        "type": "object",
        "properties": {
          "TrunkSid": {
            "type": "string"
          },
          "Mode": {
            "type": "string"
          },
          "Trim": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-recording-settings",
          "description": "Retrieve the current recording settings for the specified Trunk.",
          "operationId": "FetchRecording",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$inputs.TrunkSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "recording": "$response.body#/recording"
          }
        },
        {
          "stepId": "update-recording-settings",
          "description": "Update the recording mode and trim settings for the Trunk.",
          "operationId": "UpdateRecording",
          "parameters": [
            {
              "name": "TrunkSid",
              "in": "path",
              "value": "$steps.fetch-recording-settings.outputs.recording.trunk_sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TrunkSid": "$steps.fetch-recording-settings.outputs.recording.trunk_sid",
              "Mode": "$inputs.Mode",
              "Trim": "$inputs.Trim"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "recording": "$response.body#/recording"
          }
        }
      ],
      "outputs": {
        "recording": "$steps.update-recording-settings.outputs.recording"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}