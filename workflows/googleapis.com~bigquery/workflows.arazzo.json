{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/bigquery/v2/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "explore-data-structure",
      "summary": "Discovers available projects, datasets within a selected project, tables within a selected dataset, and retrieves the schema of a specific table. Useful for understanding the data landscape.",
      "description": "Discovers available projects, datasets within a selected project, tables within a selected dataset, and retrieves the schema of a specific table. Useful for understanding the data landscape.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "all": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "tableId": {
            "type": "string"
          },
          "selectedFields": {
            "type": "string"
          },
          "view": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-projects",
          "description": "List projects accessible to the user.",
          "operationId": "bigquery.projects.list",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "projects": "$response.body",
            "nextPageToken": "$response.body"
          }
        },
        {
          "stepId": "list-datasets",
          "description": "List datasets within a specific project.",
          "operationId": "bigquery.datasets.list",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.list-projects.outputs.projects.projectReference.projectId"
            },
            {
              "name": "all",
              "in": "query",
              "value": "$inputs.all"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "datasets": "$response.body",
            "nextPageToken": "$response.body"
          }
        },
        {
          "stepId": "list-tables",
          "description": "List tables within a specific dataset.",
          "operationId": "bigquery.tables.list",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.list-datasets.outputs.datasets.datasetReference.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$steps.list-datasets.outputs.datasets.datasetReference.datasetId"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tables": "$response.body",
            "nextPageToken": "$response.body"
          }
        },
        {
          "stepId": "get-table-schema",
          "description": "Get the schema definition for a specific table.",
          "operationId": "bigquery.tables.get",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.list-tables.outputs.tables.tableReference.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$steps.list-tables.outputs.tables.tableReference.datasetId"
            },
            {
              "name": "tableId",
              "in": "path",
              "value": "$steps.list-tables.outputs.tables.tableReference.tableId"
            },
            {
              "name": "selectedFields",
              "in": "query",
              "value": "$inputs.selectedFields"
            },
            {
              "name": "view",
              "in": "query",
              "value": "$inputs.view"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "schema": "$response.body",
            "tableReference": "$response.body"
          }
        }
      ],
      "outputs": {
        "projects": "$steps.list-projects.outputs.projects",
        "nextPageToken": "$steps.list-tables.outputs.nextPageToken",
        "datasets": "$steps.list-datasets.outputs.datasets",
        "tables": "$steps.list-tables.outputs.tables",
        "schema": "$steps.get-table-schema.outputs.schema",
        "tableReference": "$steps.get-table-schema.outputs.tableReference"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "run-asynchronous-query-and-fetch-results",
      "summary": "Submits a potentially long-running SQL query as an asynchronous job, monitors its status, and retrieves the results once completed.",
      "description": "Submits a potentially long-running SQL query as an asynchronous job, monitors its status, and retrieves the results once completed.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "submit-query-job_body": {
            "type": "object"
          },
          "jobId": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "formatOptions.useInt64Timestamp": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "startIndex": {
            "type": "string"
          },
          "timeoutMs": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "submit-query-job",
          "description": "Submit an asynchronous query job.",
          "operationId": "bigquery.jobs.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": "$inputs.submit-query-job_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jobReference": "$response.body",
            "status": "$response.body",
            "id": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "check-job-status",
          "description": "Check the status of the submitted job. Poll this endpoint until job status is 'DONE'.",
          "operationId": "bigquery.jobs.get",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.submit-query-job.outputs.jobReference.projectId"
            },
            {
              "name": "jobId",
              "in": "path",
              "value": "$steps.submit-query-job.outputs.jobReference.jobId"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$steps.submit-query-job.outputs.jobReference.location"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body",
            "statistics": "$response.body",
            "id": "$response.body",
            "jobReference": "$response.body"
          }
        },
        {
          "stepId": "get-query-results",
          "description": "Retrieve the results of the completed query job. Handles pagination if necessary.",
          "operationId": "bigquery.jobs.getQueryResults",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.check-job-status.outputs.jobReference.projectId"
            },
            {
              "name": "jobId",
              "in": "path",
              "value": "$steps.check-job-status.outputs.jobReference.jobId"
            },
            {
              "name": "formatOptions.useInt64Timestamp",
              "in": "query",
              "value": "$inputs.formatOptions.useInt64Timestamp"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$steps.check-job-status.outputs.jobReference.location"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "startIndex",
              "in": "query",
              "value": "$inputs.startIndex"
            },
            {
              "name": "timeoutMs",
              "in": "query",
              "value": "$inputs.timeoutMs"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "rows": "$response.body",
            "schema": "$response.body",
            "pageToken": "$response.body",
            "totalRows": "$response.body",
            "jobComplete": "$response.body"
          }
        }
      ],
      "outputs": {
        "jobReference": "$steps.check-job-status.outputs.jobReference",
        "status": "$steps.check-job-status.outputs.status",
        "id": "$steps.check-job-status.outputs.id",
        "etag": "$steps.submit-query-job.outputs.etag",
        "statistics": "$steps.check-job-status.outputs.statistics",
        "rows": "$steps.get-query-results.outputs.rows",
        "schema": "$steps.get-query-results.outputs.schema",
        "pageToken": "$steps.get-query-results.outputs.pageToken",
        "totalRows": "$steps.get-query-results.outputs.totalRows",
        "jobComplete": "$steps.get-query-results.outputs.jobComplete"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-table-and-load-data-via-batch-job",
      "summary": "Creates a new table with a defined schema and then initiates a batch load job to populate it with data from an external source (e.g., Google Cloud Storage).",
      "description": "Creates a new table with a defined schema and then initiates a batch load job to populate it with data from an external source (e.g., Google Cloud Storage).",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "create-table_body": {
            "type": "object"
          },
          "jobId": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-table",
          "description": "Create a new empty table with a specified schema.",
          "operationId": "bigquery.tables.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$inputs.datasetId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-table_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tableReference": "$response.body",
            "id": "$response.body",
            "schema": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "submit-load-job",
          "description": "Submit an asynchronous batch load job to populate the created table.",
          "operationId": "bigquery.jobs.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.create-table.outputs.tableReference.projectId"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": {
              "projectId": "$steps.create-table.outputs.tableReference.projectId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jobReference": "$response.body",
            "status": "$response.body",
            "id": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "check-job-status",
          "description": "Check the status of the submitted load job. Poll this endpoint until job status is 'DONE'.",
          "operationId": "bigquery.jobs.get",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.submit-load-job.outputs.jobReference.projectId"
            },
            {
              "name": "jobId",
              "in": "path",
              "value": "$steps.submit-load-job.outputs.jobReference.jobId"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$steps.submit-load-job.outputs.jobReference.location"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body",
            "statistics": "$response.body",
            "id": "$response.body",
            "jobReference": "$response.body"
          }
        }
      ],
      "outputs": {
        "tableReference": "$steps.create-table.outputs.tableReference",
        "id": "$steps.check-job-status.outputs.id",
        "schema": "$steps.create-table.outputs.schema",
        "etag": "$steps.submit-load-job.outputs.etag",
        "jobReference": "$steps.check-job-status.outputs.jobReference",
        "status": "$steps.check-job-status.outputs.status",
        "statistics": "$steps.check-job-status.outputs.statistics"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "export-table-data-to-cloud-storage",
      "summary": "Initiates a batch job to export data from a BigQuery table to Google Cloud Storage in a specified format.",
      "description": "Initiates a batch job to export data from a BigQuery table to Google Cloud Storage in a specified format.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "submit-extract-job_body": {
            "type": "object"
          },
          "jobId": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "submit-extract-job",
          "description": "Submit an asynchronous extract job to export table data.",
          "operationId": "bigquery.jobs.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": "$inputs.submit-extract-job_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jobReference": "$response.body",
            "status": "$response.body",
            "id": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "check-job-status",
          "description": "Check the status of the submitted extract job. Poll this endpoint until job status is 'DONE'.",
          "operationId": "bigquery.jobs.get",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.submit-extract-job.outputs.jobReference.projectId"
            },
            {
              "name": "jobId",
              "in": "path",
              "value": "$steps.submit-extract-job.outputs.jobReference.jobId"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$steps.submit-extract-job.outputs.jobReference.location"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body",
            "statistics": "$response.body",
            "id": "$response.body",
            "jobReference": "$response.body"
          }
        }
      ],
      "outputs": {
        "jobReference": "$steps.check-job-status.outputs.jobReference",
        "status": "$steps.check-job-status.outputs.status",
        "id": "$steps.check-job-status.outputs.id",
        "etag": "$steps.submit-extract-job.outputs.etag",
        "statistics": "$steps.check-job-status.outputs.statistics"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "setup-basic-data-environment",
      "summary": "Creates a new dataset within a project and then creates a new table within that dataset.",
      "description": "Creates a new dataset within a project and then creates a new table within that dataset.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "accessPolicyVersion": {
            "type": "string"
          },
          "create-dataset_body": {
            "type": "object"
          },
          "datasetId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-dataset",
          "description": "Create a new dataset in the specified project.",
          "operationId": "bigquery.datasets.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            },
            {
              "name": "accessPolicyVersion",
              "in": "query",
              "value": "$inputs.accessPolicyVersion"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "datasetReference": "$response.body",
            "id": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "create-table",
          "description": "Create a new empty table within the newly created dataset.",
          "operationId": "bigquery.tables.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.create-dataset.outputs.datasetReference.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$steps.create-dataset.outputs.datasetReference.datasetId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "projectId": "$steps.create-dataset.outputs.datasetReference.projectId",
              "datasetId": "$steps.create-dataset.outputs.datasetReference.datasetId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tableReference": "$response.body",
            "id": "$response.body",
            "schema": "$response.body",
            "etag": "$response.body"
          }
        }
      ],
      "outputs": {
        "datasetReference": "$steps.create-dataset.outputs.datasetReference",
        "id": "$steps.create-table.outputs.id",
        "etag": "$steps.create-table.outputs.etag",
        "tableReference": "$steps.create-table.outputs.tableReference",
        "schema": "$steps.create-table.outputs.schema"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-row-level-access-policy",
      "summary": "Creates, retrieves, and updates a row access policy on a table to enforce fine-grained access control.",
      "description": "Creates, retrieves, and updates a row access policy on a table to enforce fine-grained access control.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "tableId": {
            "type": "string"
          },
          "create-row-policy_body": {
            "type": "object"
          },
          "policyId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-row-policy",
          "description": "Create a new row access policy on a table.",
          "operationId": "bigquery.rowAccessPolicies.insert",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$inputs.datasetId"
            },
            {
              "name": "tableId",
              "in": "path",
              "value": "$inputs.tableId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-row-policy_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "rowAccessPolicyReference": "$response.body",
            "filterPredicate": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "get-row-policy",
          "description": "Retrieve details of a specific row access policy.",
          "operationId": "bigquery.rowAccessPolicies.get",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.create-row-policy.outputs.rowAccessPolicyReference.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$steps.create-row-policy.outputs.rowAccessPolicyReference.datasetId"
            },
            {
              "name": "tableId",
              "in": "path",
              "value": "$steps.create-row-policy.outputs.rowAccessPolicyReference.tableId"
            },
            {
              "name": "policyId",
              "in": "path",
              "value": "$steps.create-row-policy.outputs.rowAccessPolicyReference.policyId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "rowAccessPolicyReference": "$response.body",
            "filterPredicate": "$response.body",
            "creationTime": "$response.body",
            "lastModifiedTime": "$response.body",
            "etag": "$response.body"
          }
        },
        {
          "stepId": "update-row-policy",
          "description": "Update an existing row access policy.",
          "operationId": "bigquery.rowAccessPolicies.update",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$steps.get-row-policy.outputs.rowAccessPolicyReference.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$steps.get-row-policy.outputs.rowAccessPolicyReference.datasetId"
            },
            {
              "name": "tableId",
              "in": "path",
              "value": "$steps.get-row-policy.outputs.rowAccessPolicyReference.tableId"
            },
            {
              "name": "policyId",
              "in": "path",
              "value": "$steps.get-row-policy.outputs.rowAccessPolicyReference.policyId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "projectId": "$steps.get-row-policy.outputs.rowAccessPolicyReference.projectId",
              "datasetId": "$steps.get-row-policy.outputs.rowAccessPolicyReference.datasetId",
              "tableId": "$steps.get-row-policy.outputs.rowAccessPolicyReference.tableId",
              "policyId": "$steps.get-row-policy.outputs.rowAccessPolicyReference.policyId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "rowAccessPolicyReference": "$response.body",
            "filterPredicate": "$response.body",
            "etag": "$response.body"
          }
        }
      ],
      "outputs": {
        "rowAccessPolicyReference": "$steps.update-row-policy.outputs.rowAccessPolicyReference",
        "filterPredicate": "$steps.update-row-policy.outputs.filterPredicate",
        "etag": "$steps.update-row-policy.outputs.etag",
        "creationTime": "$steps.get-row-policy.outputs.creationTime",
        "lastModifiedTime": "$steps.get-row-policy.outputs.lastModifiedTime"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-table-iam-policy",
      "summary": "Retrieves the current IAM policy for a table and then updates it to set new access controls.",
      "description": "Retrieves the current IAM policy for a table and then updates it to set new access controls.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "get-table-iam-policy_body": {
            "type": "object"
          },
          "set-table-iam-policy_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-table-iam-policy",
          "description": "Get the IAM policy for a specific table.",
          "operationId": "bigquery.tables.getIamPolicy",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "resource",
              "in": "path",
              "value": "$inputs.resource"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.get-table-iam-policy_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "policy": "$response.body"
          }
        },
        {
          "stepId": "set-table-iam-policy",
          "description": "Set a new IAM policy for the table, replacing the existing one.",
          "operationId": "bigquery.tables.setIamPolicy",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "resource",
              "in": "path",
              "value": "$inputs.resource"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.set-table-iam-policy_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "policy": "$response.body"
          }
        }
      ],
      "outputs": {
        "policy": "$steps.set-table-iam-policy.outputs.policy"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "recover-deleted-dataset",
      "summary": "Undeletes a recently deleted dataset, restoring it and its contents within the time travel window.",
      "description": "Undeletes a recently deleted dataset, restoring it and its contents within the time travel window.",
      "inputs": {
        "type": "object",
        "properties": {
          "$.xgafv": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "deleteContents": {
            "type": "string"
          },
          "undelete-dataset_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "delete-dataset-for-recovery",
          "description": "Delete a dataset (Prerequisite for demonstrating undelete).",
          "operationId": "bigquery.datasets.delete",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$inputs.datasetId"
            },
            {
              "name": "deleteContents",
              "in": "query",
              "value": "$inputs.deleteContents"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body"
          }
        },
        {
          "stepId": "undelete-dataset",
          "description": "Undelete the previously deleted dataset.",
          "operationId": "bigquery.datasets.undelete",
          "parameters": [
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "projectId",
              "in": "path",
              "value": "$inputs.projectId"
            },
            {
              "name": "datasetId",
              "in": "path",
              "value": "$inputs.datasetId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.undelete-dataset_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Dataset": "$response.body"
          }
        }
      ],
      "outputs": {
        "status": "$steps.delete-dataset-for-recovery.outputs.status",
        "Dataset": "$steps.undelete-dataset.outputs.Dataset"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}