{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_intelligence_v2/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "configure-twilio-intelligence-service-with-operators",
      "summary": "This workflow allows a user to set up a new Twilio Intelligence Service, discover available AI operators (both pre-built and custom), and attach them to the service. This enables the service to automatically apply these operators to incoming media for transcription and analysis.",
      "description": "This workflow allows a user to set up a new Twilio Intelligence Service, discover available AI operators (both pre-built and custom), and attach them to the service. This enables the service to automatically apply these operators to incoming media for transcription and analysis.",
      "inputs": {
        "type": "object",
        "properties": {
          "UniqueName": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Availability": {
            "type": "string"
          },
          "LanguageCode": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "OperatorType": {
            "type": "string"
          },
          "Config": {
            "type": "string"
          },
          "ServiceSid": {
            "type": "string"
          },
          "OperatorSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-intelligence-service",
          "description": "Creates a new Twilio Intelligence Service, which acts as a container for configurations and attached operators for processing media.",
          "operationId": "CreateService",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "UniqueName": "$inputs.UniqueName"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "service": "$response.body#/service"
          }
        },
        {
          "stepId": "list-all-operator-types",
          "description": "Retrieves a list of all available operator types, which define the categories and capabilities of intelligence operations (e.g., summarization, sentiment analysis). This helps in understanding what kind of custom operators can be created.",
          "operationId": "ListOperatorType",
          "parameters": [
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operator_types": "$response.body#/operator_types",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "list-prebuilt-operators",
          "description": "Retrieves a list of pre-built operators provided by Twilio, which can be directly attached to a service without custom configuration.",
          "operationId": "ListPrebuiltOperator",
          "parameters": [
            {
              "name": "Availability",
              "in": "query",
              "value": "$inputs.Availability"
            },
            {
              "name": "LanguageCode",
              "in": "query",
              "value": "$inputs.LanguageCode"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operators": "$response.body#/operators",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "create-custom-operator",
          "description": "Creates a new custom operator based on a specific operator type and a custom configuration. This allows users to tailor intelligence models to their specific needs.",
          "operationId": "CreateCustomOperator",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "OperatorType": "$inputs.OperatorType",
              "Config": "$inputs.Config"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "custom_operator": "$response.body#/custom_operator"
          }
        },
        {
          "stepId": "attach-operator-to-service",
          "description": "Attaches a chosen operator (either pre-built or the newly created custom operator) to the intelligence service, enabling it to process media using this operator.",
          "operationId": "CreateOperatorAttachment",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            },
            {
              "name": "OperatorSid",
              "in": "path",
              "value": "$inputs.OperatorSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operator_attachment": "$response.body#/operator_attachment"
          }
        }
      ],
      "outputs": {
        "service": "$steps.create-intelligence-service.outputs.service",
        "operator_types": "$steps.list-all-operator-types.outputs.operator_types",
        "meta": "$steps.list-prebuilt-operators.outputs.meta",
        "operators": "$steps.list-prebuilt-operators.outputs.operators",
        "custom_operator": "$steps.create-custom-operator.outputs.custom_operator",
        "operator_attachment": "$steps.attach-operator-to-service.outputs.operator_attachment"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "process-media-and-retrieve-intelligence-results",
      "summary": "This workflow demonstrates how to submit a media file for transcription and intelligence processing, then retrieve the raw transcript, the media download URL, and the detailed results generated by the attached operators.",
      "description": "This workflow demonstrates how to submit a media file for transcription and intelligence processing, then retrieve the raw transcript, the media download URL, and the detailed results generated by the attached operators.",
      "inputs": {
        "type": "object",
        "properties": {
          "ServiceSid": {
            "type": "string"
          },
          "Channel": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "TranscriptSid": {
            "type": "string"
          },
          "Redacted": {
            "type": "string"
          },
          "WordTimestamps": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-transcript",
          "description": "Submits a media file (e.g., a call recording) to a specified intelligence service for transcription and analysis. This initiates the intelligence processing.",
          "operationId": "CreateTranscript",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "ServiceSid": "$inputs.ServiceSid",
              "Channel": "$inputs.Channel"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "transcript": "$response.body#/transcript"
          }
        },
        {
          "stepId": "fetch-transcript-details",
          "description": "Fetches the current status and details of the transcript processing. This step is typically polled until the transcript status indicates 'completed'.",
          "operationId": "FetchTranscript",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "transcript": "$response.body#/transcript"
          }
        },
        {
          "stepId": "list-transcript-sentences",
          "description": "Retrieves the segmented and transcribed text (sentences) of the processed media, optionally with redaction and word-level timestamps.",
          "operationId": "ListSentence",
          "parameters": [
            {
              "name": "TranscriptSid",
              "in": "path",
              "value": "$inputs.TranscriptSid"
            },
            {
              "name": "Redacted",
              "in": "query",
              "value": "$inputs.Redacted"
            },
            {
              "name": "WordTimestamps",
              "in": "query",
              "value": "$inputs.WordTimestamps"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sentences": "$response.body#/sentences",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "list-transcript-operator-results",
          "description": "Retrieves the detailed results generated by the intelligence operators (e.g., sentiment scores, extracted entities, summaries) applied to the transcript.",
          "operationId": "ListOperatorResult",
          "parameters": [
            {
              "name": "TranscriptSid",
              "in": "path",
              "value": "$inputs.TranscriptSid"
            },
            {
              "name": "Redacted",
              "in": "query",
              "value": "$inputs.Redacted"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operator_results": "$response.body#/operator_results",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "fetch-transcript-media-url",
          "description": "Obtains a downloadable URL for the original or redacted media file associated with the transcript.",
          "operationId": "FetchMedia",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            },
            {
              "name": "Redacted",
              "in": "query",
              "value": "$inputs.Redacted"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "media": "$response.body#/media"
          }
        }
      ],
      "outputs": {
        "transcript": "$steps.fetch-transcript-details.outputs.transcript",
        "sentences": "$steps.list-transcript-sentences.outputs.sentences",
        "meta": "$steps.list-transcript-operator-results.outputs.meta",
        "operator_results": "$steps.list-transcript-operator-results.outputs.operator_results",
        "media": "$steps.fetch-transcript-media-url.outputs.media"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-existing-intelligence-services",
      "summary": "This workflow provides a comprehensive way to list, fetch details, update configurations, and manage operator attachments for existing Twilio Intelligence Services.",
      "description": "This workflow provides a comprehensive way to list, fetch details, update configurations, and manage operator attachments for existing Twilio Intelligence Services.",
      "inputs": {
        "type": "object",
        "properties": {
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          },
          "AutoTranscribe": {
            "type": "string"
          },
          "DataLogging": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "UniqueName": {
            "type": "string"
          },
          "AutoRedaction": {
            "type": "string"
          },
          "MediaRedaction": {
            "type": "string"
          },
          "WebhookUrl": {
            "type": "string"
          },
          "WebhookHttpMethod": {
            "type": "string"
          },
          "ServiceSid": {
            "type": "string"
          },
          "OperatorSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-all-services",
          "description": "Retrieves a list of all Twilio Intelligence Services configured under the account, allowing users to see their existing setups.",
          "operationId": "ListService",
          "parameters": [
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "services": "$response.body#/services",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "fetch-service-details",
          "description": "Fetches detailed information about a specific intelligence service, including its current settings and attached operators.",
          "operationId": "FetchService",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "service": "$response.body#/service"
          }
        },
        {
          "stepId": "update-service-settings",
          "description": "Updates the configuration settings of an existing service, such as its friendly name, unique name, or transcription/redaction preferences.",
          "operationId": "UpdateService",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "AutoTranscribe": "$inputs.AutoTranscribe",
              "DataLogging": "$inputs.DataLogging",
              "FriendlyName": "$inputs.FriendlyName",
              "UniqueName": "$inputs.UniqueName",
              "AutoRedaction": "$inputs.AutoRedaction",
              "MediaRedaction": "$inputs.MediaRedaction",
              "WebhookUrl": "$inputs.WebhookUrl",
              "WebhookHttpMethod": "$inputs.WebhookHttpMethod"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "service": "$response.body#/service"
          }
        },
        {
          "stepId": "fetch-attached-operators",
          "description": "Retrieves a list of all operators (both custom and pre-built) that are currently attached to a specific service.",
          "operationId": "FetchOperatorAttachments",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operator_attachments": "$response.body#/operator_attachments"
          }
        },
        {
          "stepId": "detach-operator-from-service",
          "description": "Detaches a specific operator from a service, preventing it from being applied to new transcripts processed by that service.",
          "operationId": "DeleteOperatorAttachment",
          "parameters": [
            {
              "name": "ServiceSid",
              "in": "path",
              "value": "$inputs.ServiceSid"
            },
            {
              "name": "OperatorSid",
              "in": "path",
              "value": "$inputs.OperatorSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "service_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "services": "$steps.list-all-services.outputs.services",
        "meta": "$steps.list-all-services.outputs.meta",
        "service": "$steps.update-service-settings.outputs.service",
        "operator_attachments": "$steps.fetch-attached-operators.outputs.operator_attachments",
        "service_data": "$steps.detach-operator-from-service.outputs.service_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "custom-operator-lifecycle-management",
      "summary": "This workflow enables users to manage their custom intelligence operators, including listing existing ones, creating new ones, fetching their details, updating their configurations, and eventually deleting them when no longer needed. This supports the full lifecycle of custom AI models.",
      "description": "This workflow enables users to manage their custom intelligence operators, including listing existing ones, creating new ones, fetching their details, updating their configurations, and eventually deleting them when no longer needed. This supports the full lifecycle of custom AI models.",
      "inputs": {
        "type": "object",
        "properties": {
          "Availability": {
            "type": "string"
          },
          "LanguageCode": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "OperatorType": {
            "type": "string"
          },
          "Config": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-custom-operators",
          "description": "Retrieves a list of all custom operators created by the account, allowing for an overview of available custom intelligence models.",
          "operationId": "ListCustomOperator",
          "parameters": [
            {
              "name": "Availability",
              "in": "query",
              "value": "$inputs.Availability"
            },
            {
              "name": "LanguageCode",
              "in": "query",
              "value": "$inputs.LanguageCode"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operators": "$response.body#/operators",
            "meta": "$response.body#/meta"
          }
        },
        {
          "stepId": "create-new-custom-operator",
          "description": "Creates a new custom operator, defining its friendly name, the type of operation it performs, and its specific configuration.",
          "operationId": "CreateCustomOperator",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "OperatorType": "$inputs.OperatorType",
              "Config": "$inputs.Config"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "custom_operator": "$response.body#/custom_operator"
          }
        },
        {
          "stepId": "fetch-custom-operator-details",
          "description": "Fetches detailed information about a specific custom operator, including its configuration and current status.",
          "operationId": "FetchCustomOperator",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "custom_operator": "$response.body#/custom_operator"
          }
        },
        {
          "stepId": "update-custom-operator",
          "description": "Updates the friendly name or configuration of an existing custom operator, allowing for adjustments to its behavior or description.",
          "operationId": "UpdateCustomOperator",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "Config": "$inputs.Config"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "custom_operator": "$response.body#/custom_operator"
          }
        },
        {
          "stepId": "delete-custom-operator",
          "description": "Deletes a specific custom operator, removing it from the account and preventing its further use in services.",
          "operationId": "DeleteCustomOperator",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "operator_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "operators": "$steps.list-custom-operators.outputs.operators",
        "meta": "$steps.list-custom-operators.outputs.meta",
        "custom_operator": "$steps.update-custom-operator.outputs.custom_operator",
        "operator_data": "$steps.delete-custom-operator.outputs.operator_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}