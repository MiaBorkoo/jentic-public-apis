{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/lufthansa.com/partner/1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "find-cheapest-flight-flexible-dates-and-get-booking-link",
      "summary": "Searches for the best fares over a period for a given route and duration, then generates a deep link to the Lufthansa flight selection page for the user to continue booking.",
      "description": "Searches for the best fares over a period for a given route and duration, then generates a deep link to the Lufthansa flight selection page for the user to continue booking.",
      "inputs": {
        "type": "object",
        "properties": {
          "catalogues": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "travel-date": {
            "type": "string"
          },
          "trip-duration": {
            "type": "string"
          },
          "range": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "cabin-class": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "trackingid": {
            "type": "string"
          },
          "fare-family": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "return-date": {
            "type": "string"
          },
          "travelers": {
            "type": "string"
          },
          "partnerid": {
            "type": "string"
          },
          "encryption-key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-best-fares",
          "description": "Retrieve the best fares for a route across multiple days or months.",
          "operationId": "Best Fares",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$inputs.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$inputs.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$inputs.travel-date"
            },
            {
              "name": "trip-duration",
              "in": "query",
              "value": "$inputs.trip-duration"
            },
            {
              "name": "range",
              "in": "query",
              "value": "$inputs.range"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$inputs.cabin-class"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "trackingid",
              "in": "query",
              "value": "$inputs.trackingid"
            },
            {
              "name": "fare-family",
              "in": "query",
              "value": "$inputs.fare-family"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "best_fare_options": "$response.body"
          }
        },
        {
          "stepId": "generate-ffp-deeplink",
          "description": "Generate a deep link to the Lufthansa flight selection page (FFP).",
          "operationId": "LH Deep Links - FFP",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.selected_travel_date"
            },
            {
              "name": "trackingid",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.trackingid"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.country"
            },
            {
              "name": "lang",
              "in": "query",
              "value": "$inputs.lang"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "return-date",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.selected_return_date"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$steps.find-best-fares.outputs.best_fare_options.cabin_class"
            },
            {
              "name": "travelers",
              "in": "query",
              "value": "$inputs.travelers"
            },
            {
              "name": "partnerid",
              "in": "query",
              "value": "$inputs.partnerid"
            },
            {
              "name": "encryption-key",
              "in": "query",
              "value": "$inputs.encryption-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ffp_deeplink": "$response.body"
          }
        }
      ],
      "outputs": {
        "best_fare_options": "$steps.find-best-fares.outputs.best_fare_options",
        "ffp_deeplink": "$steps.generate-ffp-deeplink.outputs.ffp_deeplink"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-specific-flight-fares-fixed-dates-and-get-booking-link",
      "summary": "Retrieves all available fares for a specific route and fixed dates, then generates a deep link to the Lufthansa flight selection page.",
      "description": "Retrieves all available fares for a specific route and fixed dates, then generates a deep link to the Lufthansa flight selection page.",
      "inputs": {
        "type": "object",
        "properties": {
          "catalogues": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "travel-date": {
            "type": "string"
          },
          "return-date": {
            "type": "string"
          },
          "cabin-class": {
            "type": "string"
          },
          "travelers": {
            "type": "string"
          },
          "fare-family": {
            "type": "string"
          },
          "trackingid": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "partnerid": {
            "type": "string"
          },
          "encryption-key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-all-fares",
          "description": "Retrieves all available fares for a specific Origin & Destination pair on given dates.",
          "operationId": "All Fares",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$inputs.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$inputs.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$inputs.travel-date"
            },
            {
              "name": "return-date",
              "in": "query",
              "value": "$inputs.return-date"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$inputs.cabin-class"
            },
            {
              "name": "travelers",
              "in": "query",
              "value": "$inputs.travelers"
            },
            {
              "name": "fare-family",
              "in": "query",
              "value": "$inputs.fare-family"
            },
            {
              "name": "trackingid",
              "in": "query",
              "value": "$inputs.trackingid"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_fares_details": "$response.body"
          }
        },
        {
          "stepId": "generate-ffp-deeplink-from-all-fares",
          "description": "Generate a deep link to the Lufthansa flight selection page (FFP) based on the specific dates searched.",
          "operationId": "LH Deep Links - FFP",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.travel_date"
            },
            {
              "name": "trackingid",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.trackingid"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "lang",
              "in": "query",
              "value": "$inputs.lang"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "return-date",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.return_date"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.cabin_class"
            },
            {
              "name": "travelers",
              "in": "query",
              "value": "$steps.find-all-fares.outputs.available_fares_details.travelers"
            },
            {
              "name": "partnerid",
              "in": "query",
              "value": "$inputs.partnerid"
            },
            {
              "name": "encryption-key",
              "in": "query",
              "value": "$inputs.encryption-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ffp_deeplink": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_fares_details": "$steps.find-all-fares.outputs.available_fares_details",
        "ffp_deeplink": "$steps.generate-ffp-deeplink-from-all-fares.outputs.ffp_deeplink"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-order-and-baggage-details-privileged-partner",
      "summary": "For privileged partners: Retrieves specific order details using the order ID and passenger name, then fetches associated baggage, trip, and contact information.",
      "description": "For privileged partners: Retrieves specific order details using the order ID and passenger name, then fetches associated baggage, trip, and contact information.",
      "inputs": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "searchID": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "retrieve-order-details",
          "description": "Retrieve order by ID and optionally name.",
          "operationId": "Orders",
          "parameters": [
            {
              "name": "orderID",
              "in": "path",
              "value": "$inputs.orderID"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$inputs.name"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "order_details": "$response.body",
            "passenger_identifier": "$response.body"
          }
        },
        {
          "stepId": "retrieve-baggage-trip-contact",
          "description": "Retrieve passenger trip, contact and baggage details using an identifier from the order.",
          "operationId": "Baggage Trip and Contact",
          "parameters": [
            {
              "name": "searchID",
              "in": "path",
              "value": "$steps.retrieve-order-details.outputs.passenger_identifier"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "baggage_trip_contact_info": "$response.body"
          }
        }
      ],
      "outputs": {
        "order_details": "$steps.retrieve-order-details.outputs.order_details",
        "passenger_identifier": "$steps.retrieve-order-details.outputs.passenger_identifier",
        "baggage_trip_contact_info": "$steps.retrieve-baggage-trip-contact.outputs.baggage_trip_contact_info"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-order-and-trigger-auto-check-in-privileged-partner",
      "summary": "For privileged partners: Retrieves order details and then triggers the automatic check-in process for the associated ticket number, sending confirmation to a specified email.",
      "description": "For privileged partners: Retrieves order details and then triggers the automatic check-in process for the associated ticket number, sending confirmation to a specified email.",
      "inputs": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ticketnumber": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "retrieve-order-for-checkin",
          "description": "Retrieve order by ID and name to get ticket details.",
          "operationId": "Orders",
          "parameters": [
            {
              "name": "orderID",
              "in": "path",
              "value": "$inputs.orderID"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "name",
              "in": "path",
              "value": "$inputs.name"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "order_details": "$response.body",
            "ticket_number": "$response.body"
          }
        },
        {
          "stepId": "trigger-auto-checkin",
          "description": "Trigger automatic check-in using the ticket number from the order.",
          "operationId": "Auto Check-In",
          "parameters": [
            {
              "name": "ticketnumber",
              "in": "path",
              "value": "$steps.retrieve-order-for-checkin.outputs.ticket_number"
            },
            {
              "name": "emailAddress",
              "in": "query",
              "value": "$inputs.emailAddress"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "checkin_status": "$response.body"
          }
        }
      ],
      "outputs": {
        "order_details": "$steps.retrieve-order-for-checkin.outputs.order_details",
        "ticket_number": "$steps.retrieve-order-for-checkin.outputs.ticket_number",
        "checkin_status": "$steps.trigger-auto-checkin.outputs.checkin_status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "check-route-existence-and-find-lowest-fare",
      "summary": "Verifies if a specific route is operated by Lufthansa (or specified carrier) and then retrieves the lowest available fare for specific dates if the route exists.",
      "description": "Verifies if a specific route is operated by Lufthansa (or specified carrier) and then retrieves the lowest available fare for specific dates if the route exists.",
      "inputs": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "catalogues": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "travel-date": {
            "type": "string"
          },
          "return-date": {
            "type": "string"
          },
          "cabin-class": {
            "type": "string"
          },
          "travelers": {
            "type": "string"
          },
          "fare-family": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "check-route-existence",
          "description": "Check if a route exists between the specified origin and destination.",
          "operationId": "OND Route",
          "parameters": [
            {
              "name": "origin",
              "in": "path",
              "value": "$inputs.origin"
            },
            {
              "name": "destination",
              "in": "path",
              "value": "$inputs.destination"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "catalogues",
              "in": "query",
              "value": "$inputs.catalogues"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "route_information": "$response.body",
            "route_exists_status": "$response.body"
          }
        },
        {
          "stepId": "find-lowest-fare",
          "description": "Retrieve the lowest fare for the route on specific dates (conditional on route existence).",
          "operationId": "Lowest Fares",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$steps.check-route-existence.outputs.route_information.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$steps.check-route-existence.outputs.route_information.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$steps.check-route-existence.outputs.route_information.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$inputs.travel-date"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "return-date",
              "in": "query",
              "value": "$inputs.return-date"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$inputs.cabin-class"
            },
            {
              "name": "travelers",
              "in": "query",
              "value": "$inputs.travelers"
            },
            {
              "name": "fare-family",
              "in": "query",
              "value": "$inputs.fare-family"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lowest_fare_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "route_information": "$steps.check-route-existence.outputs.route_information",
        "route_exists_status": "$steps.check-route-existence.outputs.route_exists_status",
        "lowest_fare_details": "$steps.find-lowest-fare.outputs.lowest_fare_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-lowest-fare-and-check-seat-details",
      "summary": "Finds the lowest fare for a specific flight search and then retrieves details about the seats available on the aircraft type used for that flight.",
      "description": "Finds the lowest fare for a specific flight search and then retrieves details about the seats available on the aircraft type used for that flight.",
      "inputs": {
        "type": "object",
        "properties": {
          "catalogues": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "travel-date": {
            "type": "string"
          },
          "Accept": {
            "type": "string"
          },
          "return-date": {
            "type": "string"
          },
          "cabin-class": {
            "type": "string"
          },
          "travelers": {
            "type": "string"
          },
          "fare-family": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "aircraftCode": {
            "type": "string"
          },
          "cabinCode": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-lowest-fare-for-seat-check",
          "description": "Retrieve the lowest fare for a route on specific dates.",
          "operationId": "Lowest Fares",
          "parameters": [
            {
              "name": "catalogues",
              "in": "query",
              "value": "$inputs.catalogues"
            },
            {
              "name": "origin",
              "in": "query",
              "value": "$inputs.origin"
            },
            {
              "name": "destination",
              "in": "query",
              "value": "$inputs.destination"
            },
            {
              "name": "travel-date",
              "in": "query",
              "value": "$inputs.travel-date"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "return-date",
              "in": "query",
              "value": "$inputs.return-date"
            },
            {
              "name": "cabin-class",
              "in": "query",
              "value": "$inputs.cabin-class"
            },
            {
              "name": "travelers",
              "in": "query",
              "value": "$inputs.travelers"
            },
            {
              "name": "fare-family",
              "in": "query",
              "value": "$inputs.fare-family"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lowest_fare_details": "$response.body",
            "aircraft_code": "$response.body",
            "cabin_code": "$response.body"
          }
        },
        {
          "stepId": "get-seat-details",
          "description": "Retrieve details for seats based on aircraft and cabin class from the fare search.",
          "operationId": "Seat Details",
          "parameters": [
            {
              "name": "aircraftCode",
              "in": "path",
              "value": "$steps.find-lowest-fare-for-seat-check.outputs.aircraft_code"
            },
            {
              "name": "Accept",
              "in": "header",
              "value": "$inputs.Accept"
            },
            {
              "name": "cabinCode",
              "in": "path",
              "value": "$steps.find-lowest-fare-for-seat-check.outputs.cabin_code"
            },
            {
              "name": "lang",
              "in": "query",
              "value": "$inputs.lang"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "seat_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "lowest_fare_details": "$steps.find-lowest-fare-for-seat-check.outputs.lowest_fare_details",
        "aircraft_code": "$steps.find-lowest-fare-for-seat-check.outputs.aircraft_code",
        "cabin_code": "$steps.find-lowest-fare-for-seat-check.outputs.cabin_code",
        "seat_details": "$steps.get-seat-details.outputs.seat_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}