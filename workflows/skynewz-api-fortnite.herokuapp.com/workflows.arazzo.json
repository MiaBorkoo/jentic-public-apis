{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/skynewz-api-fortnite.herokuapp.com/main/3.1.5/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "lookup-player-account-id-and-get-battle-royale-stats",
      "summary": "A two-step process to first resolve a player's unique account ID from their username and platform, and then use that ID to retrieve their detailed Battle Royale statistics. This is useful for systems that prefer to work with account IDs.",
      "description": "A two-step process to first resolve a player's unique account ID from their username and platform, and then use that ID to retrieve their detailed Battle Royale statistics. This is useful for systems that prefer to work with account IDs.",
      "inputs": {
        "type": "object",
        "properties": {
          "plateform": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-player-id",
          "description": "Retrieves the unique account ID and display name for a Fortnite player based on their username and specified gaming platform.",
          "operationPath": "openapi_source#/paths/~1user~1{plateform}~1{username}/get",
          "parameters": [
            {
              "name": "plateform",
              "in": "path",
              "value": "$inputs.plateform"
            },
            {
              "name": "username",
              "in": "path",
              "value": "$inputs.username"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "displayName": "$response.body#/displayName",
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "get-player-br-stats-by-id",
          "description": "Retrieves comprehensive Battle Royale statistics for a player using their unique account ID and platform, obtained from the previous step.",
          "operationPath": "openapi_source#/paths/~1stats~1id~1{plateform}~1{id}/get",
          "parameters": [
            {
              "name": "plateform",
              "in": "path",
              "value": "$inputs.plateform"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-player-id.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "info": "$response.body#/info",
            "group": "$response.body#/group",
            "lifetimeStats": "$response.body#/lifetimeStats"
          }
        }
      ],
      "outputs": {
        "displayName": "$steps.get-player-id.outputs.displayName",
        "id": "$steps.get-player-id.outputs.id",
        "info": "$steps.get-player-br-stats-by-id.outputs.info",
        "group": "$steps.get-player-br-stats-by-id.outputs.group",
        "lifetimeStats": "$steps.get-player-br-stats-by-id.outputs.lifetimeStats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}