{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/docs/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "create-and-populate-new-document",
      "summary": "Creates a new Google Doc with a specified title and then populates it with initial text content using a batch update.",
      "description": "Creates a new Google Doc with a specified title and then populates it with initial text content using a batch update.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          },
          "requests": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-document",
          "description": "Creates a blank document with a given title.",
          "operationId": "docs.documents.create",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documentId": "$response.body",
            "title": "$response.body",
            "revisionId": "$response.body"
          }
        },
        {
          "stepId": "insert-initial-text",
          "description": "Inserts text content into the newly created document.",
          "operationId": "docs.documents.batchUpdate",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "documentId",
              "in": "path",
              "value": "$steps.create-document.outputs.documentId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "documentId": "$steps.create-document.outputs.documentId",
              "requests": "$inputs.requests"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documentId": "$response.body",
            "replies": "$response.body",
            "writeControl": "$response.body"
          }
        }
      ],
      "outputs": {
        "documentId": "$steps.insert-initial-text.outputs.documentId",
        "title": "$steps.create-document.outputs.title",
        "revisionId": "$steps.create-document.outputs.revisionId",
        "replies": "$steps.insert-initial-text.outputs.replies",
        "writeControl": "$steps.insert-initial-text.outputs.writeControl"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-document-from-template",
      "summary": "Creates a new document and then uses batch updates to insert template text and replace placeholder values.",
      "description": "Creates a new document and then uses batch updates to insert template text and replace placeholder values.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          },
          "requests": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-doc-from-template",
          "description": "Creates a blank document intended as a template instance.",
          "operationId": "docs.documents.create",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "title": "$inputs.title"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documentId": "$response.body",
            "title": "$response.body",
            "revisionId": "$response.body"
          }
        },
        {
          "stepId": "populate-and-replace",
          "description": "Inserts template structure and replaces placeholders using batch requests (e.g., InsertTextRequest, ReplaceAllTextRequest).",
          "operationId": "docs.documents.batchUpdate",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "documentId",
              "in": "path",
              "value": "$steps.create-doc-from-template.outputs.documentId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "documentId": "$steps.create-doc-from-template.outputs.documentId",
              "requests": "$inputs.requests"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documentId": "$response.body",
            "replies": "$response.body",
            "writeControl": "$response.body"
          }
        }
      ],
      "outputs": {
        "documentId": "$steps.populate-and-replace.outputs.documentId",
        "title": "$steps.create-doc-from-template.outputs.title",
        "revisionId": "$steps.create-doc-from-template.outputs.revisionId",
        "replies": "$steps.populate-and-replace.outputs.replies",
        "writeControl": "$steps.populate-and-replace.outputs.writeControl"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}