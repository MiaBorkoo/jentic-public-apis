{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/waterlinked.com/main/0.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "device-initial-connection--information-retrieval",
      "summary": "Establishes initial connection to the Underwater GPS device and retrieves essential system information, including API version, general device details, and current operational status. This is crucial for client compatibility and basic health checks.",
      "description": "Establishes initial connection to the Underwater GPS device and retrieves essential system information, including API version, general device details, and current operational status. This is crucial for client compatibility and basic health checks.",
      "steps": [
        {
          "stepId": "get-api-version",
          "description": "Checks the supported API versions of the device to ensure client compatibility.",
          "operationId": "about#ApiVersion",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "versions": "$response.body#/versions"
          }
        },
        {
          "stepId": "get-device-about-info",
          "description": "Retrieves detailed information about the Underwater GPS device, such as product name, hardware revision, and firmware version.",
          "operationId": "about#Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "version": "$response.body#/version",
            "version_short": "$response.body#/version_short",
            "chipid": "$response.body#/chipid",
            "product_name": "$response.body#/product_name",
            "hardware_revision": "$response.body#/hardware_revision",
            "product_id": "$response.body#/product_id",
            "variant": "$response.body#/variant"
          }
        },
        {
          "stepId": "get-device-status",
          "description": "Fetches the current status of the IMU, GPS, and battery level of the locator, providing a quick health overview.",
          "operationId": "about#Status",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "imu": "$response.body#/imu",
            "gps": "$response.body#/gps",
            "battery": "$response.body#/battery"
          }
        },
        {
          "stepId": "get-device-temperature",
          "description": "Retrieves the internal board temperature and the water temperature around the device, useful for monitoring environmental conditions.",
          "operationId": "about#Temperature",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "board": "$response.body#/board",
            "water": "$response.body#/water"
          }
        }
      ],
      "outputs": {
        "versions": "$steps.get-api-version.outputs.versions",
        "version": "$steps.get-device-about-info.outputs.version",
        "version_short": "$steps.get-device-about-info.outputs.version_short",
        "chipid": "$steps.get-device-about-info.outputs.chipid",
        "product_name": "$steps.get-device-about-info.outputs.product_name",
        "hardware_revision": "$steps.get-device-about-info.outputs.hardware_revision",
        "product_id": "$steps.get-device-about-info.outputs.product_id",
        "variant": "$steps.get-device-about-info.outputs.variant",
        "imu": "$steps.get-device-status.outputs.imu",
        "gps": "$steps.get-device-status.outputs.gps",
        "battery": "$steps.get-device-status.outputs.battery",
        "board": "$steps.get-device-temperature.outputs.board",
        "water": "$steps.get-device-temperature.outputs.water"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "configure-acoustic-system-parameters",
      "summary": "Manages the core acoustic configuration of the Underwater GPS, including antenna and receiver positions, and general operational settings like channel and speed of sound. This is vital for accurate underwater positioning.",
      "description": "Manages the core acoustic configuration of the Underwater GPS, including antenna and receiver positions, and general operational settings like channel and speed of sound. This is vital for accurate underwater positioning.",
      "inputs": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "x": {
            "type": "string"
          },
          "y": {
            "type": "string"
          },
          "z": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "locator_type": {
            "type": "string"
          },
          "gps": {
            "type": "string"
          },
          "compass": {
            "type": "string"
          },
          "static_lat": {
            "type": "string"
          },
          "static_lon": {
            "type": "string"
          },
          "static_orientation": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-generic-config",
          "description": "Retrieves the general operational configuration of the Underwater GPS system.",
          "operationId": "config#Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "channel": "$response.body#/channel",
            "locator_type": "$response.body#/locator_type",
            "gps": "$response.body#/gps",
            "compass": "$response.body#/compass",
            "static_lat": "$response.body#/static_lat",
            "static_lon": "$response.body#/static_lon",
            "static_orientation": "$response.body#/static_orientation",
            "speed_of_sound": "$response.body#/speed_of_sound",
            "antenna_enabled": "$response.body#/antenna_enabled",
            "external_pps_enabled": "$response.body#/external_pps_enabled"
          }
        },
        {
          "stepId": "list-receivers",
          "description": "Lists all configured acoustic receivers and their positions, allowing selection for modification.",
          "operationId": "config#ListReceiver",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "receivers": "$response.body#/0/receivers"
          }
        },
        {
          "stepId": "modify-receiver-position",
          "description": "Modifies the X, Y, Z position of a specific acoustic receiver. Note: Changes are not applied until 'modify-generic-config' is called.",
          "operationId": "config#ModifyReceiver",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "value": "$inputs.ID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "x": "$inputs.x",
              "y": "$inputs.y",
              "z": "$inputs.z"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "position_data": "$response.body"
          }
        },
        {
          "stepId": "modify-generic-config",
          "description": "Applies changes to the general configuration, including any pending receiver modifications. This step is crucial to persist receiver changes.",
          "operationId": "config#Modify",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "channel": "$inputs.channel",
              "locator_type": "$inputs.locator_type",
              "gps": "$inputs.gps",
              "compass": "$inputs.compass",
              "static_lat": "$inputs.static_lat",
              "static_lon": "$inputs.static_lon",
              "static_orientation": "$inputs.static_orientation"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        }
      ],
      "outputs": {
        "channel": "$steps.get-generic-config.outputs.channel",
        "locator_type": "$steps.get-generic-config.outputs.locator_type",
        "gps": "$steps.get-generic-config.outputs.gps",
        "compass": "$steps.get-generic-config.outputs.compass",
        "static_lat": "$steps.get-generic-config.outputs.static_lat",
        "static_lon": "$steps.get-generic-config.outputs.static_lon",
        "static_orientation": "$steps.get-generic-config.outputs.static_orientation",
        "speed_of_sound": "$steps.get-generic-config.outputs.speed_of_sound",
        "antenna_enabled": "$steps.get-generic-config.outputs.antenna_enabled",
        "external_pps_enabled": "$steps.get-generic-config.outputs.external_pps_enabled",
        "receivers": "$steps.list-receivers.outputs.receivers",
        "position_data": "$steps.modify-receiver-position.outputs.position_data",
        "success": "$steps.modify-generic-config.outputs.success",
        "error": "$steps.modify-generic-config.outputs.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "real-time-locator-position-tracking",
      "summary": "Provides a continuous stream of the underwater locator's position, both relative to the master electronics and in global coordinates, along with the master's own global position. This is the primary function for tracking underwater assets.",
      "description": "Provides a continuous stream of the underwater locator's position, both relative to the master electronics and in global coordinates, along with the master's own global position. This is the primary function for tracking underwater assets.",
      "steps": [
        {
          "stepId": "get-global-locator-position",
          "description": "Retrieves the current global latitude, longitude, and orientation of the underwater locator.",
          "operationId": "position#Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lat": "$response.body#/lat",
            "lon": "$response.body#/lon",
            "orientation": "$response.body#/orientation",
            "cog": "$response.body#/cog",
            "sog": "$response.body#/sog",
            "hdop": "$response.body#/hdop",
            "numsats": "$response.body#/numsats",
            "fix_quality": "$response.body#/fix_quality"
          }
        },
        {
          "stepId": "get-filtered-acoustic-position",
          "description": "Gets the Kalman filtered acoustic position of the locator relative to the master electronics, including accuracy and receiver data.",
          "operationId": "position#AcousticFiltered",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "x": "$response.body#/x",
            "y": "$response.body#/y",
            "z": "$response.body#/z",
            "std": "$response.body#/std",
            "position_valid": "$response.body#/position_valid",
            "receiver_distance": "$response.body#/receiver_distance",
            "receiver_rssi": "$response.body#/receiver_rssi",
            "receiver_nsd": "$response.body#/receiver_nsd",
            "receiver_valid": "$response.body#/receiver_valid"
          }
        },
        {
          "stepId": "get-master-global-position",
          "description": "Retrieves the current global latitude, longitude, and orientation of the master electronics.",
          "operationId": "position#GetMaster",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lat": "$response.body#/lat",
            "lon": "$response.body#/lon",
            "orientation": "$response.body#/orientation",
            "cog": "$response.body#/cog",
            "sog": "$response.body#/sog",
            "hdop": "$response.body#/hdop",
            "numsats": "$response.body#/numsats",
            "fix_quality": "$response.body#/fix_quality"
          }
        }
      ],
      "outputs": {
        "lat": "$steps.get-master-global-position.outputs.lat",
        "lon": "$steps.get-master-global-position.outputs.lon",
        "orientation": "$steps.get-master-global-position.outputs.orientation",
        "cog": "$steps.get-master-global-position.outputs.cog",
        "sog": "$steps.get-master-global-position.outputs.sog",
        "hdop": "$steps.get-master-global-position.outputs.hdop",
        "numsats": "$steps.get-master-global-position.outputs.numsats",
        "fix_quality": "$steps.get-master-global-position.outputs.fix_quality",
        "x": "$steps.get-filtered-acoustic-position.outputs.x",
        "y": "$steps.get-filtered-acoustic-position.outputs.y",
        "z": "$steps.get-filtered-acoustic-position.outputs.z",
        "std": "$steps.get-filtered-acoustic-position.outputs.std",
        "position_valid": "$steps.get-filtered-acoustic-position.outputs.position_valid",
        "receiver_distance": "$steps.get-filtered-acoustic-position.outputs.receiver_distance",
        "receiver_rssi": "$steps.get-filtered-acoustic-position.outputs.receiver_rssi",
        "receiver_nsd": "$steps.get-filtered-acoustic-position.outputs.receiver_nsd",
        "receiver_valid": "$steps.get-filtered-acoustic-position.outputs.receiver_valid"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "configure-network-settings",
      "summary": "Allows an administrator to view and modify the IP and Wi-Fi network configurations of the Underwater GPS device. This is critical for integrating the device into an existing network infrastructure.",
      "description": "Allows an administrator to view and modify the IP and Wi-Fi network configurations of the Underwater GPS device. This is critical for integrating the device into an existing network infrastructure.",
      "inputs": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "dns": {
            "type": "string"
          },
          "dhcp": {
            "type": "string"
          },
          "ssid": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-ip-config",
          "description": "Retrieves the current IP address, gateway, prefix, DNS, and DHCP settings.",
          "operationId": "config#GetIP",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "address": "$response.body#/address",
            "gateway": "$response.body#/gateway",
            "prefix": "$response.body#/prefix",
            "dns": "$response.body#/dns",
            "dhcp": "$response.body#/dhcp"
          }
        },
        {
          "stepId": "modify-ip-config",
          "description": "Updates the IP network configuration of the device. Can use values retrieved from 'get-ip-config' or new values.",
          "operationId": "config#ModifyIP",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "address": "$inputs.address",
              "gateway": "$inputs.gateway",
              "prefix": "$inputs.prefix",
              "dns": "$inputs.dns",
              "dhcp": "$inputs.dhcp"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        },
        {
          "stepId": "get-wifi-config",
          "description": "Retrieves the current Wi-Fi SSID, password, and mode (AP or Client).",
          "operationId": "config#GetWIFI",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ssid": "$response.body#/ssid",
            "password": "$response.body#/password",
            "mode": "$response.body#/mode"
          }
        },
        {
          "stepId": "modify-wifi-config",
          "description": "Updates the Wi-Fi configuration of the device. Can use values retrieved from 'get-wifi-config' or new values.",
          "operationId": "config#ModifyWIFI",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "ssid": "$inputs.ssid",
              "password": "$inputs.password",
              "mode": "$inputs.mode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        }
      ],
      "outputs": {
        "address": "$steps.get-ip-config.outputs.address",
        "gateway": "$steps.get-ip-config.outputs.gateway",
        "prefix": "$steps.get-ip-config.outputs.prefix",
        "dns": "$steps.get-ip-config.outputs.dns",
        "dhcp": "$steps.get-ip-config.outputs.dhcp",
        "success": "$steps.modify-wifi-config.outputs.success",
        "error": "$steps.modify-wifi-config.outputs.error",
        "ssid": "$steps.get-wifi-config.outputs.ssid",
        "password": "$steps.get-wifi-config.outputs.password",
        "mode": "$steps.get-wifi-config.outputs.mode"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "integrate-external-positioning-data",
      "summary": "Allows external systems (e.g., ROV navigation systems, surface GPS) to provide critical data like depth, master global position, and vehicle orientation to the Underwater GPS for improved accuracy and visualization.",
      "description": "Allows external systems (e.g., ROV navigation systems, surface GPS) to provide critical data like depth, master global position, and vehicle orientation to the Underwater GPS for improved accuracy and visualization.",
      "inputs": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "string"
          },
          "temp": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lon": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "set-external-depth",
          "description": "Sends current depth and water temperature from an external source to the Underwater GPS. This is essential for Locator A1 to get a position.",
          "operationId": "external#SetDepth",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "depth": "$inputs.depth",
              "temp": "$inputs.temp"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        },
        {
          "stepId": "set-external-master-position",
          "description": "Provides the global position of the master electronics from an external GPS source. This is used if the GPS mode is set to external.",
          "operationId": "external#SetMaster",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "lat": "$inputs.lat",
              "lon": "$inputs.lon",
              "orientation": "$inputs.orientation"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        },
        {
          "stepId": "set-external-orientation",
          "description": "Sets the orientation/compass heading of the vehicle/ROV/Locator from an external source, primarily for GUI visualization.",
          "operationId": "external#SetOrientation",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "orientation": "$inputs.orientation"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "success": "$response.body#/success",
            "error": "$response.body#/error"
          }
        }
      ],
      "outputs": {
        "success": "$steps.set-external-orientation.outputs.success",
        "error": "$steps.set-external-orientation.outputs.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-points-of-interest-poi",
      "summary": "Enables users to create, view, and update specific underwater locations as points of interest, facilitating navigation and data logging.",
      "description": "Enables users to create, view, and update specific underwater locations as points of interest, facilitating navigation and data logging.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          },
          "depth": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "visible": {
            "type": "string"
          },
          "ID": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-poi",
          "description": "Creates a new point of interest with specified coordinates, depth, and other details.",
          "operationId": "poi#Create",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name",
              "lat": "$inputs.lat",
              "lng": "$inputs.lng",
              "depth": "$inputs.depth",
              "icon": "$inputs.icon",
              "visible": "$inputs.visible"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Location": "$response.headers.Location"
          }
        },
        {
          "stepId": "get-poi-details",
          "description": "Retrieves the full details of a specific point of interest using its ID, often to verify creation or get current state.",
          "operationId": "poi#Show",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "value": "$steps.create-poi.outputs.Location"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "lat": "$response.body#/lat",
            "lng": "$response.body#/lng",
            "depth": "$response.body#/depth",
            "icon": "$response.body#/icon",
            "visible": "$response.body#/visible"
          }
        },
        {
          "stepId": "update-poi-details",
          "description": "Updates specific attributes of an existing point of interest, such as its name, coordinates, or visibility.",
          "operationId": "poi#Update",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "value": "$inputs.ID"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name",
              "lat": "$inputs.lat",
              "lng": "$inputs.lng",
              "depth": "$inputs.depth",
              "icon": "$inputs.icon",
              "visible": "$inputs.visible"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "details_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "Location": "$steps.create-poi.outputs.Location",
        "id": "$steps.get-poi-details.outputs.id",
        "name": "$steps.get-poi-details.outputs.name",
        "lat": "$steps.get-poi-details.outputs.lat",
        "lng": "$steps.get-poi-details.outputs.lng",
        "depth": "$steps.get-poi-details.outputs.depth",
        "icon": "$steps.get-poi-details.outputs.icon",
        "visible": "$steps.get-poi-details.outputs.visible",
        "details_data": "$steps.update-poi-details.outputs.details_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "imu-health-check-and-calibration",
      "summary": "Allows users to check the status of the Inertial Measurement Unit (IMU) and perform calibration actions like resetting gyros or setting the north reference for accurate orientation readings.",
      "description": "Allows users to check the status of the Inertial Measurement Unit (IMU) and perform calibration actions like resetting gyros or setting the north reference for accurate orientation readings.",
      "inputs": {
        "type": "object",
        "properties": {
          "heading": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-imu-status",
          "description": "Retrieves the current status, orientation (roll, pitch, yaw), and calibration progress of the IMU.",
          "operationId": "imu#Get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "roll": "$response.body#/roll",
            "pitch": "$response.body#/pitch",
            "yaw": "$response.body#/yaw",
            "state": "$response.body#/state",
            "progress": "$response.body#/progress"
          }
        },
        {
          "stepId": "reset-imu-gyros",
          "description": "Resets the IMU's gyroscopes, which can be useful for recalibration or troubleshooting.",
          "operationId": "imu#ResetGyro",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "gyros_data": "$response.body"
          }
        },
        {
          "stepId": "set-imu-north",
          "description": "Sets the IMU's north reference based on a provided heading, crucial for correct orientation data.",
          "operationId": "imu#SetNorth",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "heading": "$inputs.heading"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "north_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "roll": "$steps.get-imu-status.outputs.roll",
        "pitch": "$steps.get-imu-status.outputs.pitch",
        "yaw": "$steps.get-imu-status.outputs.yaw",
        "state": "$steps.get-imu-status.outputs.state",
        "progress": "$steps.get-imu-status.outputs.progress",
        "gyros_data": "$steps.reset-imu-gyros.outputs.gyros_data",
        "north_data": "$steps.set-imu-north.outputs.north_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}