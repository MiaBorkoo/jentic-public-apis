{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/nba.com/main/version/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "detailed-game-analysis",
      "summary": "Retrieves the scoreboard for a specific date to find a game, then fetches various detailed box score statistics and play-by-play data for that game.",
      "description": "Retrieves the scoreboard for a specific date to find a game, then fetches various detailed box score statistics and play-by-play data for that game.",
      "inputs": {
        "type": "object",
        "properties": {
          "GameDate": {
            "type": "string"
          },
          "LeagueID": {
            "type": "string"
          },
          "DayOffset": {
            "type": "string"
          },
          "GameID": {
            "type": "string"
          },
          "StartPeriod": {
            "type": "string"
          },
          "EndPeriod": {
            "type": "string"
          },
          "StartRange": {
            "type": "string"
          },
          "EndRange": {
            "type": "string"
          },
          "RangeType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-scoreboard",
          "description": "Get the list of games (including GameIDs) for a specific date.",
          "operationPath": "openapi_source#/paths/~1scoreboardV2/get",
          "parameters": [
            {
              "name": "GameDate",
              "in": "query",
              "value": "$inputs.GameDate"
            },
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "DayOffset",
              "in": "query",
              "value": "$inputs.DayOffset"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "game_list": "$response.body",
            "GameIDs": "$response.body"
          }
        },
        {
          "stepId": "get-game-summary",
          "description": "Get the summary information for a specific game.",
          "operationPath": "openapi_source#/paths/~1boxscoresummaryv2/get",
          "parameters": [
            {
              "name": "GameID",
              "in": "query",
              "value": "$steps.get-scoreboard.outputs.game_list"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "game_summary": "$response.body"
          }
        },
        {
          "stepId": "get-traditional-boxscore",
          "description": "Get the traditional box score stats for a specific game.",
          "operationPath": "openapi_source#/paths/~1boxscoretraditionalv2/get",
          "parameters": [
            {
              "name": "GameID",
              "in": "query",
              "value": "$steps.get-scoreboard.outputs.game_list"
            },
            {
              "name": "StartPeriod",
              "in": "query",
              "value": "$inputs.StartPeriod"
            },
            {
              "name": "EndPeriod",
              "in": "query",
              "value": "$inputs.EndPeriod"
            },
            {
              "name": "StartRange",
              "in": "query",
              "value": "$inputs.StartRange"
            },
            {
              "name": "EndRange",
              "in": "query",
              "value": "$inputs.EndRange"
            },
            {
              "name": "RangeType",
              "in": "query",
              "value": "$inputs.RangeType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "traditional_boxscore": "$response.body"
          }
        },
        {
          "stepId": "get-advanced-boxscore",
          "description": "Get advanced box score stats (like PIE, ratings) for a specific game.",
          "operationPath": "openapi_source#/paths/~1boxscoreadvancedv2/get",
          "parameters": [
            {
              "name": "GameID",
              "in": "query",
              "value": "$steps.get-scoreboard.outputs.game_list"
            },
            {
              "name": "StartPeriod",
              "in": "query",
              "value": "$inputs.StartPeriod"
            },
            {
              "name": "EndPeriod",
              "in": "query",
              "value": "$inputs.EndPeriod"
            },
            {
              "name": "StartRange",
              "in": "query",
              "value": "$inputs.StartRange"
            },
            {
              "name": "EndRange",
              "in": "query",
              "value": "$inputs.EndRange"
            },
            {
              "name": "RangeType",
              "in": "query",
              "value": "$inputs.RangeType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "advanced_boxscore": "$response.body"
          }
        },
        {
          "stepId": "get-play-by-play",
          "description": "Get the detailed play-by-play log for a specific game.",
          "operationPath": "openapi_source#/paths/~1playbyplayv2/get",
          "parameters": [
            {
              "name": "GameID",
              "in": "query",
              "value": "$steps.get-scoreboard.outputs.game_list"
            },
            {
              "name": "StartPeriod",
              "in": "query",
              "value": "$inputs.StartPeriod"
            },
            {
              "name": "EndPeriod",
              "in": "query",
              "value": "$inputs.EndPeriod"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "play_by_play_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "game_list": "$steps.get-scoreboard.outputs.game_list",
        "GameIDs": "$steps.get-scoreboard.outputs.GameIDs",
        "game_summary": "$steps.get-game-summary.outputs.game_summary",
        "traditional_boxscore": "$steps.get-traditional-boxscore.outputs.traditional_boxscore",
        "advanced_boxscore": "$steps.get-advanced-boxscore.outputs.advanced_boxscore",
        "play_by_play_data": "$steps.get-play-by-play.outputs.play_by_play_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "player-season-performance-deep-dive",
      "summary": "Finds a player for a specific season, retrieves their basic information, game logs, and detailed performance splits like shooting and clutch stats.",
      "description": "Finds a player for a specific season, retrieves their basic information, game logs, and detailed performance splits like shooting and clutch stats.",
      "inputs": {
        "type": "object",
        "properties": {
          "LeagueID": {
            "type": "string"
          },
          "Season": {
            "type": "string"
          },
          "IsOnlyCurrentSeason": {
            "type": "string"
          },
          "PlayerID": {
            "type": "string"
          },
          "SeasonType": {
            "type": "string"
          },
          "MeasureType": {
            "type": "string"
          },
          "PerMode": {
            "type": "string"
          },
          "PlusMinus": {
            "type": "string"
          },
          "PaceAdjust": {
            "type": "string"
          },
          "Rank": {
            "type": "string"
          },
          "Outcome": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "Month": {
            "type": "string"
          },
          "SeasonSegment": {
            "type": "string"
          },
          "DateFrom": {
            "type": "string"
          },
          "DateTo": {
            "type": "string"
          },
          "OpponentTeamID": {
            "type": "string"
          },
          "VsConference": {
            "type": "string"
          },
          "VsDivision": {
            "type": "string"
          },
          "GameSegment": {
            "type": "string"
          },
          "Period": {
            "type": "string"
          },
          "LastNGames": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-players",
          "description": "Retrieve a list of all players for a given league and season.",
          "operationPath": "openapi_source#/paths/~1commonallplayers/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "IsOnlyCurrentSeason",
              "in": "query",
              "value": "$inputs.IsOnlyCurrentSeason"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_list": "$response.body",
            "PlayerIDs": "$response.body"
          }
        },
        {
          "stepId": "get-player-info",
          "description": "Get common biographical and statistical information for a specific player.",
          "operationPath": "openapi_source#/paths/~1commonplayerinfo/get",
          "parameters": [
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-players.outputs.player_list"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_info": "$response.body"
          }
        },
        {
          "stepId": "get-player-gamelog",
          "description": "Get the game-by-game statistics for a player during a specific season.",
          "operationPath": "openapi_source#/paths/~1playergamelog/get",
          "parameters": [
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-players.outputs.player_list"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_game_log": "$response.body"
          }
        },
        {
          "stepId": "get-player-shooting-splits",
          "description": "Get detailed shooting statistics splits for a player based on various criteria.",
          "operationPath": "openapi_source#/paths/~1playerdashboardbyshootingsplits/get",
          "parameters": [
            {
              "name": "MeasureType",
              "in": "query",
              "value": "$inputs.MeasureType"
            },
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlusMinus",
              "in": "query",
              "value": "$inputs.PlusMinus"
            },
            {
              "name": "PaceAdjust",
              "in": "query",
              "value": "$inputs.PaceAdjust"
            },
            {
              "name": "Rank",
              "in": "query",
              "value": "$inputs.Rank"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            },
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-players.outputs.player_list"
            },
            {
              "name": "Outcome",
              "in": "query",
              "value": "$inputs.Outcome"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "Month",
              "in": "query",
              "value": "$inputs.Month"
            },
            {
              "name": "SeasonSegment",
              "in": "query",
              "value": "$inputs.SeasonSegment"
            },
            {
              "name": "DateFrom",
              "in": "query",
              "value": "$inputs.DateFrom"
            },
            {
              "name": "DateTo",
              "in": "query",
              "value": "$inputs.DateTo"
            },
            {
              "name": "OpponentTeamID",
              "in": "query",
              "value": "$inputs.OpponentTeamID"
            },
            {
              "name": "VsConference",
              "in": "query",
              "value": "$inputs.VsConference"
            },
            {
              "name": "VsDivision",
              "in": "query",
              "value": "$inputs.VsDivision"
            },
            {
              "name": "GameSegment",
              "in": "query",
              "value": "$inputs.GameSegment"
            },
            {
              "name": "Period",
              "in": "query",
              "value": "$inputs.Period"
            },
            {
              "name": "LastNGames",
              "in": "query",
              "value": "$inputs.LastNGames"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_shooting_stats": "$response.body"
          }
        },
        {
          "stepId": "get-player-clutch-stats",
          "description": "Get player statistics specifically for clutch situations.",
          "operationPath": "openapi_source#/paths/~1playerdashboardbyclutch/get",
          "parameters": [
            {
              "name": "MeasureType",
              "in": "query",
              "value": "$inputs.MeasureType"
            },
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlusMinus",
              "in": "query",
              "value": "$inputs.PlusMinus"
            },
            {
              "name": "PaceAdjust",
              "in": "query",
              "value": "$inputs.PaceAdjust"
            },
            {
              "name": "Rank",
              "in": "query",
              "value": "$inputs.Rank"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            },
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-players.outputs.player_list"
            },
            {
              "name": "Outcome",
              "in": "query",
              "value": "$inputs.Outcome"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "Month",
              "in": "query",
              "value": "$inputs.Month"
            },
            {
              "name": "SeasonSegment",
              "in": "query",
              "value": "$inputs.SeasonSegment"
            },
            {
              "name": "DateFrom",
              "in": "query",
              "value": "$inputs.DateFrom"
            },
            {
              "name": "DateTo",
              "in": "query",
              "value": "$inputs.DateTo"
            },
            {
              "name": "OpponentTeamID",
              "in": "query",
              "value": "$inputs.OpponentTeamID"
            },
            {
              "name": "VsConference",
              "in": "query",
              "value": "$inputs.VsConference"
            },
            {
              "name": "VsDivision",
              "in": "query",
              "value": "$inputs.VsDivision"
            },
            {
              "name": "GameSegment",
              "in": "query",
              "value": "$inputs.GameSegment"
            },
            {
              "name": "Period",
              "in": "query",
              "value": "$inputs.Period"
            },
            {
              "name": "LastNGames",
              "in": "query",
              "value": "$inputs.LastNGames"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_clutch_stats": "$response.body"
          }
        }
      ],
      "outputs": {
        "player_list": "$steps.find-players.outputs.player_list",
        "PlayerIDs": "$steps.find-players.outputs.PlayerIDs",
        "player_info": "$steps.get-player-info.outputs.player_info",
        "player_game_log": "$steps.get-player-gamelog.outputs.player_game_log",
        "player_shooting_stats": "$steps.get-player-shooting-splits.outputs.player_shooting_stats",
        "player_clutch_stats": "$steps.get-player-clutch-stats.outputs.player_clutch_stats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "team-season-analysis",
      "summary": "Retrieves basic information, roster, game logs, and general performance statistics for a specific team during a season.",
      "description": "Retrieves basic information, roster, game logs, and general performance statistics for a specific team during a season.",
      "inputs": {
        "type": "object",
        "properties": {
          "Season": {
            "type": "string"
          },
          "TeamID": {
            "type": "string"
          },
          "LeagueID": {
            "type": "string"
          },
          "SeasonType": {
            "type": "string"
          },
          "MeasureType": {
            "type": "string"
          },
          "PerMode": {
            "type": "string"
          },
          "PlusMinus": {
            "type": "string"
          },
          "PaceAdjust": {
            "type": "string"
          },
          "Rank": {
            "type": "string"
          },
          "Outcome": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "Month": {
            "type": "string"
          },
          "SeasonSegment": {
            "type": "string"
          },
          "DateFrom": {
            "type": "string"
          },
          "DateTo": {
            "type": "string"
          },
          "OpponentTeamID": {
            "type": "string"
          },
          "VsConference": {
            "type": "string"
          },
          "VsDivision": {
            "type": "string"
          },
          "GameSegment": {
            "type": "string"
          },
          "Period": {
            "type": "string"
          },
          "LastNGames": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-team-info",
          "description": "Get common information for a specific team in a given season.",
          "operationPath": "openapi_source#/paths/~1teaminfocommon/get",
          "parameters": [
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "TeamID",
              "in": "query",
              "value": "$inputs.TeamID"
            },
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_info": "$response.body",
            "TeamID_out": "$response.body"
          }
        },
        {
          "stepId": "get-team-roster",
          "description": "Get the player roster for a specific team and season.",
          "operationPath": "openapi_source#/paths/~1commonteamroster/get",
          "parameters": [
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "TeamID",
              "in": "query",
              "value": "$steps.get-team-info.outputs.TeamID_out"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_roster": "$response.body",
            "PlayerIDs": "$response.body"
          }
        },
        {
          "stepId": "get-team-gamelog",
          "description": "Get the game-by-game log for a specific team during a season.",
          "operationPath": "openapi_source#/paths/~1teamgamelog/get",
          "parameters": [
            {
              "name": "TeamID",
              "in": "query",
              "value": "$steps.get-team-info.outputs.TeamID_out"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_game_log": "$response.body"
          }
        },
        {
          "stepId": "get-team-general-stats",
          "description": "Get general team statistics splits based on various criteria.",
          "operationPath": "openapi_source#/paths/~1teamdashboardbygeneralsplits/get",
          "parameters": [
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            },
            {
              "name": "TeamID",
              "in": "query",
              "value": "$steps.get-team-info.outputs.TeamID_out"
            },
            {
              "name": "MeasureType",
              "in": "query",
              "value": "$inputs.MeasureType"
            },
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlusMinus",
              "in": "query",
              "value": "$inputs.PlusMinus"
            },
            {
              "name": "PaceAdjust",
              "in": "query",
              "value": "$inputs.PaceAdjust"
            },
            {
              "name": "Rank",
              "in": "query",
              "value": "$inputs.Rank"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "Outcome",
              "in": "query",
              "value": "$inputs.Outcome"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "Month",
              "in": "query",
              "value": "$inputs.Month"
            },
            {
              "name": "SeasonSegment",
              "in": "query",
              "value": "$inputs.SeasonSegment"
            },
            {
              "name": "DateFrom",
              "in": "query",
              "value": "$inputs.DateFrom"
            },
            {
              "name": "DateTo",
              "in": "query",
              "value": "$inputs.DateTo"
            },
            {
              "name": "OpponentTeamID",
              "in": "query",
              "value": "$inputs.OpponentTeamID"
            },
            {
              "name": "VsConference",
              "in": "query",
              "value": "$inputs.VsConference"
            },
            {
              "name": "VsDivision",
              "in": "query",
              "value": "$inputs.VsDivision"
            },
            {
              "name": "GameSegment",
              "in": "query",
              "value": "$inputs.GameSegment"
            },
            {
              "name": "Period",
              "in": "query",
              "value": "$inputs.Period"
            },
            {
              "name": "LastNGames",
              "in": "query",
              "value": "$inputs.LastNGames"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_general_stats": "$response.body"
          }
        }
      ],
      "outputs": {
        "team_info": "$steps.get-team-info.outputs.team_info",
        "TeamID_out": "$steps.get-team-info.outputs.TeamID_out",
        "team_roster": "$steps.get-team-roster.outputs.team_roster",
        "PlayerIDs": "$steps.get-team-roster.outputs.PlayerIDs",
        "team_game_log": "$steps.get-team-gamelog.outputs.team_game_log",
        "team_general_stats": "$steps.get-team-general-stats.outputs.team_general_stats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-player-career-overview",
      "summary": "Finds a player and retrieves their basic info and career statistics.",
      "description": "Finds a player and retrieves their basic info and career statistics.",
      "inputs": {
        "type": "object",
        "properties": {
          "LeagueID": {
            "type": "string"
          },
          "Season": {
            "type": "string"
          },
          "IsOnlyCurrentSeason": {
            "type": "string"
          },
          "PlayerID": {
            "type": "string"
          },
          "PerMode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-target-player",
          "description": "Retrieve a list of all players for a given league and season to find the target player.",
          "operationPath": "openapi_source#/paths/~1commonallplayers/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "IsOnlyCurrentSeason",
              "in": "query",
              "value": "$inputs.IsOnlyCurrentSeason"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_list": "$response.body",
            "PlayerIDs": "$response.body"
          }
        },
        {
          "stepId": "get-target-player-info",
          "description": "Get common biographical information for the selected player.",
          "operationPath": "openapi_source#/paths/~1commonplayerinfo/get",
          "parameters": [
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-target-player.outputs.player_list"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_info": "$response.body"
          }
        },
        {
          "stepId": "get-player-career-stats",
          "description": "Get the career statistics totals and per-season breakdown for the selected player.",
          "operationPath": "openapi_source#/paths/~1playercareerstats/get",
          "parameters": [
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-target-player.outputs.player_list"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_career_stats": "$response.body"
          }
        }
      ],
      "outputs": {
        "player_list": "$steps.find-target-player.outputs.player_list",
        "PlayerIDs": "$steps.find-target-player.outputs.PlayerIDs",
        "player_info": "$steps.get-target-player-info.outputs.player_info",
        "player_career_stats": "$steps.get-player-career-stats.outputs.player_career_stats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "player-head-to-head-comparison",
      "summary": "Finds two players and retrieves statistics comparing their performance, both overall and specifically when playing against each other.",
      "description": "Finds two players and retrieves statistics comparing their performance, both overall and specifically when playing against each other.",
      "inputs": {
        "type": "object",
        "properties": {
          "LeagueID": {
            "type": "string"
          },
          "Season": {
            "type": "string"
          },
          "IsOnlyCurrentSeason": {
            "type": "string"
          },
          "PlayerIDList": {
            "type": "string"
          },
          "VsPlayerIDList": {
            "type": "string"
          },
          "SeasonType": {
            "type": "string"
          },
          "MeasureType": {
            "type": "string"
          },
          "PerMode": {
            "type": "string"
          },
          "PlusMinus": {
            "type": "string"
          },
          "PaceAdjust": {
            "type": "string"
          },
          "Rank": {
            "type": "string"
          },
          "Outcome": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "Month": {
            "type": "string"
          },
          "SeasonSegment": {
            "type": "string"
          },
          "DateFrom": {
            "type": "string"
          },
          "DateTo": {
            "type": "string"
          },
          "OpponentTeamID": {
            "type": "string"
          },
          "VsConference": {
            "type": "string"
          },
          "VsDivision": {
            "type": "string"
          },
          "GameSegment": {
            "type": "string"
          },
          "Period": {
            "type": "string"
          },
          "LastNGames": {
            "type": "string"
          },
          "PlayerID": {
            "type": "string"
          },
          "VsPlayerID": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-players-for-comparison",
          "description": "Retrieve a list of all players to select two for comparison.",
          "operationPath": "openapi_source#/paths/~1commonallplayers/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "IsOnlyCurrentSeason",
              "in": "query",
              "value": "$inputs.IsOnlyCurrentSeason"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_list": "$response.body",
            "PlayerIDs": "$response.body"
          }
        },
        {
          "stepId": "compare-players-overall",
          "description": "Compare overall statistics between a list of players (in this case, two selected players).",
          "operationPath": "openapi_source#/paths/~1playercompare/get",
          "parameters": [
            {
              "name": "PlayerIDList",
              "in": "query",
              "value": "$steps.find-players-for-comparison.outputs.PlayerIDs"
            },
            {
              "name": "VsPlayerIDList",
              "in": "query",
              "value": "$inputs.VsPlayerIDList"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            },
            {
              "name": "MeasureType",
              "in": "query",
              "value": "$inputs.MeasureType"
            },
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlusMinus",
              "in": "query",
              "value": "$inputs.PlusMinus"
            },
            {
              "name": "PaceAdjust",
              "in": "query",
              "value": "$inputs.PaceAdjust"
            },
            {
              "name": "Rank",
              "in": "query",
              "value": "$inputs.Rank"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "Outcome",
              "in": "query",
              "value": "$inputs.Outcome"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "Month",
              "in": "query",
              "value": "$inputs.Month"
            },
            {
              "name": "SeasonSegment",
              "in": "query",
              "value": "$inputs.SeasonSegment"
            },
            {
              "name": "DateFrom",
              "in": "query",
              "value": "$inputs.DateFrom"
            },
            {
              "name": "DateTo",
              "in": "query",
              "value": "$inputs.DateTo"
            },
            {
              "name": "OpponentTeamID",
              "in": "query",
              "value": "$inputs.OpponentTeamID"
            },
            {
              "name": "VsConference",
              "in": "query",
              "value": "$inputs.VsConference"
            },
            {
              "name": "VsDivision",
              "in": "query",
              "value": "$inputs.VsDivision"
            },
            {
              "name": "GameSegment",
              "in": "query",
              "value": "$inputs.GameSegment"
            },
            {
              "name": "Period",
              "in": "query",
              "value": "$inputs.Period"
            },
            {
              "name": "LastNGames",
              "in": "query",
              "value": "$inputs.LastNGames"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_comparison_overall": "$response.body"
          }
        },
        {
          "stepId": "compare-players-head-to-head",
          "description": "Get statistics for one player specifically when playing against another player.",
          "operationPath": "openapi_source#/paths/~1playervsplayer/get",
          "parameters": [
            {
              "name": "PlayerID",
              "in": "query",
              "value": "$steps.find-players-for-comparison.outputs.player_list"
            },
            {
              "name": "VsPlayerID",
              "in": "query",
              "value": "$steps.find-players-for-comparison.outputs.player_list"
            },
            {
              "name": "SeasonType",
              "in": "query",
              "value": "$inputs.SeasonType"
            },
            {
              "name": "MeasureType",
              "in": "query",
              "value": "$inputs.MeasureType"
            },
            {
              "name": "PerMode",
              "in": "query",
              "value": "$inputs.PerMode"
            },
            {
              "name": "PlusMinus",
              "in": "query",
              "value": "$inputs.PlusMinus"
            },
            {
              "name": "PaceAdjust",
              "in": "query",
              "value": "$inputs.PaceAdjust"
            },
            {
              "name": "Rank",
              "in": "query",
              "value": "$inputs.Rank"
            },
            {
              "name": "Season",
              "in": "query",
              "value": "$inputs.Season"
            },
            {
              "name": "Outcome",
              "in": "query",
              "value": "$inputs.Outcome"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "Month",
              "in": "query",
              "value": "$inputs.Month"
            },
            {
              "name": "SeasonSegment",
              "in": "query",
              "value": "$inputs.SeasonSegment"
            },
            {
              "name": "DateFrom",
              "in": "query",
              "value": "$inputs.DateFrom"
            },
            {
              "name": "DateTo",
              "in": "query",
              "value": "$inputs.DateTo"
            },
            {
              "name": "OpponentTeamID",
              "in": "query",
              "value": "$inputs.OpponentTeamID"
            },
            {
              "name": "VsConference",
              "in": "query",
              "value": "$inputs.VsConference"
            },
            {
              "name": "VsDivision",
              "in": "query",
              "value": "$inputs.VsDivision"
            },
            {
              "name": "GameSegment",
              "in": "query",
              "value": "$inputs.GameSegment"
            },
            {
              "name": "Period",
              "in": "query",
              "value": "$inputs.Period"
            },
            {
              "name": "LastNGames",
              "in": "query",
              "value": "$inputs.LastNGames"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "player_vs_player_stats": "$response.body"
          }
        }
      ],
      "outputs": {
        "player_list": "$steps.find-players-for-comparison.outputs.player_list",
        "PlayerIDs": "$steps.find-players-for-comparison.outputs.PlayerIDs",
        "player_comparison_overall": "$steps.compare-players-overall.outputs.player_comparison_overall",
        "player_vs_player_stats": "$steps.compare-players-head-to-head.outputs.player_vs_player_stats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "draft-combine-analysis",
      "summary": "Retrieves various NBA draft combine results (anthropometric, drills, shooting) for a specific draft year.",
      "description": "Retrieves various NBA draft combine results (anthropometric, drills, shooting) for a specific draft year.",
      "inputs": {
        "type": "object",
        "properties": {
          "LeagueID": {
            "type": "string"
          },
          "SeasonYear": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-combine-anthro",
          "description": "Get anthropometric data (height, weight, wingspan) for players at the combine.",
          "operationPath": "openapi_source#/paths/~1draftcombineplayeranthro/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "SeasonYear",
              "in": "query",
              "value": "$inputs.SeasonYear"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "combine_anthro_data": "$response.body"
          }
        },
        {
          "stepId": "get-combine-drills",
          "description": "Get drill results (e.g., vertical leap, agility) for players at the combine.",
          "operationPath": "openapi_source#/paths/~1draftcombinedrillresults/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "SeasonYear",
              "in": "query",
              "value": "$inputs.SeasonYear"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "combine_drill_data": "$response.body"
          }
        },
        {
          "stepId": "get-combine-spot-shooting",
          "description": "Get spot shooting results for players at the combine.",
          "operationPath": "openapi_source#/paths/~1draftcombinespotshooting/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "SeasonYear",
              "in": "query",
              "value": "$inputs.SeasonYear"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "combine_spot_shooting_data": "$response.body"
          }
        },
        {
          "stepId": "get-combine-nonstationary-shooting",
          "description": "Get non-stationary (off the dribble) shooting results for players at the combine.",
          "operationPath": "openapi_source#/paths/~1draftcombinenonstationaryshooting/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "SeasonYear",
              "in": "query",
              "value": "$inputs.SeasonYear"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "combine_nonstationary_shooting_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "combine_anthro_data": "$steps.get-combine-anthro.outputs.combine_anthro_data",
        "combine_drill_data": "$steps.get-combine-drills.outputs.combine_drill_data",
        "combine_spot_shooting_data": "$steps.get-combine-spot-shooting.outputs.combine_spot_shooting_data",
        "combine_nonstationary_shooting_data": "$steps.get-combine-nonstationary-shooting.outputs.combine_nonstationary_shooting_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "check-daily-game-video-status",
      "summary": "Retrieves the scoreboard for a given date and then checks the video availability status for those games.",
      "description": "Retrieves the scoreboard for a given date and then checks the video availability status for those games.",
      "inputs": {
        "type": "object",
        "properties": {
          "GameDate": {
            "type": "string"
          },
          "LeagueID": {
            "type": "string"
          },
          "DayOffset": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-daily-scoreboard",
          "description": "Get the list of games for a specific date.",
          "operationPath": "openapi_source#/paths/~1scoreboardV2/get",
          "parameters": [
            {
              "name": "GameDate",
              "in": "query",
              "value": "$inputs.GameDate"
            },
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "DayOffset",
              "in": "query",
              "value": "$inputs.DayOffset"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "game_list": "$response.body",
            "GameDate_out": "$response.body"
          }
        },
        {
          "stepId": "check-video-status",
          "description": "Check the video availability status for games on the specified date.",
          "operationPath": "openapi_source#/paths/~1videoStatus/get",
          "parameters": [
            {
              "name": "LeagueID",
              "in": "query",
              "value": "$inputs.LeagueID"
            },
            {
              "name": "GameDate",
              "in": "query",
              "value": "$steps.get-daily-scoreboard.outputs.GameDate_out"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "video_status_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "game_list": "$steps.get-daily-scoreboard.outputs.game_list",
        "GameDate_out": "$steps.get-daily-scoreboard.outputs.GameDate_out",
        "video_status_data": "$steps.check-video-status.outputs.video_status_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}