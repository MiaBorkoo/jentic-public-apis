{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_insights_v1/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "voice-call-troubleshooting-and-annotation",
      "summary": "This workflow allows users to identify problematic voice calls based on various criteria, retrieve detailed insights about a specific call, analyze its events and metrics for troubleshooting, and then annotate the call with findings or feedback.",
      "description": "This workflow allows users to identify problematic voice calls based on various criteria, retrieve detailed insights about a specific call, analyze its events and metrics for troubleshooting, and then annotate the call with findings or feedback.",
      "inputs": {
        "type": "object",
        "properties": {
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "FromCarrier": {
            "type": "string"
          },
          "ToCarrier": {
            "type": "string"
          },
          "FromCountryCode": {
            "type": "string"
          },
          "ToCountryCode": {
            "type": "string"
          },
          "VerifiedCaller": {
            "type": "string"
          },
          "HasTag": {
            "type": "string"
          },
          "StartTime": {
            "type": "string"
          },
          "EndTime": {
            "type": "string"
          },
          "CallType": {
            "type": "string"
          },
          "CallState": {
            "type": "string"
          },
          "Direction": {
            "type": "string"
          },
          "ProcessingState": {
            "type": "string"
          },
          "SortBy": {
            "type": "string"
          },
          "Subaccount": {
            "type": "string"
          },
          "AbnormalSession": {
            "type": "string"
          },
          "AnsweredBy": {
            "type": "string"
          },
          "AnsweredByAnnotation": {
            "type": "string"
          },
          "ConnectivityIssueAnnotation": {
            "type": "string"
          },
          "QualityIssueAnnotation": {
            "type": "string"
          },
          "SpamAnnotation": {
            "type": "string"
          },
          "CallScoreAnnotation": {
            "type": "string"
          },
          "BrandedEnabled": {
            "type": "string"
          },
          "VoiceIntegrityEnabled": {
            "type": "string"
          },
          "BrandedBundleSid": {
            "type": "string"
          },
          "VoiceIntegrityBundleSid": {
            "type": "string"
          },
          "VoiceIntegrityUseCase": {
            "type": "string"
          },
          "BusinessProfileIdentity": {
            "type": "string"
          },
          "BusinessProfileIndustry": {
            "type": "string"
          },
          "BusinessProfileBundleSid": {
            "type": "string"
          },
          "BusinessProfileType": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "CallSid": {
            "type": "string"
          },
          "Edge": {
            "type": "string"
          },
          "ConnectivityIssue": {
            "type": "string"
          },
          "QualityIssues": {
            "type": "string"
          },
          "Spam": {
            "type": "string"
          },
          "CallScore": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Incident": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-call-summaries",
          "description": "Retrieve a list of voice call summaries, allowing filtering by various parameters like call state, quality issues, spam, or call score to identify calls needing attention.",
          "operationId": "ListCallSummaries",
          "parameters": [
            {
              "name": "From",
              "in": "query",
              "value": "$inputs.From"
            },
            {
              "name": "To",
              "in": "query",
              "value": "$inputs.To"
            },
            {
              "name": "FromCarrier",
              "in": "query",
              "value": "$inputs.FromCarrier"
            },
            {
              "name": "ToCarrier",
              "in": "query",
              "value": "$inputs.ToCarrier"
            },
            {
              "name": "FromCountryCode",
              "in": "query",
              "value": "$inputs.FromCountryCode"
            },
            {
              "name": "ToCountryCode",
              "in": "query",
              "value": "$inputs.ToCountryCode"
            },
            {
              "name": "VerifiedCaller",
              "in": "query",
              "value": "$inputs.VerifiedCaller"
            },
            {
              "name": "HasTag",
              "in": "query",
              "value": "$inputs.HasTag"
            },
            {
              "name": "StartTime",
              "in": "query",
              "value": "$inputs.StartTime"
            },
            {
              "name": "EndTime",
              "in": "query",
              "value": "$inputs.EndTime"
            },
            {
              "name": "CallType",
              "in": "query",
              "value": "$inputs.CallType"
            },
            {
              "name": "CallState",
              "in": "query",
              "value": "$inputs.CallState"
            },
            {
              "name": "Direction",
              "in": "query",
              "value": "$inputs.Direction"
            },
            {
              "name": "ProcessingState",
              "in": "query",
              "value": "$inputs.ProcessingState"
            },
            {
              "name": "SortBy",
              "in": "query",
              "value": "$inputs.SortBy"
            },
            {
              "name": "Subaccount",
              "in": "query",
              "value": "$inputs.Subaccount"
            },
            {
              "name": "AbnormalSession",
              "in": "query",
              "value": "$inputs.AbnormalSession"
            },
            {
              "name": "AnsweredBy",
              "in": "query",
              "value": "$inputs.AnsweredBy"
            },
            {
              "name": "AnsweredByAnnotation",
              "in": "query",
              "value": "$inputs.AnsweredByAnnotation"
            },
            {
              "name": "ConnectivityIssueAnnotation",
              "in": "query",
              "value": "$inputs.ConnectivityIssueAnnotation"
            },
            {
              "name": "QualityIssueAnnotation",
              "in": "query",
              "value": "$inputs.QualityIssueAnnotation"
            },
            {
              "name": "SpamAnnotation",
              "in": "query",
              "value": "$inputs.SpamAnnotation"
            },
            {
              "name": "CallScoreAnnotation",
              "in": "query",
              "value": "$inputs.CallScoreAnnotation"
            },
            {
              "name": "BrandedEnabled",
              "in": "query",
              "value": "$inputs.BrandedEnabled"
            },
            {
              "name": "VoiceIntegrityEnabled",
              "in": "query",
              "value": "$inputs.VoiceIntegrityEnabled"
            },
            {
              "name": "BrandedBundleSid",
              "in": "query",
              "value": "$inputs.BrandedBundleSid"
            },
            {
              "name": "VoiceIntegrityBundleSid",
              "in": "query",
              "value": "$inputs.VoiceIntegrityBundleSid"
            },
            {
              "name": "VoiceIntegrityUseCase",
              "in": "query",
              "value": "$inputs.VoiceIntegrityUseCase"
            },
            {
              "name": "BusinessProfileIdentity",
              "in": "query",
              "value": "$inputs.BusinessProfileIdentity"
            },
            {
              "name": "BusinessProfileIndustry",
              "in": "query",
              "value": "$inputs.BusinessProfileIndustry"
            },
            {
              "name": "BusinessProfileBundleSid",
              "in": "query",
              "value": "$inputs.BusinessProfileBundleSid"
            },
            {
              "name": "BusinessProfileType",
              "in": "query",
              "value": "$inputs.BusinessProfileType"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "call_summaries": "$response.body#/call_summaries"
          }
        },
        {
          "stepId": "fetch-call-summary",
          "description": "Fetch a comprehensive summary for a specific voice call, providing detailed information about its state, duration, participants, and quality attributes.",
          "operationId": "FetchSummary",
          "parameters": [
            {
              "name": "CallSid",
              "in": "path",
              "value": "$steps.list-call-summaries.outputs.call_summaries.call_sid"
            },
            {
              "name": "ProcessingState",
              "in": "query",
              "value": "$inputs.ProcessingState"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "call_summary": "$response.body#/call_summary"
          }
        },
        {
          "stepId": "list-call-events",
          "description": "Retrieve a list of events associated with a specific voice call, offering granular insights into its lifecycle, errors, and changes at different network edges (carrier, SIP, SDK, client).",
          "operationId": "ListEvent",
          "parameters": [
            {
              "name": "CallSid",
              "in": "path",
              "value": "$steps.fetch-call-summary.outputs.call_summary.call_sid"
            },
            {
              "name": "Edge",
              "in": "query",
              "value": "$inputs.Edge"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "events": "$response.body#/events"
          }
        },
        {
          "stepId": "list-call-metrics",
          "description": "Obtain detailed call quality metrics (e.g., jitter, packet loss, MOS) for a specific voice call, broken down by network edge and direction, crucial for performance analysis.",
          "operationId": "ListMetric",
          "parameters": [
            {
              "name": "CallSid",
              "in": "path",
              "value": "$steps.fetch-call-summary.outputs.call_summary.call_sid"
            },
            {
              "name": "Edge",
              "in": "query",
              "value": "$inputs.Edge"
            },
            {
              "name": "Direction",
              "in": "query",
              "value": "$inputs.Direction"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metrics": "$response.body#/metrics"
          }
        },
        {
          "stepId": "update-call-annotation",
          "description": "Update or add annotations to a specific voice call, allowing users to provide feedback on call quality, connectivity issues, spam, or assign a call score for future analysis and reporting.",
          "operationId": "UpdateAnnotation",
          "parameters": [
            {
              "name": "CallSid",
              "in": "path",
              "value": "$steps.fetch-call-summary.outputs.call_summary.call_sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "CallSid": "$steps.fetch-call-summary.outputs.call_summary.call_sid",
              "AnsweredBy": "$inputs.AnsweredBy",
              "ConnectivityIssue": "$inputs.ConnectivityIssue",
              "QualityIssues": "$inputs.QualityIssues",
              "Spam": "$inputs.Spam",
              "CallScore": "$inputs.CallScore",
              "Comment": "$inputs.Comment",
              "Incident": "$inputs.Incident"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "annotation": "$response.body#/annotation"
          }
        }
      ],
      "outputs": {
        "call_summaries": "$steps.list-call-summaries.outputs.call_summaries",
        "call_summary": "$steps.fetch-call-summary.outputs.call_summary",
        "events": "$steps.list-call-events.outputs.events",
        "metrics": "$steps.list-call-metrics.outputs.metrics",
        "annotation": "$steps.update-call-annotation.outputs.annotation"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "conference-performance-analysis",
      "summary": "This workflow enables users to monitor and analyze the performance and participant behavior within Twilio conferences, identifying issues and understanding participant-level details.",
      "description": "This workflow enables users to monitor and analyze the performance and participant behavior within Twilio conferences, identifying issues and understanding participant-level details.",
      "inputs": {
        "type": "object",
        "properties": {
          "ConferenceSid": {
            "type": "string"
          },
          "FriendlyName": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "CreatedAfter": {
            "type": "string"
          },
          "CreatedBefore": {
            "type": "string"
          },
          "MixerRegion": {
            "type": "string"
          },
          "Tags": {
            "type": "string"
          },
          "Subaccount": {
            "type": "string"
          },
          "DetectedIssues": {
            "type": "string"
          },
          "EndReason": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "ParticipantSid": {
            "type": "string"
          },
          "Label": {
            "type": "string"
          },
          "Events": {
            "type": "string"
          },
          "Metrics": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-conferences",
          "description": "Retrieve a list of conference summaries, allowing filtering by status, friendly name, creation time, mixer region, or detected issues to find relevant conferences.",
          "operationId": "ListConference",
          "parameters": [
            {
              "name": "ConferenceSid",
              "in": "query",
              "value": "$inputs.ConferenceSid"
            },
            {
              "name": "FriendlyName",
              "in": "query",
              "value": "$inputs.FriendlyName"
            },
            {
              "name": "Status",
              "in": "query",
              "value": "$inputs.Status"
            },
            {
              "name": "CreatedAfter",
              "in": "query",
              "value": "$inputs.CreatedAfter"
            },
            {
              "name": "CreatedBefore",
              "in": "query",
              "value": "$inputs.CreatedBefore"
            },
            {
              "name": "MixerRegion",
              "in": "query",
              "value": "$inputs.MixerRegion"
            },
            {
              "name": "Tags",
              "in": "query",
              "value": "$inputs.Tags"
            },
            {
              "name": "Subaccount",
              "in": "query",
              "value": "$inputs.Subaccount"
            },
            {
              "name": "DetectedIssues",
              "in": "query",
              "value": "$inputs.DetectedIssues"
            },
            {
              "name": "EndReason",
              "in": "query",
              "value": "$inputs.EndReason"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "conferences": "$response.body#/conferences"
          }
        },
        {
          "stepId": "fetch-conference-summary",
          "description": "Fetch a detailed summary for a specific conference, including its duration, participant counts, end reason, and detected issues.",
          "operationId": "FetchConference",
          "parameters": [
            {
              "name": "ConferenceSid",
              "in": "path",
              "value": "$steps.list-conferences.outputs.conferences.conference_sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "conference": "$response.body#/conference_sid"
          }
        },
        {
          "stepId": "list-conference-participants",
          "description": "List all participants for a given conference, providing an overview of who joined and their basic call status.",
          "operationId": "ListConferenceParticipant",
          "parameters": [
            {
              "name": "ConferenceSid",
              "in": "path",
              "value": "$steps.fetch-conference-summary.outputs.conference.conference_sid"
            },
            {
              "name": "ParticipantSid",
              "in": "query",
              "value": "$inputs.ParticipantSid"
            },
            {
              "name": "Label",
              "in": "query",
              "value": "$inputs.Label"
            },
            {
              "name": "Events",
              "in": "query",
              "value": "$inputs.Events"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "participants": "$response.body#/participants"
          }
        },
        {
          "stepId": "fetch-conference-participant-summary",
          "description": "Get a detailed summary for a specific participant within a conference, including their join/leave times, call quality metrics, and events (e.g., mute/hold).",
          "operationId": "FetchConferenceParticipant",
          "parameters": [
            {
              "name": "ConferenceSid",
              "in": "path",
              "value": "$steps.fetch-conference-summary.outputs.conference.conference_sid"
            },
            {
              "name": "ParticipantSid",
              "in": "path",
              "value": "$steps.list-conference-participants.outputs.participants.participant_sid"
            },
            {
              "name": "Events",
              "in": "query",
              "value": "$inputs.Events"
            },
            {
              "name": "Metrics",
              "in": "query",
              "value": "$inputs.Metrics"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "conference_participant": "$response.body#/conference_participant"
          }
        }
      ],
      "outputs": {
        "conferences": "$steps.list-conferences.outputs.conferences",
        "conference": "$steps.fetch-conference-summary.outputs.conference",
        "participants": "$steps.list-conference-participants.outputs.participants",
        "conference_participant": "$steps.fetch-conference-participant-summary.outputs.conference_participant"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "video-room-quality-investigation",
      "summary": "This workflow allows users to investigate the quality and participant details of specific Twilio Programmable Video rooms, aiding in troubleshooting and performance optimization.",
      "description": "This workflow allows users to investigate the quality and participant details of specific Twilio Programmable Video rooms, aiding in troubleshooting and performance optimization.",
      "inputs": {
        "type": "object",
        "properties": {
          "RoomType": {
            "type": "string"
          },
          "Codec": {
            "type": "string"
          },
          "RoomName": {
            "type": "string"
          },
          "CreatedAfter": {
            "type": "string"
          },
          "CreatedBefore": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "RoomSid": {
            "type": "string"
          },
          "ParticipantSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-video-room-summaries",
          "description": "Retrieve a list of Programmable Video room summaries, enabling filtering by room type, codecs used, room name, or creation time to identify specific rooms for investigation.",
          "operationId": "ListVideoRoomSummary",
          "parameters": [
            {
              "name": "RoomType",
              "in": "query",
              "value": "$inputs.RoomType"
            },
            {
              "name": "Codec",
              "in": "query",
              "value": "$inputs.Codec"
            },
            {
              "name": "RoomName",
              "in": "query",
              "value": "$inputs.RoomName"
            },
            {
              "name": "CreatedAfter",
              "in": "query",
              "value": "$inputs.CreatedAfter"
            },
            {
              "name": "CreatedBefore",
              "in": "query",
              "value": "$inputs.CreatedBefore"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "rooms": "$response.body#/rooms"
          }
        },
        {
          "stepId": "fetch-video-room-summary",
          "description": "Fetch detailed log analyzer data for a specific video room, including its status, duration, participant counts, and media region.",
          "operationId": "FetchVideoRoomSummary",
          "parameters": [
            {
              "name": "RoomSid",
              "in": "path",
              "value": "$steps.list-video-room-summaries.outputs.rooms.room_sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "video_room_summary": "$response.body#/video_room_summary"
          }
        },
        {
          "stepId": "list-video-participant-summaries",
          "description": "List all participants within a specific video room, providing an overview of their identities and basic connection status.",
          "operationId": "ListVideoParticipantSummary",
          "parameters": [
            {
              "name": "RoomSid",
              "in": "path",
              "value": "$steps.fetch-video-room-summary.outputs.video_room_summary.room_sid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "participants": "$response.body#/participants"
          }
        },
        {
          "stepId": "fetch-video-participant-summary",
          "description": "Get detailed video log analyzer data for a specific participant in a video room, including their join/leave times, error codes, and publisher information.",
          "operationId": "FetchVideoParticipantSummary",
          "parameters": [
            {
              "name": "RoomSid",
              "in": "path",
              "value": "$steps.fetch-video-room-summary.outputs.video_room_summary.room_sid"
            },
            {
              "name": "ParticipantSid",
              "in": "path",
              "value": "$steps.list-video-participant-summaries.outputs.participants.participant_sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "video_participant_summary": "$response.body#/video_participant_summary"
          }
        }
      ],
      "outputs": {
        "rooms": "$steps.list-video-room-summaries.outputs.rooms",
        "video_room_summary": "$steps.fetch-video-room-summary.outputs.video_room_summary",
        "participants": "$steps.list-video-participant-summaries.outputs.participants",
        "video_participant_summary": "$steps.fetch-video-participant-summary.outputs.video_participant_summary"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-voice-insights-account-settings",
      "summary": "This workflow allows users to retrieve and update the global Voice Insights settings for their Twilio account or a specific subaccount, enabling control over features like Advanced Features and Voice Trace.",
      "description": "This workflow allows users to retrieve and update the global Voice Insights settings for their Twilio account or a specific subaccount, enabling control over features like Advanced Features and Voice Trace.",
      "inputs": {
        "type": "object",
        "properties": {
          "SubaccountSid": {
            "type": "string"
          },
          "AdvancedFeatures": {
            "type": "string"
          },
          "VoiceTrace": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-account-settings",
          "description": "Retrieve the current Voice Insights settings for the main account or a specified subaccount, showing whether advanced features and voice trace are enabled.",
          "operationId": "FetchAccountSettings",
          "parameters": [
            {
              "name": "SubaccountSid",
              "in": "query",
              "value": "$inputs.SubaccountSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "account_settings": "$response.body#/account_settings"
          }
        },
        {
          "stepId": "update-account-settings",
          "description": "Update the Voice Insights settings, allowing the user to enable or disable Advanced Features and Voice Trace for their account or a specific subaccount.",
          "operationId": "UpdateAccountSettings",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "SubaccountSid": "$steps.fetch-account-settings.outputs.account_settings.account_sid",
              "AdvancedFeatures": "$inputs.AdvancedFeatures",
              "VoiceTrace": "$inputs.VoiceTrace"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "account_settings": "$response.body#/account_settings"
          }
        }
      ],
      "outputs": {
        "account_settings": "$steps.update-account-settings.outputs.account_settings"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}