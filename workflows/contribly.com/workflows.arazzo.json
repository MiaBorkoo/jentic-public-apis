{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/contribly.com/main/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "content-moderation-and-review",
      "summary": "Enables moderators to efficiently review, approve, or reject user contributions. This workflow allows listing contributions, fetching their details, applying moderation actions, and previewing notifications to contributors.",
      "description": "Enables moderators to efficiently review, approve, or reject user contributions. This workflow allows listing contributions, fetching their details, applying moderation actions, and previewing notifications to contributors.",
      "inputs": {
        "type": "object",
        "properties": {
          "assignment": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdBefore": {
            "type": "string"
          },
          "createdAfter": {
            "type": "string"
          },
          "createdDay": {
            "type": "string"
          },
          "createdMonth": {
            "type": "string"
          },
          "geohash": {
            "type": "string"
          },
          "hasLocation": {
            "type": "string"
          },
          "latLong": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "ownedBy": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "urlWords": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ids": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-contributions-for-moderation",
          "description": "Retrieves a list of contributions, which can be filtered by various criteria such as assignment, media type, or keywords, to identify content requiring moderation.",
          "operationPath": "openapi_source#/paths/~1contributions/get",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$inputs.assignment"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "createdBefore",
              "in": "query",
              "value": "$inputs.createdBefore"
            },
            {
              "name": "createdAfter",
              "in": "query",
              "value": "$inputs.createdAfter"
            },
            {
              "name": "createdDay",
              "in": "query",
              "value": "$inputs.createdDay"
            },
            {
              "name": "createdMonth",
              "in": "query",
              "value": "$inputs.createdMonth"
            },
            {
              "name": "geohash",
              "in": "query",
              "value": "$inputs.geohash"
            },
            {
              "name": "hasLocation",
              "in": "query",
              "value": "$inputs.hasLocation"
            },
            {
              "name": "latLong",
              "in": "query",
              "value": "$inputs.latLong"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "mediaType",
              "in": "query",
              "value": "$inputs.mediaType"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "urlWords",
              "in": "query",
              "value": "$inputs.urlWords"
            },
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            },
            {
              "name": "ids",
              "in": "query",
              "value": "$inputs.ids"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "contributions": "$response.body#/0/contributions"
          }
        },
        {
          "stepId": "get-contribution-details",
          "description": "Fetches the complete details of a specific contribution, including its content, associated media, and moderation history, to aid in the review process.",
          "operationPath": "openapi_source#/paths/~1contributions~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-contributions-for-moderation.outputs.contributions.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "contributionDetails": "$response.body#/contributionDetails"
          }
        },
        {
          "stepId": "moderate-contribution",
          "description": "Applies a moderation action (e.g., approve, reject, flag) to a contribution, updating its status and optionally adding notes for internal record-keeping.",
          "operationPath": "openapi_source#/paths/~1contributions~1{id}~1moderate/post",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-contribution-details.outputs.contributionDetails.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.get-contribution-details.outputs.contributionDetails.id",
              "action": "$inputs.action",
              "notes": "$inputs.notes"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "moderationStatus": "$response.body#/moderationStatus"
          }
        },
        {
          "stepId": "preview-moderation-notification",
          "description": "Generates a preview of the templated email notification that would be sent to the contributor after a moderation action, allowing moderators to verify content before sending.",
          "operationPath": "openapi_source#/paths/~1notifications~1contributions~1{id}~1preview/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-contribution-details.outputs.contributionDetails.id"
            },
            {
              "name": "message",
              "in": "query",
              "value": "$inputs.message"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "notificationPreview": "$response.body#/notificationPreview"
          }
        }
      ],
      "outputs": {
        "contributions": "$steps.list-contributions-for-moderation.outputs.contributions",
        "contributionDetails": "$steps.get-contribution-details.outputs.contributionDetails",
        "moderationStatus": "$steps.moderate-contribution.outputs.moderationStatus",
        "notificationPreview": "$steps.preview-moderation-notification.outputs.notificationPreview"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "user-contribution-submission",
      "summary": "Allows a user to submit new content, optionally including a media file, to a specific assignment. This workflow covers the common user journey of uploading media and then creating a text-based contribution that references that media.",
      "description": "Allows a user to submit new content, optionally including a media file, to a specific assignment. This workflow covers the common user journey of uploading media and then creating a text-based contribution that references that media.",
      "inputs": {
        "type": "object",
        "properties": {
          "upload-media_body": {
            "type": "object"
          },
          "assignment": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "headline": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-media",
          "description": "Uploads a binary media file (e.g., image, video) to the platform. This step is typically performed before creating a contribution that includes media.",
          "operationPath": "openapi_source#/paths/~1media/post",
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.upload-media_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "create-contribution",
          "description": "Creates a new user contribution, which can include a headline, body text, and references to previously uploaded media. It can also be linked to a specific assignment.",
          "operationPath": "openapi_source#/paths/~1contributions/post",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "mediaUsages": "$steps.upload-media.outputs.id",
              "assignment": "$inputs.assignment",
              "body": "$inputs.body",
              "headline": "$inputs.headline"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-contribution.outputs.id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "assignment-creation-and-content-collection-setup",
      "summary": "Allows administrators or content managers to define and manage content assignments, which serve as campaigns or prompts for user contributions. This workflow includes creating an assignment, retrieving its details, and listing contributions submitted to it.",
      "description": "Allows administrators or content managers to define and manage content assignments, which serve as campaigns or prompts for user contributions. This workflow includes creating an assignment, retrieving its details, and listing contributions submitted to it.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "assignment": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdBefore": {
            "type": "string"
          },
          "createdAfter": {
            "type": "string"
          },
          "createdDay": {
            "type": "string"
          },
          "createdMonth": {
            "type": "string"
          },
          "geohash": {
            "type": "string"
          },
          "hasLocation": {
            "type": "string"
          },
          "latLong": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "ownedBy": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "urlWords": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ids": {
            "type": "string"
          },
          "format": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-assignment",
          "description": "Creates a new assignment, specifying its name, description, open/close dates, media requirements, and other properties.",
          "operationPath": "openapi_source#/paths/~1assignments/post",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "get-assignment-details",
          "description": "Retrieves the full details of a specific assignment, useful for verifying creation or displaying assignment information.",
          "operationPath": "openapi_source#/paths/~1assignments~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-assignment.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "assignmentDetails": "$response.body#/assignmentDetails"
          }
        },
        {
          "stepId": "list-contributions-for-assignment",
          "description": "Lists all contributions that have been submitted in response to a particular assignment, allowing for tracking and review of collected content.",
          "operationPath": "openapi_source#/paths/~1contributions/get",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$steps.get-assignment-details.outputs.assignmentDetails.id"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "createdBefore",
              "in": "query",
              "value": "$inputs.createdBefore"
            },
            {
              "name": "createdAfter",
              "in": "query",
              "value": "$inputs.createdAfter"
            },
            {
              "name": "createdDay",
              "in": "query",
              "value": "$inputs.createdDay"
            },
            {
              "name": "createdMonth",
              "in": "query",
              "value": "$inputs.createdMonth"
            },
            {
              "name": "geohash",
              "in": "query",
              "value": "$inputs.geohash"
            },
            {
              "name": "hasLocation",
              "in": "query",
              "value": "$inputs.hasLocation"
            },
            {
              "name": "latLong",
              "in": "query",
              "value": "$inputs.latLong"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "mediaType",
              "in": "query",
              "value": "$inputs.mediaType"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "urlWords",
              "in": "query",
              "value": "$inputs.urlWords"
            },
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            },
            {
              "name": "ids",
              "in": "query",
              "value": "$inputs.ids"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "contributions": "$response.body#/0/contributions"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-assignment.outputs.id",
        "assignmentDetails": "$steps.get-assignment-details.outputs.assignmentDetails",
        "contributions": "$steps.list-contributions-for-assignment.outputs.contributions"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "user-activity-and-profile-lookup",
      "summary": "Allows for retrieving detailed information about a specific user, including their profile details, and listing all contributions and form responses they have submitted. This workflow is valuable for user management, support, or analytics.",
      "description": "Allows for retrieving detailed information about a specific user, including their profile details, and listing all contributions and form responses they have submitted. This workflow is valuable for user management, support, or analytics.",
      "inputs": {
        "type": "object",
        "properties": {
          "assignment": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "minimumContributions": {
            "type": "string"
          },
          "linkedProfile": {
            "type": "string"
          },
          "ownedBy": {
            "type": "string"
          },
          "submittedBefore": {
            "type": "string"
          },
          "submittedAfter": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdBefore": {
            "type": "string"
          },
          "createdAfter": {
            "type": "string"
          },
          "createdDay": {
            "type": "string"
          },
          "createdMonth": {
            "type": "string"
          },
          "geohash": {
            "type": "string"
          },
          "hasLocation": {
            "type": "string"
          },
          "latLong": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "urlWords": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ids": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "form": {
            "type": "string"
          },
          "contribution": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-users",
          "description": "Searches for users based on various criteria such as username, contributions to a specific assignment, or location, to identify a target user.",
          "operationPath": "openapi_source#/paths/~1users/get",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$inputs.assignment"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "minimumContributions",
              "in": "query",
              "value": "$inputs.minimumContributions"
            },
            {
              "name": "linkedProfile",
              "in": "query",
              "value": "$inputs.linkedProfile"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "submittedBefore",
              "in": "query",
              "value": "$inputs.submittedBefore"
            },
            {
              "name": "submittedAfter",
              "in": "query",
              "value": "$inputs.submittedAfter"
            },
            {
              "name": "username",
              "in": "query",
              "value": "$inputs.username"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "users": "$response.body#/0/users"
          }
        },
        {
          "stepId": "get-user-details",
          "description": "Retrieves the full profile details for a specific user, including their display name, bio, and registration date.",
          "operationPath": "openapi_source#/paths/~1users~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-users.outputs.users.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "userDetails": "$response.body#/userDetails"
          }
        },
        {
          "stepId": "list-user-contributions",
          "description": "Lists all contributions made by a specific user, providing insight into their activity on the platform.",
          "operationPath": "openapi_source#/paths/~1contributions/get",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$inputs.assignment"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "createdBefore",
              "in": "query",
              "value": "$inputs.createdBefore"
            },
            {
              "name": "createdAfter",
              "in": "query",
              "value": "$inputs.createdAfter"
            },
            {
              "name": "createdDay",
              "in": "query",
              "value": "$inputs.createdDay"
            },
            {
              "name": "createdMonth",
              "in": "query",
              "value": "$inputs.createdMonth"
            },
            {
              "name": "geohash",
              "in": "query",
              "value": "$inputs.geohash"
            },
            {
              "name": "hasLocation",
              "in": "query",
              "value": "$inputs.hasLocation"
            },
            {
              "name": "latLong",
              "in": "query",
              "value": "$inputs.latLong"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "mediaType",
              "in": "query",
              "value": "$inputs.mediaType"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "urlWords",
              "in": "query",
              "value": "$inputs.urlWords"
            },
            {
              "name": "user",
              "in": "query",
              "value": "$steps.get-user-details.outputs.userDetails.id"
            },
            {
              "name": "ids",
              "in": "query",
              "value": "$inputs.ids"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "contributions": "$response.body#/0/contributions"
          }
        },
        {
          "stepId": "list-user-form-responses",
          "description": "Lists all form responses submitted by a specific user, complementing the view of their contributions.",
          "operationPath": "openapi_source#/paths/~1form-responses/get",
          "parameters": [
            {
              "name": "user",
              "in": "query",
              "value": "$steps.get-user-details.outputs.userDetails.id"
            },
            {
              "name": "form",
              "in": "query",
              "value": "$inputs.form"
            },
            {
              "name": "contribution",
              "in": "query",
              "value": "$inputs.contribution"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "formResponses": "$response.body#/0/formResponses"
          }
        }
      ],
      "outputs": {
        "users": "$steps.list-users.outputs.users",
        "userDetails": "$steps.get-user-details.outputs.userDetails",
        "contributions": "$steps.list-user-contributions.outputs.contributions",
        "formResponses": "$steps.list-user-form-responses.outputs.formResponses"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "bulk-contribution-data-export",
      "summary": "Enables users to export a filtered set of contributions and their associated media for external analysis, archiving, or migration. This workflow includes a pre-flight summary, initiating the export, and monitoring its progress.",
      "description": "Enables users to export a filtered set of contributions and their associated media for external analysis, archiving, or migration. This workflow includes a pre-flight summary, initiating the export, and monitoring its progress.",
      "inputs": {
        "type": "object",
        "properties": {
          "assignment": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdBefore": {
            "type": "string"
          },
          "createdAfter": {
            "type": "string"
          },
          "geohash": {
            "type": "string"
          },
          "hasLocation": {
            "type": "string"
          },
          "latLong": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "ownedBy": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "urlWords": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "tagged": {
            "type": "string"
          },
          "combined": {
            "type": "string"
          },
          "individual": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "json": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-export-summary",
          "description": "Provides a summary of the number of contributions and media files, along with an estimated total size, for a potential export job based on specified filters. This helps in planning the export.",
          "operationPath": "openapi_source#/paths/~1export-summary/post",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$inputs.assignment"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "createdBefore",
              "in": "query",
              "value": "$inputs.createdBefore"
            },
            {
              "name": "createdAfter",
              "in": "query",
              "value": "$inputs.createdAfter"
            },
            {
              "name": "geohash",
              "in": "query",
              "value": "$inputs.geohash"
            },
            {
              "name": "hasLocation",
              "in": "query",
              "value": "$inputs.hasLocation"
            },
            {
              "name": "latLong",
              "in": "query",
              "value": "$inputs.latLong"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "mediaType",
              "in": "query",
              "value": "$inputs.mediaType"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "urlWords",
              "in": "query",
              "value": "$inputs.urlWords"
            },
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "exportSummary": "$response.body#/exportSummary"
          }
        },
        {
          "stepId": "initiate-contribution-export",
          "description": "Starts an asynchronous export job for contributions matching the specified criteria. The response includes an ID to track the job's progress.",
          "operationPath": "openapi_source#/paths/~1export/post",
          "parameters": [
            {
              "name": "assignment",
              "in": "query",
              "value": "$inputs.assignment"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "createdBefore",
              "in": "query",
              "value": "$inputs.createdBefore"
            },
            {
              "name": "createdAfter",
              "in": "query",
              "value": "$inputs.createdAfter"
            },
            {
              "name": "geohash",
              "in": "query",
              "value": "$inputs.geohash"
            },
            {
              "name": "hasLocation",
              "in": "query",
              "value": "$inputs.hasLocation"
            },
            {
              "name": "latLong",
              "in": "query",
              "value": "$inputs.latLong"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "mediaType",
              "in": "query",
              "value": "$inputs.mediaType"
            },
            {
              "name": "ownedBy",
              "in": "query",
              "value": "$inputs.ownedBy"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "urlWords",
              "in": "query",
              "value": "$inputs.urlWords"
            },
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            },
            {
              "name": "tagged",
              "in": "query",
              "value": "$inputs.tagged"
            },
            {
              "name": "combined",
              "in": "query",
              "value": "$inputs.combined"
            },
            {
              "name": "individual",
              "in": "query",
              "value": "$inputs.individual"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "json",
              "in": "query",
              "value": "$inputs.json"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "downloadUrl": "$response.body#/downloadUrl"
          }
        },
        {
          "stepId": "monitor-export-job",
          "description": "Polls the status of an ongoing export job using its ID. Once the job is complete, the download URL for the exported data will be available.",
          "operationPath": "openapi_source#/paths/~1exports~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.initiate-contribution-export.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "exportStatus": "$response.body#/exportStatus",
            "downloadUrl": "$response.body#/downloadUrl"
          }
        }
      ],
      "outputs": {
        "exportSummary": "$steps.get-export-summary.outputs.exportSummary",
        "id": "$steps.initiate-contribution-export.outputs.id",
        "downloadUrl": "$steps.monitor-export-job.outputs.downloadUrl",
        "exportStatus": "$steps.monitor-export-job.outputs.exportStatus"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "custom-form-creation-and-response-management",
      "summary": "Allows users to define custom forms with various fields, submit responses to these forms, and retrieve all collected responses. This is useful for gathering structured data from contributors.",
      "description": "Allows users to define custom forms with various fields, submit responses to these forms, and retrieve all collected responses. This is useful for gathering structured data from contributors.",
      "inputs": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "callToAction": {
            "type": "string"
          },
          "cssUrl": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "heading": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "noCss": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "responses": {
            "type": "string"
          },
          "contribution": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "form": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-form",
          "description": "Creates a new custom form, defining its name, heading, call to action, and a list of fields (e.g., text, dropdowns) for data collection.",
          "operationPath": "openapi_source#/paths/~1forms/post",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "tags": "$inputs.tags",
              "callToAction": "$inputs.callToAction",
              "cssUrl": "$inputs.cssUrl",
              "fields": "$inputs.fields",
              "heading": "$inputs.heading",
              "name": "$inputs.name",
              "noCss": "$inputs.noCss"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "get-form-details",
          "description": "Retrieves the full details of a specific form, including its structure and fields, which can be used to render the form for user input.",
          "operationPath": "openapi_source#/paths/~1forms~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-form.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "formDetails": "$response.body#/formDetails"
          }
        },
        {
          "stepId": "submit-form-response",
          "description": "Submits a user's response to a specific form, providing values for the defined fields. Responses can optionally be linked to a contribution.",
          "operationPath": "openapi_source#/paths/~1form-responses/post",
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "form": "$steps.get-form-details.outputs.formDetails.id",
              "responses": "$inputs.responses",
              "contribution": "$inputs.contribution"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "list-form-responses",
          "description": "Lists all responses submitted to a particular form, allowing for review and analysis of collected data.",
          "operationPath": "openapi_source#/paths/~1form-responses/get",
          "parameters": [
            {
              "name": "user",
              "in": "query",
              "value": "$inputs.user"
            },
            {
              "name": "form",
              "in": "query",
              "value": "$steps.get-form-details.outputs.formDetails.id"
            },
            {
              "name": "contribution",
              "in": "query",
              "value": "$inputs.contribution"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "formResponses": "$response.body#/0/formResponses"
          }
        }
      ],
      "outputs": {
        "id": "$steps.submit-form-response.outputs.id",
        "formDetails": "$steps.get-form-details.outputs.formDetails",
        "formResponses": "$steps.list-form-responses.outputs.formResponses"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
