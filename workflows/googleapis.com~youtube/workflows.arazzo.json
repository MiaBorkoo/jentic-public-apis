{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/youtube/v3/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "upload-video-with-caption-and-thumbnail",
      "summary": "Handles the complete process of uploading a new video, adding captions for accessibility, and setting a custom thumbnail.",
      "description": "Handles the complete process of uploading a new video, adding captions for accessibility, and setting a custom thumbnail.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "autoLevels": {
            "type": "string"
          },
          "notifySubscribers": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "stabilize": {
            "type": "string"
          },
          "upload-video_body": {
            "type": "object"
          },
          "onBehalfOf": {
            "type": "string"
          },
          "sync": {
            "type": "string"
          },
          "videoId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-video",
          "description": "Uploads the video file and its basic metadata (title, description, etc.).",
          "operationId": "youtube.videos.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "autoLevels",
              "in": "query",
              "value": "$inputs.autoLevels"
            },
            {
              "name": "notifySubscribers",
              "in": "query",
              "value": "$inputs.notifySubscribers"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            },
            {
              "name": "stabilize",
              "in": "query",
              "value": "$inputs.stabilize"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": "$inputs.upload-video_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "videoId": "$response.body",
            "videoDetails": "$response.body"
          }
        },
        {
          "stepId": "upload-caption",
          "description": "Uploads a caption track file for the previously uploaded video.",
          "operationId": "youtube.captions.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOf",
              "in": "query",
              "value": "$inputs.onBehalfOf"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "sync",
              "in": "query",
              "value": "$inputs.sync"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "captionId": "$response.body",
            "captionDetails": "$response.body"
          }
        },
        {
          "stepId": "set-thumbnail",
          "description": "Uploads and sets a custom thumbnail image for the video.",
          "operationId": "youtube.thumbnails.set",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "videoId",
              "in": "query",
              "value": "$steps.upload-video.outputs.videoId"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "thumbnailSetResponse": "$response.body"
          }
        }
      ],
      "outputs": {
        "videoId": "$steps.upload-video.outputs.videoId",
        "videoDetails": "$steps.upload-video.outputs.videoDetails",
        "captionId": "$steps.upload-caption.outputs.captionId",
        "captionDetails": "$steps.upload-caption.outputs.captionDetails",
        "thumbnailSetResponse": "$steps.set-thumbnail.outputs.thumbnailSetResponse"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "moderate-live-chat",
      "summary": "Finds an active live broadcast, fetches its chat messages, deletes an inappropriate message, and bans the user who sent it.",
      "description": "Finds an active live broadcast, fetches its chat messages, deletes an inappropriate message, and bans the user who sent it.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "broadcastStatus": {
            "type": "string"
          },
          "broadcastType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "mine": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "liveChatId": {
            "type": "string"
          },
          "hl": {
            "type": "string"
          },
          "profileImageSize": {
            "type": "string"
          },
          "ban-chat-user_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-active-broadcast",
          "description": "Lists the user's broadcasts to find an active one.",
          "operationId": "youtube.liveBroadcasts.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "broadcastStatus",
              "in": "query",
              "value": "$inputs.broadcastStatus"
            },
            {
              "name": "broadcastType",
              "in": "query",
              "value": "$inputs.broadcastType"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "mine",
              "in": "query",
              "value": "$inputs.mine"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "broadcastList": "$response.body"
          }
        },
        {
          "stepId": "fetch-chat-messages",
          "description": "Fetches messages from the active broadcast's live chat.",
          "operationId": "youtube.liveChatMessages.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "liveChatId",
              "in": "query",
              "value": "$steps.find-active-broadcast.outputs.broadcastList.items[0].snippet.liveChatId"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "hl",
              "in": "query",
              "value": "$inputs.hl"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "profileImageSize",
              "in": "query",
              "value": "$inputs.profileImageSize"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "messageList": "$response.body"
          }
        },
        {
          "stepId": "delete-chat-message",
          "description": "Deletes a specific message identified from the fetched list.",
          "operationId": "youtube.liveChatMessages.delete",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.fetch-chat-messages.outputs.messageList.items[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "message_data": "$response.body"
          }
        },
        {
          "stepId": "ban-chat-user",
          "description": "Bans the author of the deleted message from the live chat.",
          "operationId": "youtube.liveChatBans.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.ban-chat-user_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "banDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "broadcastList": "$steps.find-active-broadcast.outputs.broadcastList",
        "messageList": "$steps.fetch-chat-messages.outputs.messageList",
        "message_data": "$steps.delete-chat-message.outputs.message_data",
        "banDetails": "$steps.ban-chat-user.outputs.banDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-populate-playlist",
      "summary": "Creates a new playlist, searches for relevant videos, and adds them to the newly created playlist.",
      "description": "Creates a new playlist, searches for relevant videos, and adds them to the newly created playlist.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "channelType": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "forContentOwner": {
            "type": "string"
          },
          "forDeveloper": {
            "type": "string"
          },
          "forMine": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locationRadius": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "publishedAfter": {
            "type": "string"
          },
          "publishedBefore": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "regionCode": {
            "type": "string"
          },
          "relevanceLanguage": {
            "type": "string"
          },
          "safeSearch": {
            "type": "string"
          },
          "topicId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "videoCaption": {
            "type": "string"
          },
          "videoCategoryId": {
            "type": "string"
          },
          "videoDefinition": {
            "type": "string"
          },
          "videoDimension": {
            "type": "string"
          },
          "videoDuration": {
            "type": "string"
          },
          "videoEmbeddable": {
            "type": "string"
          },
          "videoLicense": {
            "type": "string"
          },
          "videoPaidProductPlacement": {
            "type": "string"
          },
          "videoSyndicated": {
            "type": "string"
          },
          "videoType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-playlist",
          "description": "Creates a new, empty playlist with specified metadata.",
          "operationId": "youtube.playlists.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "playlistId": "$response.body",
            "playlistDetails": "$response.body"
          }
        },
        {
          "stepId": "search-videos-for-playlist",
          "description": "Searches for videos based on a query to add to the playlist.",
          "operationId": "youtube.search.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "channelType",
              "in": "query",
              "value": "$inputs.channelType"
            },
            {
              "name": "eventType",
              "in": "query",
              "value": "$inputs.eventType"
            },
            {
              "name": "forContentOwner",
              "in": "query",
              "value": "$inputs.forContentOwner"
            },
            {
              "name": "forDeveloper",
              "in": "query",
              "value": "$inputs.forDeveloper"
            },
            {
              "name": "forMine",
              "in": "query",
              "value": "$inputs.forMine"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$inputs.location"
            },
            {
              "name": "locationRadius",
              "in": "query",
              "value": "$inputs.locationRadius"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "order",
              "in": "query",
              "value": "$inputs.order"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "publishedAfter",
              "in": "query",
              "value": "$inputs.publishedAfter"
            },
            {
              "name": "publishedBefore",
              "in": "query",
              "value": "$inputs.publishedBefore"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "regionCode",
              "in": "query",
              "value": "$inputs.regionCode"
            },
            {
              "name": "relevanceLanguage",
              "in": "query",
              "value": "$inputs.relevanceLanguage"
            },
            {
              "name": "safeSearch",
              "in": "query",
              "value": "$inputs.safeSearch"
            },
            {
              "name": "topicId",
              "in": "query",
              "value": "$inputs.topicId"
            },
            {
              "name": "type",
              "in": "query",
              "value": "$inputs.type"
            },
            {
              "name": "videoCaption",
              "in": "query",
              "value": "$inputs.videoCaption"
            },
            {
              "name": "videoCategoryId",
              "in": "query",
              "value": "$inputs.videoCategoryId"
            },
            {
              "name": "videoDefinition",
              "in": "query",
              "value": "$inputs.videoDefinition"
            },
            {
              "name": "videoDimension",
              "in": "query",
              "value": "$inputs.videoDimension"
            },
            {
              "name": "videoDuration",
              "in": "query",
              "value": "$inputs.videoDuration"
            },
            {
              "name": "videoEmbeddable",
              "in": "query",
              "value": "$inputs.videoEmbeddable"
            },
            {
              "name": "videoLicense",
              "in": "query",
              "value": "$inputs.videoLicense"
            },
            {
              "name": "videoPaidProductPlacement",
              "in": "query",
              "value": "$inputs.videoPaidProductPlacement"
            },
            {
              "name": "videoSyndicated",
              "in": "query",
              "value": "$inputs.videoSyndicated"
            },
            {
              "name": "videoType",
              "in": "query",
              "value": "$inputs.videoType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "searchResults": "$response.body"
          }
        },
        {
          "stepId": "add-video-to-playlist",
          "description": "Adds a specific video found in the search results to the created playlist.",
          "operationId": "youtube.playlistItems.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "playlistItemId": "$response.body",
            "playlistItemDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "playlistId": "$steps.create-playlist.outputs.playlistId",
        "playlistDetails": "$steps.create-playlist.outputs.playlistDetails",
        "searchResults": "$steps.search-videos-for-playlist.outputs.searchResults",
        "playlistItemId": "$steps.add-video-to-playlist.outputs.playlistItemId",
        "playlistItemDetails": "$steps.add-video-to-playlist.outputs.playlistItemDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "full-live-streaming-setup-and-execution",
      "summary": "Sets up a reusable live stream, creates a broadcast event, binds them, transitions the broadcast state, allows chat interaction and cue point insertion, and finally completes the broadcast.",
      "description": "Sets up a reusable live stream, creates a broadcast event, binds them, transitions the broadcast state, allows chat interaction and cue point insertion, and finally completes the broadcast.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "streamId": {
            "type": "string"
          },
          "broadcastStatus": {
            "type": "string"
          },
          "liveChatId": {
            "type": "string"
          },
          "hl": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "profileImageSize": {
            "type": "string"
          },
          "send-live-chat-message_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-live-stream",
          "description": "Creates a reusable live stream ingestion point with specified CDN settings.",
          "operationId": "youtube.liveStreams.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "streamId": "$response.body",
            "ingestionInfo": "$response.body",
            "streamDetails": "$response.body"
          }
        },
        {
          "stepId": "create-live-broadcast",
          "description": "Creates a live broadcast event with scheduling and content details.",
          "operationId": "youtube.liveBroadcasts.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "broadcastId": "$response.body",
            "liveChatId": "$response.body",
            "broadcastDetails": "$response.body"
          }
        },
        {
          "stepId": "bind-stream-to-broadcast",
          "description": "Links the created live stream to the created broadcast event.",
          "operationId": "youtube.liveBroadcasts.bind",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.create-live-broadcast.outputs.broadcastId"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            },
            {
              "name": "streamId",
              "in": "query",
              "value": "$steps.create-live-stream.outputs.streamId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updatedBroadcastDetails": "$response.body"
          }
        },
        {
          "stepId": "start-broadcast-transition",
          "description": "Transitions the broadcast state to 'testing' or 'live'.",
          "operationId": "youtube.liveBroadcasts.transition",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "broadcastStatus",
              "in": "query",
              "value": "$inputs.broadcastStatus"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.create-live-broadcast.outputs.broadcastId"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "transitionedBroadcastDetails": "$response.body"
          }
        },
        {
          "stepId": "get-live-chat-messages",
          "description": "Retrieves messages from the live chat during the broadcast.",
          "operationId": "youtube.liveChatMessages.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "liveChatId",
              "in": "query",
              "value": "$steps.create-live-broadcast.outputs.liveChatId"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "hl",
              "in": "query",
              "value": "$inputs.hl"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "profileImageSize",
              "in": "query",
              "value": "$inputs.profileImageSize"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "chatMessages": "$response.body",
            "nextPageToken": "$response.body"
          }
        },
        {
          "stepId": "send-live-chat-message",
          "description": "Sends a message to the live chat during the broadcast.",
          "operationId": "youtube.liveChatMessages.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.send-live-chat-message_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sentMessageDetails": "$response.body"
          }
        },
        {
          "stepId": "insert-ad-cuepoint",
          "description": "Inserts an ad break cue point into the live broadcast.",
          "operationId": "youtube.liveBroadcasts.insertCuepoint",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.create-live-broadcast.outputs.broadcastId"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "id": "$steps.create-live-broadcast.outputs.broadcastId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "cuepointDetails": "$response.body"
          }
        },
        {
          "stepId": "end-broadcast-transition",
          "description": "Transitions the broadcast state to 'complete'.",
          "operationId": "youtube.liveBroadcasts.transition",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "broadcastStatus",
              "in": "query",
              "value": "$inputs.broadcastStatus"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.create-live-broadcast.outputs.broadcastId"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "completedBroadcastDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "streamId": "$steps.create-live-stream.outputs.streamId",
        "ingestionInfo": "$steps.create-live-stream.outputs.ingestionInfo",
        "streamDetails": "$steps.create-live-stream.outputs.streamDetails",
        "broadcastId": "$steps.create-live-broadcast.outputs.broadcastId",
        "liveChatId": "$steps.create-live-broadcast.outputs.liveChatId",
        "broadcastDetails": "$steps.create-live-broadcast.outputs.broadcastDetails",
        "updatedBroadcastDetails": "$steps.bind-stream-to-broadcast.outputs.updatedBroadcastDetails",
        "transitionedBroadcastDetails": "$steps.start-broadcast-transition.outputs.transitionedBroadcastDetails",
        "chatMessages": "$steps.get-live-chat-messages.outputs.chatMessages",
        "nextPageToken": "$steps.get-live-chat-messages.outputs.nextPageToken",
        "sentMessageDetails": "$steps.send-live-chat-message.outputs.sentMessageDetails",
        "cuepointDetails": "$steps.insert-ad-cuepoint.outputs.cuepointDetails",
        "completedBroadcastDetails": "$steps.end-broadcast-transition.outputs.completedBroadcastDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-channel-appearance",
      "summary": "Updates the visual elements of a channel, including the banner, watermark, and channel sections.",
      "description": "Updates the visual elements of a channel, including the banner, watermark, and channel sections.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "upload-channel-banner_body": {
            "type": "object"
          },
          "set-channel-watermark_body": {
            "type": "object"
          },
          "part": {
            "type": "string"
          },
          "update-channel-branding_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-channel-banner",
          "description": "Uploads a new banner image for the channel.",
          "operationId": "youtube.channelBanners.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": "$inputs.upload-channel-banner_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "bannerDetails": "$response.body"
          }
        },
        {
          "stepId": "set-channel-watermark",
          "description": "Sets or updates the branding watermark for the channel.",
          "operationId": "youtube.watermarks.set",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            }
          ],
          "requestBody": {
            "contentType": "application/octet-stream",
            "payload": "$inputs.set-channel-watermark_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "watermark_data": "$response.body"
          }
        },
        {
          "stepId": "add-channel-section",
          "description": "Adds a new section (e.g., featuring a playlist) to the channel page.",
          "operationId": "youtube.channelSections.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sectionId": "$response.body",
            "sectionDetails": "$response.body"
          }
        },
        {
          "stepId": "update-channel-branding",
          "description": "Updates the overall channel branding settings.",
          "operationId": "youtube.channels.update",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.update-channel-branding_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updatedChannelDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "bannerDetails": "$steps.upload-channel-banner.outputs.bannerDetails",
        "watermark_data": "$steps.set-channel-watermark.outputs.watermark_data",
        "sectionId": "$steps.add-channel-section.outputs.sectionId",
        "sectionDetails": "$steps.add-channel-section.outputs.sectionDetails",
        "updatedChannelDetails": "$steps.update-channel-branding.outputs.updatedChannelDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-channel-subscriptions",
      "summary": "Allows a user to subscribe to a channel and later list their subscriptions.",
      "description": "Allows a user to subscribe to a channel and later list their subscriptions.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "subscribe-to-channel_body": {
            "type": "object"
          },
          "channelId": {
            "type": "string"
          },
          "forChannelId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "mine": {
            "type": "string"
          },
          "myRecentSubscribers": {
            "type": "string"
          },
          "mySubscribers": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "onBehalfOfContentOwnerChannel": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "subscribe-to-channel",
          "description": "Creates a subscription to a specified channel for the authenticated user.",
          "operationId": "youtube.subscriptions.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.subscribe-to-channel_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptionId": "$response.body",
            "subscriptionDetails": "$response.body"
          }
        },
        {
          "stepId": "list-my-subscriptions",
          "description": "Retrieves the list of channels the authenticated user is subscribed to.",
          "operationId": "youtube.subscriptions.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "forChannelId",
              "in": "query",
              "value": "$inputs.forChannelId"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "mine",
              "in": "query",
              "value": "$inputs.mine"
            },
            {
              "name": "myRecentSubscribers",
              "in": "query",
              "value": "$inputs.myRecentSubscribers"
            },
            {
              "name": "mySubscribers",
              "in": "query",
              "value": "$inputs.mySubscribers"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "onBehalfOfContentOwnerChannel",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwnerChannel"
            },
            {
              "name": "order",
              "in": "query",
              "value": "$inputs.order"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "subscriptionList": "$response.body"
          }
        }
      ],
      "outputs": {
        "subscriptionId": "$steps.subscribe-to-channel.outputs.subscriptionId",
        "subscriptionDetails": "$steps.subscribe-to-channel.outputs.subscriptionDetails",
        "subscriptionList": "$steps.list-my-subscriptions.outputs.subscriptionList"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-video-comments",
      "summary": "Fetches comment threads for a video, posts a new top-level comment, and replies to an existing comment.",
      "description": "Fetches comment threads for a video, posts a new top-level comment, and replies to an existing comment.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "allThreadsRelatedToChannelId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "moderationStatus": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "searchTerms": {
            "type": "string"
          },
          "textFormat": {
            "type": "string"
          },
          "videoId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-video-comment-threads",
          "description": "Retrieves the top-level comment threads for a specific video.",
          "operationId": "youtube.commentThreads.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "allThreadsRelatedToChannelId",
              "in": "query",
              "value": "$inputs.allThreadsRelatedToChannelId"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "moderationStatus",
              "in": "query",
              "value": "$inputs.moderationStatus"
            },
            {
              "name": "order",
              "in": "query",
              "value": "$inputs.order"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "searchTerms",
              "in": "query",
              "value": "$inputs.searchTerms"
            },
            {
              "name": "textFormat",
              "in": "query",
              "value": "$inputs.textFormat"
            },
            {
              "name": "videoId",
              "in": "query",
              "value": "$inputs.videoId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "commentThreadList": "$response.body"
          }
        },
        {
          "stepId": "post-top-level-comment",
          "description": "Creates a new top-level comment thread on a video or channel.",
          "operationId": "youtube.commentThreads.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "newCommentThreadDetails": "$response.body"
          }
        },
        {
          "stepId": "reply-to-comment",
          "description": "Posts a reply to an existing comment (top-level or reply).",
          "operationId": "youtube.comments.insert",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "replyCommentDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "commentThreadList": "$steps.get-video-comment-threads.outputs.commentThreadList",
        "newCommentThreadDetails": "$steps.post-top-level-comment.outputs.newCommentThreadDetails",
        "replyCommentDetails": "$steps.reply-to-comment.outputs.replyCommentDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-content-and-get-details",
      "summary": "Searches for channels based on a query, then retrieves detailed information about the first channel found.",
      "description": "Searches for channels based on a query, then retrieves detailed information about the first channel found.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "channelType": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "forContentOwner": {
            "type": "string"
          },
          "forDeveloper": {
            "type": "string"
          },
          "forMine": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locationRadius": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "publishedAfter": {
            "type": "string"
          },
          "publishedBefore": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "regionCode": {
            "type": "string"
          },
          "relevanceLanguage": {
            "type": "string"
          },
          "safeSearch": {
            "type": "string"
          },
          "topicId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "videoCaption": {
            "type": "string"
          },
          "videoCategoryId": {
            "type": "string"
          },
          "videoDefinition": {
            "type": "string"
          },
          "videoDimension": {
            "type": "string"
          },
          "videoDuration": {
            "type": "string"
          },
          "videoEmbeddable": {
            "type": "string"
          },
          "videoLicense": {
            "type": "string"
          },
          "videoPaidProductPlacement": {
            "type": "string"
          },
          "videoSyndicated": {
            "type": "string"
          },
          "videoType": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "forHandle": {
            "type": "string"
          },
          "forUsername": {
            "type": "string"
          },
          "hl": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "managedByMe": {
            "type": "string"
          },
          "mine": {
            "type": "string"
          },
          "mySubscribers": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-for-channels",
          "description": "Performs a search specifically for channels matching the query.",
          "operationId": "youtube.search.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "channelId",
              "in": "query",
              "value": "$inputs.channelId"
            },
            {
              "name": "channelType",
              "in": "query",
              "value": "$inputs.channelType"
            },
            {
              "name": "eventType",
              "in": "query",
              "value": "$inputs.eventType"
            },
            {
              "name": "forContentOwner",
              "in": "query",
              "value": "$inputs.forContentOwner"
            },
            {
              "name": "forDeveloper",
              "in": "query",
              "value": "$inputs.forDeveloper"
            },
            {
              "name": "forMine",
              "in": "query",
              "value": "$inputs.forMine"
            },
            {
              "name": "location",
              "in": "query",
              "value": "$inputs.location"
            },
            {
              "name": "locationRadius",
              "in": "query",
              "value": "$inputs.locationRadius"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "order",
              "in": "query",
              "value": "$inputs.order"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "publishedAfter",
              "in": "query",
              "value": "$inputs.publishedAfter"
            },
            {
              "name": "publishedBefore",
              "in": "query",
              "value": "$inputs.publishedBefore"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            },
            {
              "name": "regionCode",
              "in": "query",
              "value": "$inputs.regionCode"
            },
            {
              "name": "relevanceLanguage",
              "in": "query",
              "value": "$inputs.relevanceLanguage"
            },
            {
              "name": "safeSearch",
              "in": "query",
              "value": "$inputs.safeSearch"
            },
            {
              "name": "topicId",
              "in": "query",
              "value": "$inputs.topicId"
            },
            {
              "name": "type",
              "in": "query",
              "value": "$inputs.type"
            },
            {
              "name": "videoCaption",
              "in": "query",
              "value": "$inputs.videoCaption"
            },
            {
              "name": "videoCategoryId",
              "in": "query",
              "value": "$inputs.videoCategoryId"
            },
            {
              "name": "videoDefinition",
              "in": "query",
              "value": "$inputs.videoDefinition"
            },
            {
              "name": "videoDimension",
              "in": "query",
              "value": "$inputs.videoDimension"
            },
            {
              "name": "videoDuration",
              "in": "query",
              "value": "$inputs.videoDuration"
            },
            {
              "name": "videoEmbeddable",
              "in": "query",
              "value": "$inputs.videoEmbeddable"
            },
            {
              "name": "videoLicense",
              "in": "query",
              "value": "$inputs.videoLicense"
            },
            {
              "name": "videoPaidProductPlacement",
              "in": "query",
              "value": "$inputs.videoPaidProductPlacement"
            },
            {
              "name": "videoSyndicated",
              "in": "query",
              "value": "$inputs.videoSyndicated"
            },
            {
              "name": "videoType",
              "in": "query",
              "value": "$inputs.videoType"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "channelSearchResults": "$response.body"
          }
        },
        {
          "stepId": "get-channel-details",
          "description": "Retrieves detailed information (snippet, statistics, status) about a specific channel found in the search.",
          "operationId": "youtube.channels.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "categoryId",
              "in": "query",
              "value": "$inputs.categoryId"
            },
            {
              "name": "forHandle",
              "in": "query",
              "value": "$inputs.forHandle"
            },
            {
              "name": "forUsername",
              "in": "query",
              "value": "$inputs.forUsername"
            },
            {
              "name": "hl",
              "in": "query",
              "value": "$inputs.hl"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.search-for-channels.outputs.channelSearchResults.items[0].id.channelId"
            },
            {
              "name": "managedByMe",
              "in": "query",
              "value": "$inputs.managedByMe"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "mine",
              "in": "query",
              "value": "$inputs.mine"
            },
            {
              "name": "mySubscribers",
              "in": "query",
              "value": "$inputs.mySubscribers"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "channelDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "channelSearchResults": "$steps.search-for-channels.outputs.channelSearchResults",
        "channelDetails": "$steps.get-channel-details.outputs.channelDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "report-abusive-video",
      "summary": "Retrieves the valid reasons for reporting abuse and then submits a report for a specific video.",
      "description": "Retrieves the valid reasons for reporting abuse and then submits a report for a specific video.",
      "inputs": {
        "type": "object",
        "properties": {
          "uploadType": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "part": {
            "type": "string"
          },
          "hl": {
            "type": "string"
          },
          "onBehalfOfContentOwner": {
            "type": "string"
          },
          "report-video-abuse_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-abuse-reasons",
          "description": "Fetches the list of valid reasons for reporting video abuse.",
          "operationId": "youtube.videoAbuseReportReasons.list",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "part",
              "in": "query",
              "value": "$inputs.part"
            },
            {
              "name": "hl",
              "in": "query",
              "value": "$inputs.hl"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "abuseReasonList": "$response.body"
          }
        },
        {
          "stepId": "report-video-abuse",
          "description": "Submits an abuse report for a specific video using a reason ID.",
          "operationId": "youtube.videos.reportAbuse",
          "parameters": [
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "onBehalfOfContentOwner",
              "in": "query",
              "value": "$inputs.onBehalfOfContentOwner"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.report-video-abuse_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "abuse_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "abuseReasonList": "$steps.get-abuse-reasons.outputs.abuseReasonList",
        "abuse_data": "$steps.report-video-abuse.outputs.abuse_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}