{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_studio_v2/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "trigger-and-monitor-flow-execution",
      "summary": "Initiates a new execution of a specified Twilio Studio Flow for a contact and then retrieves its current status and context, enabling real-time monitoring and interaction.",
      "description": "Initiates a new execution of a specified Twilio Studio Flow for a contact and then retrieves its current status and context, enabling real-time monitoring and interaction.",
      "inputs": {
        "type": "object",
        "properties": {
          "FlowSid": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "ExecutionSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "trigger-execution",
          "description": "Triggers a new execution of a Twilio Studio Flow for a given 'To' and 'From' number, optionally passing custom parameters.",
          "operationId": "CreateExecution",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "To": "$inputs.To",
              "From": "$inputs.From"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "status": "$response.body#/status",
            "flow_sid": "$response.body#/flow_sid",
            "contact_channel_address": "$response.body#/contact_channel_address"
          }
        },
        {
          "stepId": "fetch-execution-status",
          "description": "Retrieves the current status and high-level details of a specific flow execution.",
          "operationId": "FetchExecution",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "status": "$response.body#/status",
            "context": "$response.body#/context",
            "date_created": "$response.body#/date_created",
            "date_updated": "$response.body#/date_updated"
          }
        },
        {
          "stepId": "fetch-execution-context",
          "description": "Fetches the complete context (variables and state) of a running or completed flow execution.",
          "operationId": "FetchExecutionContext",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "ExecutionSid",
              "in": "path",
              "value": "$inputs.ExecutionSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "context": "$response.body#/context"
          }
        }
      ],
      "outputs": {
        "sid": "$steps.fetch-execution-status.outputs.sid",
        "status": "$steps.fetch-execution-status.outputs.status",
        "flow_sid": "$steps.trigger-execution.outputs.flow_sid",
        "contact_channel_address": "$steps.trigger-execution.outputs.contact_channel_address",
        "context": "$steps.fetch-execution-context.outputs.context",
        "date_created": "$steps.fetch-execution-status.outputs.date_created",
        "date_updated": "$steps.fetch-execution-status.outputs.date_updated"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-detailed-flow-execution-history",
      "summary": "Provides a comprehensive view of past executions for a specific Twilio Studio Flow, including individual steps and their contexts, valuable for debugging, auditing, and analytics.",
      "description": "Provides a comprehensive view of past executions for a specific Twilio Studio Flow, including individual steps and their contexts, valuable for debugging, auditing, and analytics.",
      "inputs": {
        "type": "object",
        "properties": {
          "FlowSid": {
            "type": "string"
          },
          "DateCreatedFrom": {
            "type": "string"
          },
          "DateCreatedTo": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          },
          "ExecutionSid": {
            "type": "string"
          },
          "StepSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-flow-executions",
          "description": "Retrieves a list of all executions for a specified Twilio Studio Flow, allowing filtering by date.",
          "operationId": "ListExecution",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "DateCreatedFrom",
              "in": "query",
              "value": "$inputs.DateCreatedFrom"
            },
            {
              "name": "DateCreatedTo",
              "in": "query",
              "value": "$inputs.DateCreatedTo"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "executions": "$response.body#/executions"
          }
        },
        {
          "stepId": "fetch-specific-execution-details",
          "description": "Fetches detailed information about a particular flow execution, including its overall status and context.",
          "operationId": "FetchExecution",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "status": "$response.body#/status",
            "context": "$response.body#/context",
            "date_created": "$response.body#/date_created",
            "date_updated": "$response.body#/date_updated"
          }
        },
        {
          "stepId": "list-execution-steps",
          "description": "Lists all the individual steps (widgets) traversed during a specific flow execution.",
          "operationId": "ListExecutionStep",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "ExecutionSid",
              "in": "path",
              "value": "$inputs.ExecutionSid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "steps": "$response.body#/steps"
          }
        },
        {
          "stepId": "fetch-execution-step-context",
          "description": "Retrieves the context (variables and state) at a specific step within a flow execution, useful for pinpointing issues.",
          "operationId": "FetchExecutionStepContext",
          "parameters": [
            {
              "name": "FlowSid",
              "in": "path",
              "value": "$inputs.FlowSid"
            },
            {
              "name": "ExecutionSid",
              "in": "path",
              "value": "$inputs.ExecutionSid"
            },
            {
              "name": "StepSid",
              "in": "path",
              "value": "$inputs.StepSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "context": "$response.body#/context"
          }
        }
      ],
      "outputs": {
        "executions": "$steps.list-flow-executions.outputs.executions",
        "sid": "$steps.fetch-specific-execution-details.outputs.sid",
        "status": "$steps.fetch-specific-execution-details.outputs.status",
        "context": "$steps.fetch-execution-step-context.outputs.context",
        "date_created": "$steps.fetch-specific-execution-details.outputs.date_created",
        "date_updated": "$steps.fetch-specific-execution-details.outputs.date_updated",
        "steps": "$steps.list-execution-steps.outputs.steps"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-publish-studio-flow",
      "summary": "Allows a user to programmatically define, validate, and deploy a new Twilio Studio Flow. This workflow is crucial for automating flow creation and integrating with CI/CD pipelines.",
      "description": "Allows a user to programmatically define, validate, and deploy a new Twilio Studio Flow. This workflow is crucial for automating flow creation and integrating with CI/CD pipelines.",
      "inputs": {
        "type": "object",
        "properties": {
          "FriendlyName": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Definition": {
            "type": "string"
          },
          "Sid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "validate-flow-definition",
          "description": "Validates a new flow's JSON definition before creation to ensure it's syntactically correct and adheres to Studio's rules.",
          "operationId": "UpdateFlowValidate",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "Status": "$inputs.Status",
              "Definition": "$inputs.Definition"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "valid": "$response.body#/valid"
          }
        },
        {
          "stepId": "create-flow",
          "description": "Creates a new Twilio Studio Flow with the provided definition and initial status (e.g., 'draft' or 'published').",
          "operationId": "CreateFlow",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "FriendlyName": "$inputs.FriendlyName",
              "Status": "$inputs.Status",
              "Definition": "$inputs.Definition"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "friendly_name": "$response.body#/friendly_name",
            "status": "$response.body#/status",
            "definition": "$response.body#/definition"
          }
        },
        {
          "stepId": "publish-flow",
          "description": "Updates the status of a newly created or existing flow to 'published', making it active and ready for use.",
          "operationId": "UpdateFlow",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "Status": "$inputs.Status"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "status": "$response.body#/status",
            "friendly_name": "$response.body#/friendly_name",
            "definition": "$response.body#/definition"
          }
        }
      ],
      "outputs": {
        "valid": "$steps.validate-flow-definition.outputs.valid",
        "sid": "$steps.publish-flow.outputs.sid",
        "friendly_name": "$steps.publish-flow.outputs.friendly_name",
        "status": "$steps.publish-flow.outputs.status",
        "definition": "$steps.publish-flow.outputs.definition"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-flow-revisions-and-rollback",
      "summary": "Enables users to inspect the version history of a Twilio Studio Flow, retrieve the definition of any past revision, and potentially revert the flow to a previous stable state.",
      "description": "Enables users to inspect the version history of a Twilio Studio Flow, retrieve the definition of any past revision, and potentially revert the flow to a previous stable state.",
      "inputs": {
        "type": "object",
        "properties": {
          "Sid": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-flow-revisions",
          "description": "Retrieves a list of all historical revisions for a given Twilio Studio Flow, showing commit messages and creation dates.",
          "operationId": "ListFlowRevision",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "revisions": "$response.body#/revisions"
          }
        },
        {
          "stepId": "fetch-specific-flow-revision",
          "description": "Fetches the complete JSON definition and metadata for a specific revision of a flow.",
          "operationId": "FetchFlowRevision",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            },
            {
              "name": "Revision",
              "in": "path",
              "value": "$inputs.Revision"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definition": "$response.body#/definition",
            "friendly_name": "$response.body#/friendly_name",
            "status": "$response.body#/status",
            "revision": "$response.body#/revision",
            "commit_message": "$response.body#/commit_message"
          }
        },
        {
          "stepId": "revert-flow-to-revision",
          "description": "Updates the current flow to use the definition from a previously fetched revision, effectively performing a rollback.",
          "operationId": "UpdateFlow",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "Status": "$inputs.Status"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sid": "$response.body#/sid",
            "revision": "$response.body#/revision",
            "date_updated": "$response.body#/date_updated",
            "friendly_name": "$response.body#/friendly_name",
            "status": "$response.body#/status",
            "definition": "$response.body#/definition"
          }
        }
      ],
      "outputs": {
        "revisions": "$steps.list-flow-revisions.outputs.revisions",
        "definition": "$steps.revert-flow-to-revision.outputs.definition",
        "friendly_name": "$steps.revert-flow-to-revision.outputs.friendly_name",
        "status": "$steps.revert-flow-to-revision.outputs.status",
        "revision": "$steps.revert-flow-to-revision.outputs.revision",
        "commit_message": "$steps.fetch-specific-flow-revision.outputs.commit_message",
        "sid": "$steps.revert-flow-to-revision.outputs.sid",
        "date_updated": "$steps.revert-flow-to-revision.outputs.date_updated"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-flow-test-users",
      "summary": "Allows an administrator to retrieve the current list of test users for a Twilio Studio Flow and then update that list, enabling specific users to test draft versions of the flow.",
      "description": "Allows an administrator to retrieve the current list of test users for a Twilio Studio Flow and then update that list, enabling specific users to test draft versions of the flow.",
      "inputs": {
        "type": "object",
        "properties": {
          "Sid": {
            "type": "string"
          },
          "TestUsers": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-current-test-users",
          "description": "Retrieves the list of phone numbers or identities currently configured as test users for a specific flow.",
          "operationId": "FetchTestUser",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "test_users": "$response.body#/test_users"
          }
        },
        {
          "stepId": "update-test-users",
          "description": "Updates the list of test users for a flow, allowing new users to test draft versions or removing existing test users.",
          "operationId": "UpdateTestUser",
          "parameters": [
            {
              "name": "Sid",
              "in": "path",
              "value": "$inputs.Sid"
            }
          ],
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "payload": {
              "TestUsers": "$inputs.TestUsers"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "test_users": "$response.body#/test_users"
          }
        }
      ],
      "outputs": {
        "test_users": "$steps.update-test-users.outputs.test_users"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}