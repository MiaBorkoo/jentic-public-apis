{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/flickr.com/main/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "oauth-user-authentication",
      "summary": "Performs the Flickr OAuth 1.0a flow to obtain an access token for making authenticated API calls on behalf of a user.",
      "description": "Performs the Flickr OAuth 1.0a flow to obtain an access token for making authenticated API calls on behalf of a user.",
      "inputs": {
        "type": "object",
        "properties": {
          "oauth_consumer_key": {
            "type": "string"
          },
          "oauth_nonce": {
            "type": "string"
          },
          "oauth_timestamp": {
            "type": "string"
          },
          "oauth_signature_method": {
            "type": "string"
          },
          "oauth_version": {
            "type": "string"
          },
          "oauth_signature": {
            "type": "string"
          },
          "oauth_callback": {
            "type": "string"
          },
          "oauth_verifier": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-request-token",
          "description": "Retrieves an OAuth Request Token and Secret. The user must then authorize this token.",
          "operationId": "getRequestToken",
          "parameters": [
            {
              "name": "oauth_consumer_key",
              "in": "query",
              "value": "$inputs.oauth_consumer_key"
            },
            {
              "name": "oauth_nonce",
              "in": "query",
              "value": "$inputs.oauth_nonce"
            },
            {
              "name": "oauth_timestamp",
              "in": "query",
              "value": "$inputs.oauth_timestamp"
            },
            {
              "name": "oauth_signature_method",
              "in": "query",
              "value": "$inputs.oauth_signature_method"
            },
            {
              "name": "oauth_version",
              "in": "query",
              "value": "$inputs.oauth_version"
            },
            {
              "name": "oauth_signature",
              "in": "query",
              "value": "$inputs.oauth_signature"
            },
            {
              "name": "oauth_callback",
              "in": "query",
              "value": "$inputs.oauth_callback"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "oauth_token": "$response.body",
            "oauth_token_secret": "$response.body"
          }
        },
        {
          "stepId": "get-access-token",
          "description": "Exchanges an authorized Request Token for an Access Token and Secret.",
          "operationId": "getAccessToken",
          "parameters": [
            {
              "name": "oauth_consumer_key",
              "in": "query",
              "value": "$inputs.oauth_consumer_key"
            },
            {
              "name": "oauth_nonce",
              "in": "query",
              "value": "$inputs.oauth_nonce"
            },
            {
              "name": "oauth_timestamp",
              "in": "query",
              "value": "$inputs.oauth_timestamp"
            },
            {
              "name": "oauth_signature_method",
              "in": "query",
              "value": "$inputs.oauth_signature_method"
            },
            {
              "name": "oauth_version",
              "in": "query",
              "value": "$inputs.oauth_version"
            },
            {
              "name": "oauth_signature",
              "in": "query",
              "value": "$inputs.oauth_signature"
            },
            {
              "name": "oauth_verifier",
              "in": "query",
              "value": "$inputs.oauth_verifier"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$steps.get-request-token.outputs.oauth_token"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "access_token": "$response.body",
            "access_token_secret": "$response.body"
          }
        }
      ],
      "outputs": {
        "oauth_token": "$steps.get-request-token.outputs.oauth_token",
        "oauth_token_secret": "$steps.get-request-token.outputs.oauth_token_secret",
        "access_token": "$steps.get-access-token.outputs.access_token",
        "access_token_secret": "$steps.get-access-token.outputs.access_token_secret"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-detailed-photo-information",
      "summary": "Retrieves comprehensive details for a specific photo, including its available sizes and EXIF metadata.",
      "description": "Retrieves comprehensive details for a specific photo, including its available sizes and EXIF metadata.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "photo_id": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-photo-info",
          "description": "Get core information about a specific photo.",
          "operationId": "getPhotoByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$inputs.photo_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photo_info_response": "$response.body"
          }
        },
        {
          "stepId": "get-photo-sizes",
          "description": "Retrieve available sizes (URLs and dimensions) for the photo.",
          "operationId": "getPhotoSizesByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.get-photo-info.outputs.photo_info_response.photo.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photo_sizes_response": "$response.body"
          }
        },
        {
          "stepId": "get-photo-exif",
          "description": "Retrieve EXIF metadata associated with the photo.",
          "operationId": "getPhotoExifByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.get-photo-info.outputs.photo_info_response.photo.id"
            },
            {
              "name": "secret",
              "in": "query",
              "value": "$steps.get-photo-info.outputs.photo_info_response.photo.secret"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "exif_data_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "photo_info_response": "$steps.get-photo-info.outputs.photo_info_response",
        "photo_sizes_response": "$steps.get-photo-sizes.outputs.photo_sizes_response",
        "exif_data_response": "$steps.get-photo-exif.outputs.exif_data_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-photos-and-get-details",
      "summary": "Searches for photos based on specified criteria (like text or tags) and then retrieves detailed information and available sizes for a selected photo from the results.",
      "description": "Searches for photos based on specified criteria (like text or tags) and then retrieves detailed information and available sizes for a selected photo from the results.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "min_upload_date": {
            "type": "string"
          },
          "max_upload_date": {
            "type": "string"
          },
          "min_taken_date": {
            "type": "string"
          },
          "max_taken_date": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "privacy_filter": {
            "type": "string"
          },
          "bbox": {
            "type": "string"
          },
          "accuracy": {
            "type": "string"
          },
          "safe_search": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "machine_tags": {
            "type": "string"
          },
          "machine_tag_mode": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "contacts": {
            "type": "string"
          },
          "woe_id": {
            "type": "string"
          },
          "place_id": {
            "type": "string"
          },
          "media": {
            "type": "string"
          },
          "has_geo": {
            "type": "string"
          },
          "geo_context": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lon": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "radius_units": {
            "type": "string"
          },
          "is_commons": {
            "type": "string"
          },
          "in_gallery": {
            "type": "string"
          },
          "is_getty": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "photo_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-photos",
          "description": "Search for photos matching various criteria like text, tags, user, dates, license, etc.",
          "operationId": "getMediaBySearch",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "text",
              "in": "query",
              "value": "$inputs.text"
            },
            {
              "name": "tags",
              "in": "query",
              "value": "$inputs.tags"
            },
            {
              "name": "user_id",
              "in": "query",
              "value": "$inputs.user_id"
            },
            {
              "name": "min_upload_date",
              "in": "query",
              "value": "$inputs.min_upload_date"
            },
            {
              "name": "max_upload_date",
              "in": "query",
              "value": "$inputs.max_upload_date"
            },
            {
              "name": "min_taken_date",
              "in": "query",
              "value": "$inputs.min_taken_date"
            },
            {
              "name": "max_taken_date",
              "in": "query",
              "value": "$inputs.max_taken_date"
            },
            {
              "name": "license",
              "in": "query",
              "value": "$inputs.license"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "privacy_filter",
              "in": "query",
              "value": "$inputs.privacy_filter"
            },
            {
              "name": "bbox",
              "in": "query",
              "value": "$inputs.bbox"
            },
            {
              "name": "accuracy",
              "in": "query",
              "value": "$inputs.accuracy"
            },
            {
              "name": "safe_search",
              "in": "query",
              "value": "$inputs.safe_search"
            },
            {
              "name": "content_type",
              "in": "query",
              "value": "$inputs.content_type"
            },
            {
              "name": "machine_tags",
              "in": "query",
              "value": "$inputs.machine_tags"
            },
            {
              "name": "machine_tag_mode",
              "in": "query",
              "value": "$inputs.machine_tag_mode"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$inputs.group_id"
            },
            {
              "name": "contacts",
              "in": "query",
              "value": "$inputs.contacts"
            },
            {
              "name": "woe_id",
              "in": "query",
              "value": "$inputs.woe_id"
            },
            {
              "name": "place_id",
              "in": "query",
              "value": "$inputs.place_id"
            },
            {
              "name": "media",
              "in": "query",
              "value": "$inputs.media"
            },
            {
              "name": "has_geo",
              "in": "query",
              "value": "$inputs.has_geo"
            },
            {
              "name": "geo_context",
              "in": "query",
              "value": "$inputs.geo_context"
            },
            {
              "name": "lat",
              "in": "query",
              "value": "$inputs.lat"
            },
            {
              "name": "lon",
              "in": "query",
              "value": "$inputs.lon"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "radius_units",
              "in": "query",
              "value": "$inputs.radius_units"
            },
            {
              "name": "is_commons",
              "in": "query",
              "value": "$inputs.is_commons"
            },
            {
              "name": "in_gallery",
              "in": "query",
              "value": "$inputs.in_gallery"
            },
            {
              "name": "is_getty",
              "in": "query",
              "value": "$inputs.is_getty"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "search_results_response": "$response.body"
          }
        },
        {
          "stepId": "get-photo-info",
          "description": "Get core information about a specific photo selected from the search results.",
          "operationId": "getPhotoByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.search-photos.outputs.search_results_response.photos[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photo_info_response": "$response.body"
          }
        },
        {
          "stepId": "get-photo-sizes",
          "description": "Retrieve available sizes (URLs and dimensions) for the selected photo.",
          "operationId": "getPhotoSizesByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.get-photo-info.outputs.photo_info_response.photo.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photo_sizes_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "search_results_response": "$steps.search-photos.outputs.search_results_response",
        "photo_info_response": "$steps.get-photo-info.outputs.photo_info_response",
        "photo_sizes_response": "$steps.get-photo-sizes.outputs.photo_sizes_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "view-users-public-photos",
      "summary": "Retrieves basic information about a user and then fetches a list of their publicly visible photos.",
      "description": "Retrieves basic information about a user and then fetches a list of their publicly visible photos.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "safe_search": {
            "type": "string"
          },
          "min_upload_date": {
            "type": "string"
          },
          "max_upload_date": {
            "type": "string"
          },
          "min_taken_date": {
            "type": "string"
          },
          "max_taken_date": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "privacy_filter": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-user-info",
          "description": "Get public profile information for a specified user.",
          "operationId": "getPersonByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "user_id",
              "in": "query",
              "value": "$inputs.user_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "person_object": "$response.body"
          }
        },
        {
          "stepId": "get-user-photos",
          "description": "Retrieve a list of public photos belonging to the specified user.",
          "operationId": "getMediaByPersonID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "user_id",
              "in": "query",
              "value": "$steps.get-user-info.outputs.person_object.person.nsid"
            },
            {
              "name": "safe_search",
              "in": "query",
              "value": "$inputs.safe_search"
            },
            {
              "name": "min_upload_date",
              "in": "query",
              "value": "$inputs.min_upload_date"
            },
            {
              "name": "max_upload_date",
              "in": "query",
              "value": "$inputs.max_upload_date"
            },
            {
              "name": "min_taken_date",
              "in": "query",
              "value": "$inputs.min_taken_date"
            },
            {
              "name": "max_taken_date",
              "in": "query",
              "value": "$inputs.max_taken_date"
            },
            {
              "name": "content_type",
              "in": "query",
              "value": "$inputs.content_type"
            },
            {
              "name": "privacy_filter",
              "in": "query",
              "value": "$inputs.privacy_filter"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photos_list_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "person_object": "$steps.get-user-info.outputs.person_object",
        "photos_list_response": "$steps.get-user-photos.outputs.photos_list_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-users-albums-photosets",
      "summary": "Lists the albums (photosets) belonging to a user and then retrieves the photos within a selected album.",
      "description": "Lists the albums (photosets) belonging to a user and then retrieves the photos within a selected album.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "photoset_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-user-albums",
          "description": "Retrieve the list of albums (photosets) for a given user.",
          "operationId": "getAlbumsByPersonID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "user_id",
              "in": "query",
              "value": "$inputs.user_id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "albums_list_response": "$response.body"
          }
        },
        {
          "stepId": "get-album-photos",
          "description": "Retrieve the list of photos contained within a specific album (photoset).",
          "operationId": "getAlbumByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photoset_id",
              "in": "query",
              "value": "$steps.get-user-albums.outputs.albums_list_response.photosets[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "album_photos_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "albums_list_response": "$steps.get-user-albums.outputs.albums_list_response",
        "album_photos_response": "$steps.get-album-photos.outputs.album_photos_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "browse-group-photo-pool",
      "summary": "Retrieves information about a group and then lists the photos shared in that group's photo pool, followed by getting details of a specific photo.",
      "description": "Retrieves information about a group and then lists the photos shared in that group's photo pool, followed by getting details of a specific photo.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "group_path_alias": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "photo_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-group-info",
          "description": "Get information about a specific group.",
          "operationId": "getGroupByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$inputs.group_id"
            },
            {
              "name": "group_path_alias",
              "in": "query",
              "value": "$inputs.group_path_alias"
            },
            {
              "name": "lang",
              "in": "query",
              "value": "$inputs.lang"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "group_info_response": "$response.body"
          }
        },
        {
          "stepId": "get-group-pool-photos",
          "description": "Retrieve a list of photos from the specified group's pool.",
          "operationId": "getGroupPhotosByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$steps.get-group-info.outputs.group_info_response.group.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "group_photos_response": "$response.body"
          }
        },
        {
          "stepId": "get-photo-info",
          "description": "Get core information about a specific photo selected from the group pool.",
          "operationId": "getPhotoByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.get-group-pool-photos.outputs.group_photos_response.photos[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "photo_info_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "group_info_response": "$steps.get-group-info.outputs.group_info_response",
        "group_photos_response": "$steps.get-group-pool-photos.outputs.group_photos_response",
        "photo_info_response": "$steps.get-photo-info.outputs.photo_info_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-group-topics",
      "summary": "Retrieves information about a Flickr group, lists its discussion topics, and then gets detailed information about a specific topic.",
      "description": "Retrieves information about a Flickr group, lists its discussion topics, and then gets detailed information about a specific topic.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "group_path_alias": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "topic_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-group-info",
          "description": "Get information about a specific group.",
          "operationId": "getGroupByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$inputs.group_id"
            },
            {
              "name": "group_path_alias",
              "in": "query",
              "value": "$inputs.group_path_alias"
            },
            {
              "name": "lang",
              "in": "query",
              "value": "$inputs.lang"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "group_info_response": "$response.body"
          }
        },
        {
          "stepId": "get-group-topics",
          "description": "Retrieve a list of discussion topics within the specified group.",
          "operationId": "getGroupDiscussionsByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$steps.get-group-info.outputs.group_info_response.group.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "topics_list_response": "$response.body"
          }
        },
        {
          "stepId": "get-topic-info",
          "description": "Get detailed information about a specific discussion topic.",
          "operationId": "getGroupTopicByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "group_id",
              "in": "query",
              "value": "$steps.get-group-info.outputs.group_info_response.group.id"
            },
            {
              "name": "topic_id",
              "in": "query",
              "value": "$steps.get-group-topics.outputs.topics_list_response.topics[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "topic_info_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "group_info_response": "$steps.get-group-info.outputs.group_info_response",
        "topics_list_response": "$steps.get-group-topics.outputs.topics_list_response",
        "topic_info_response": "$steps.get-topic-info.outputs.topic_info_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "navigate-photos-in-photostream-context",
      "summary": "Given a photo within a user's photostream, find the next photo in sequence and retrieve its details.",
      "description": "Given a photo within a user's photostream, find the next photo in sequence and retrieve its details.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "photo_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-photo-context",
          "description": "Get the next and previous photo context for a given photo within its photostream.",
          "operationId": "getPhotostreamContextByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$inputs.photo_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "context_info_response": "$response.body"
          }
        },
        {
          "stepId": "get-next-photo-info",
          "description": "Retrieve details for the next photo identified in the context.",
          "operationId": "getPhotoByID",
          "parameters": [
            {
              "name": "api_key",
              "in": "query",
              "value": "$inputs.api_key"
            },
            {
              "name": "photo_id",
              "in": "query",
              "value": "$steps.get-photo-context.outputs.context_info_response.nextphoto.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "next_photo_info_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "context_info_response": "$steps.get-photo-context.outputs.context_info_response",
        "next_photo_info_response": "$steps.get-next-photo-info.outputs.next_photo_info_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}