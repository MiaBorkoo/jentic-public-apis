{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/onsched.com/setup/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "setting-up-a-new-service-offering",
      "summary": "This workflow enables a business to define and configure a new service, specifying its duration, type (appointment or event), and how its availability is managed, making it ready for booking.",
      "description": "This workflow enables a business to define and configure a new service, specifying its duration, type (appointment or event), and how its availability is managed, making it ready for booking.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "bookingLimit": {
            "type": "string"
          },
          "bookingInterval": {
            "type": "string"
          },
          "maxCapacity": {
            "type": "string"
          },
          "maxGroupSize": {
            "type": "string"
          },
          "serviceGroupId": {
            "type": "string"
          },
          "public": {
            "type": "string"
          },
          "mediaPageUrl": {
            "type": "string"
          },
          "availability": {
            "type": "string"
          },
          "settings": {
            "type": "string"
          },
          "options": {
            "type": "string"
          },
          "fees": {
            "type": "string"
          },
          "customFields": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "repeats": {
            "type": "string"
          },
          "repeat": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-service",
          "description": "Creates a new service with its name, duration, and type. It can be associated with a specific location or made available company-wide.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1services/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$inputs.locationId",
              "name": "$inputs.name",
              "description": "$inputs.description",
              "type": "$inputs.type",
              "duration": "$inputs.duration",
              "bookingLimit": "$inputs.bookingLimit",
              "bookingInterval": "$inputs.bookingInterval",
              "maxCapacity": "$inputs.maxCapacity",
              "maxGroupSize": "$inputs.maxGroupSize",
              "serviceGroupId": "$inputs.serviceGroupId",
              "public": "$inputs.public",
              "mediaPageUrl": "$inputs.mediaPageUrl",
              "availability": "$inputs.availability",
              "settings": "$inputs.settings",
              "options": "$inputs.options",
              "fees": "$inputs.fees",
              "customFields": "$inputs.customFields"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "type": "$response.body#/type"
          }
        },
        {
          "stepId": "update-service-weekly-availability",
          "description": "Updates the recurring weekly availability for an 'Appointment' type service, defining when it can be booked throughout the week.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1services~1{id}~1availability/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-service.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-service.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ServiceAvailabilityViewModel": "$response.body#/ServiceAvailabilityViewModel"
          }
        },
        {
          "stepId": "create-service-allocation",
          "description": "Creates specific time allocations for an 'Event' type service, defining its availability on particular dates and times, which can also repeat.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1services~1{id}~1allocations/post",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-service.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-service.outputs.id",
              "locationId": "$inputs.locationId",
              "resourceId": "$inputs.resourceId",
              "startDate": "$inputs.startDate",
              "endDate": "$inputs.endDate",
              "startTime": "$inputs.startTime",
              "endTime": "$inputs.endTime",
              "reason": "$inputs.reason",
              "bookingLimit": "$inputs.bookingLimit",
              "repeats": "$inputs.repeats",
              "repeat": "$inputs.repeat"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ServiceAllocationViewModel": "$response.body#/ServiceAllocationViewModel"
          }
        },
        {
          "stepId": "link-service-to-calendar",
          "description": "Links the newly created service to a specific calendar, which helps manage its schedule and resource assignments.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1services~1calendar/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "serviceId": "$steps.create-service.outputs.id",
              "locationId": "$inputs.locationId",
              "calendarId": "$inputs.calendarId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ServiceCalendarViewModel": "$response.body#/ServiceCalendarViewModel"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-service.outputs.id",
        "name": "$steps.create-service.outputs.name",
        "type": "$steps.create-service.outputs.type",
        "ServiceAvailabilityViewModel": "$steps.update-service-weekly-availability.outputs.ServiceAvailabilityViewModel",
        "ServiceAllocationViewModel": "$steps.create-service-allocation.outputs.ServiceAllocationViewModel",
        "ServiceCalendarViewModel": "$steps.link-service-to-calendar.outputs.ServiceCalendarViewModel"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "onboarding-a-new-bookable-resource",
      "summary": "This workflow guides the process of adding a new staff member or bookable asset (resource) to the system, configuring their personal details, availability, and integrating their external calendars.",
      "description": "This workflow guides the process of adding a new staff member or bookable asset (resource) to the system, configuring their personal details, availability, and integrating their external calendars.",
      "inputs": {
        "type": "object",
        "properties": {
          "googleAuthReturnUrl": {
            "type": "string"
          },
          "outlookAuthReturnUrl": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "timezoneId": {
            "type": "string"
          },
          "recurringAvailability": {
            "type": "string"
          },
          "serviceIds": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "options": {
            "type": "string"
          },
          "customFields": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "repeats": {
            "type": "string"
          },
          "repeat": {
            "type": "string"
          },
          "googleEmailAddress": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-resource",
          "description": "Creates a new bookable resource with their name, email, and initial settings, including whether they use recurring availability or specific allocations.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources/post",
          "parameters": [
            {
              "name": "googleAuthReturnUrl",
              "in": "query",
              "value": "$inputs.googleAuthReturnUrl"
            },
            {
              "name": "outlookAuthReturnUrl",
              "in": "query",
              "value": "$inputs.outlookAuthReturnUrl"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$inputs.locationId",
              "name": "$inputs.name",
              "email": "$inputs.email",
              "description": "$inputs.description",
              "groupId": "$inputs.groupId",
              "timezoneId": "$inputs.timezoneId",
              "recurringAvailability": "$inputs.recurringAvailability",
              "serviceIds": "$inputs.serviceIds",
              "address": "$inputs.address",
              "contact": "$inputs.contact",
              "options": "$inputs.options",
              "customFields": "$inputs.customFields"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "email": "$response.body#/email",
            "name": "$response.body#/name",
            "recurringAvailability": "$response.body#/recurringAvailability"
          }
        },
        {
          "stepId": "update-resource-weekly-availability",
          "description": "Sets or updates the recurring weekly availability for the resource, defining their standard working hours.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1availability/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-resource.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-resource.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceAvailabilityViewModel": "$response.body#/ResourceAvailabilityViewModel"
          }
        },
        {
          "stepId": "create-resource-allocation",
          "description": "Creates specific time allocations for the resource, useful for non-recurring or irregular schedules.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1allocations/post",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-resource.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-resource.outputs.id",
              "startDate": "$inputs.startDate",
              "endDate": "$inputs.endDate",
              "startTime": "$inputs.startTime",
              "endTime": "$inputs.endTime",
              "reason": "$inputs.reason",
              "repeats": "$inputs.repeats",
              "repeat": "$inputs.repeat"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceBlockViewModel": "$response.body#/ResourceBlockViewModel"
          }
        },
        {
          "stepId": "authorize-google-calendar-access",
          "description": "Generates a Google Calendar authorization URL for the resource, allowing their external calendar to sync with OnSched for availability management.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1calendar~1auth~1google~1{googleEmailAddress}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-resource.outputs.id"
            },
            {
              "name": "googleEmailAddress",
              "in": "path",
              "value": "$inputs.googleEmailAddress"
            },
            {
              "name": "googleAuthReturnUrl",
              "in": "query",
              "value": "$inputs.googleAuthReturnUrl"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "calendarAuthUrl": "$response.body#/calendarAuthUrl"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-resource.outputs.id",
        "email": "$steps.create-resource.outputs.email",
        "name": "$steps.create-resource.outputs.name",
        "recurringAvailability": "$steps.create-resource.outputs.recurringAvailability",
        "ResourceAvailabilityViewModel": "$steps.update-resource-weekly-availability.outputs.ResourceAvailabilityViewModel",
        "ResourceBlockViewModel": "$steps.create-resource-allocation.outputs.ResourceBlockViewModel",
        "calendarAuthUrl": "$steps.authorize-google-calendar-access.outputs.calendarAuthUrl"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "onboarding-a-new-business-location",
      "summary": "This workflow allows an API consumer to set up a new business location, including its basic details, operational hours, and initial online booking settings. It's crucial for expanding a business's physical or virtual presence within OnSched.",
      "description": "This workflow allows an API consumer to set up a new business location, including its basic details, operational hours, and initial online booking settings. It's crucial for expanding a business's physical or virtual presence within OnSched.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "adminEmail": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "friendlyId": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "businessHours": {
            "type": "string"
          },
          "settings": {
            "type": "string"
          },
          "defaults": {
            "type": "string"
          },
          "appointmentReminders": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "settingsScope": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-location",
          "description": "Creates a new business location with essential details like name, admin email, timezone, and business hours. This is the foundational step for adding a new branch or service point.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1locations/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "name": "$inputs.name",
              "adminEmail": "$inputs.adminEmail",
              "timezoneName": "$inputs.timezoneName",
              "friendlyId": "$inputs.friendlyId",
              "phone": "$inputs.phone",
              "fax": "$inputs.fax",
              "website": "$inputs.website",
              "email": "$inputs.email",
              "regionId": "$inputs.regionId",
              "address": "$inputs.address",
              "businessHours": "$inputs.businessHours",
              "settings": "$inputs.settings",
              "defaults": "$inputs.defaults",
              "appointmentReminders": "$inputs.appointmentReminders"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "adminEmail": "$response.body#/adminEmail",
            "timezoneName": "$response.body#/timezoneIana"
          }
        },
        {
          "stepId": "update-location-settings-scope",
          "description": "Updates the online booking settings scope for the newly created location, allowing it to inherit company-level settings or define its own specific settings.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1locations~1{id}~1settings~1scope~1{settingsScope}/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-location.outputs.id"
            },
            {
              "name": "settingsScope",
              "in": "path",
              "value": "$inputs.settingsScope"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "LocationViewModel": "$response.body#/LocationViewModel"
          }
        },
        {
          "stepId": "update-location-appointment-reminders",
          "description": "Configures email and SMS appointment reminder settings for the new location, ensuring customers receive timely notifications.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1locations~1{id}~1appointmentreminders/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-location.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.create-location.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "LocationViewModel": "$response.body#/LocationViewModel"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-location.outputs.id",
        "name": "$steps.create-location.outputs.name",
        "adminEmail": "$steps.create-location.outputs.adminEmail",
        "timezoneName": "$steps.create-location.outputs.timezoneName",
        "LocationViewModel": "$steps.update-location-appointment-reminders.outputs.LocationViewModel"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "managing-business-users-and-roles",
      "summary": "This workflow enables administrators to create new business user accounts, assign specific roles, and review their associated permissions and company affiliations within the OnSched system.",
      "description": "This workflow enables administrators to create new business user accounts, assign specific roles, and review their associated permissions and company affiliations within the OnSched system.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "sendRegistrationInvite": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "searchText": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-business-user",
          "description": "Creates a new business user account, assigning them a name, email, and a specific role (e.g., bizowner, bizadmin, bizresource).",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1businessusers/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "locationId": "$inputs.locationId",
              "name": "$inputs.name",
              "email": "$inputs.email",
              "resourceId": "$inputs.resourceId",
              "role": "$inputs.role",
              "sendRegistrationInvite": "$inputs.sendRegistrationInvite"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "email": "$response.body#/email",
            "role": "$response.body#/role"
          }
        },
        {
          "stepId": "get-business-user-details",
          "description": "Retrieves the detailed profile and assigned permissions for a specific business user.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1businessusers~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-business-user.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "BusinessUserViewModel": "$response.body#/BusinessUserViewModel"
          }
        },
        {
          "stepId": "list-user-permissions-by-role",
          "description": "Lists all available permissions associated with a specific business role, useful for understanding access levels.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1businessusers~1permissions/get",
          "parameters": [
            {
              "name": "role",
              "in": "query",
              "value": "$steps.create-business-user.outputs.role"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "BusinessPermissionListViewModel": "$response.body#/BusinessPermissionListViewModel"
          }
        },
        {
          "stepId": "list-user-companies",
          "description": "Retrieves a list of companies that a specific business user is associated with.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1businessusers~1{email}~1companies/get",
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "value": "$steps.create-business-user.outputs.email"
            },
            {
              "name": "searchText",
              "in": "query",
              "value": "$inputs.searchText"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "AuthorizedCompanyListViewModel": "$response.body#/AuthorizedCompanyListViewModel"
          }
        }
      ],
      "outputs": {
        "id": "$steps.create-business-user.outputs.id",
        "email": "$steps.create-business-user.outputs.email",
        "role": "$steps.create-business-user.outputs.role",
        "BusinessUserViewModel": "$steps.get-business-user-details.outputs.BusinessUserViewModel",
        "BusinessPermissionListViewModel": "$steps.list-user-permissions-by-role.outputs.BusinessPermissionListViewModel",
        "AuthorizedCompanyListViewModel": "$steps.list-user-companies.outputs.AuthorizedCompanyListViewModel"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "reassigning-all-future-appointments-for-a-resource",
      "summary": "This workflow allows an administrator to efficiently transfer all upcoming appointments from one resource (e.g., a departing staff member) to another available resource, ensuring continuity of service.",
      "description": "This workflow allows an administrator to efficiently transfer all upcoming appointments from one resource (e.g., a departing staff member) to another available resource, ensuring continuity of service.",
      "inputs": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "resourceGroupId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "googleAuthReturnUrl": {
            "type": "string"
          },
          "outlookAuthReturnUrl": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-resources",
          "description": "Retrieves a list of all available resources to identify both the original resource whose appointments need to be reassigned and the target resource to whom they will be transferred.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources/get",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "value": "$inputs.locationId"
            },
            {
              "name": "resourceGroupId",
              "in": "query",
              "value": "$inputs.resourceGroupId"
            },
            {
              "name": "email",
              "in": "query",
              "value": "$inputs.email"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "deleted",
              "in": "query",
              "value": "$inputs.deleted"
            },
            {
              "name": "googleAuthReturnUrl",
              "in": "query",
              "value": "$inputs.googleAuthReturnUrl"
            },
            {
              "name": "outlookAuthReturnUrl",
              "in": "query",
              "value": "$inputs.outlookAuthReturnUrl"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "originalResourceId": "$response.body#/originalResourceId",
            "targetResourceId": "$response.body#/targetResourceId"
          }
        },
        {
          "stepId": "reassign-all-resource-appointments",
          "description": "Reassigns all future appointments from the specified original resource to the designated target resource. Optional date range and calendar ID can be specified to narrow down the reassignment scope.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1reassign~1appointments~1{resourceId}/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-resources.outputs.originalResourceId"
            },
            {
              "name": "resourceId",
              "in": "path",
              "value": "$steps.list-resources.outputs.targetResourceId"
            },
            {
              "name": "startDate",
              "in": "query",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "query",
              "value": "$inputs.endDate"
            },
            {
              "name": "calendarId",
              "in": "query",
              "value": "$inputs.calendarId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "AppointmentViewModel[]": "$response.body#/0/AppointmentViewModel[]"
          }
        }
      ],
      "outputs": {
        "originalResourceId": "$steps.list-resources.outputs.originalResourceId",
        "targetResourceId": "$steps.list-resources.outputs.targetResourceId",
        "AppointmentViewModel[]": "$steps.reassign-all-resource-appointments.outputs.AppointmentViewModel[]"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "managing-resource-unavailability-blocks",
      "summary": "This workflow enables administrators to manage specific periods when a resource is unavailable, such as for breaks, meetings, or personal time, by creating, updating, or deleting blocks that override their regular schedule.",
      "description": "This workflow enables administrators to manage specific periods when a resource is unavailable, such as for breaks, meetings, or personal time, by creating, updating, or deleting blocks that override their regular schedule.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "googleAuthReturnUrl": {
            "type": "string"
          },
          "outlookAuthReturnUrl": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "allDay": {
            "type": "string"
          },
          "repeats": {
            "type": "string"
          },
          "repeat": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-resource-details",
          "description": "Retrieves the details of a specific resource to confirm its ID and current availability settings before managing blocks.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "googleAuthReturnUrl",
              "in": "query",
              "value": "$inputs.googleAuthReturnUrl"
            },
            {
              "name": "outlookAuthReturnUrl",
              "in": "query",
              "value": "$inputs.outlookAuthReturnUrl"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "create-resource-block",
          "description": "Creates a new block of unavailability for the resource, specifying the date range, time, and reason for the block. Blocks can be set for specific times or full days, and can be recurring.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1block/post",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-resource-details.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.get-resource-details.outputs.id",
              "startDate": "$inputs.startDate",
              "endDate": "$inputs.endDate",
              "startTime": "$inputs.startTime",
              "endTime": "$inputs.endTime",
              "reason": "$inputs.reason",
              "allDay": "$inputs.allDay",
              "repeats": "$inputs.repeats",
              "repeat": "$inputs.repeat"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceBlockViewModel": "$response.body#/ResourceBlockViewModel"
          }
        },
        {
          "stepId": "list-resource-blocks",
          "description": "Lists all current unavailability blocks for the resource, allowing administrators to review existing blocks or identify specific ones for modification or deletion.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1{id}~1blocks/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-resource-details.outputs.id"
            },
            {
              "name": "startDate",
              "in": "query",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "query",
              "value": "$inputs.endDate"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceBlockListViewModel": "$response.body#/ResourceBlockListViewModel",
            "firstBlockId": "$response.body#/firstBlockId"
          }
        },
        {
          "stepId": "update-resource-block",
          "description": "Modifies an existing resource unavailability block, allowing changes to its dates, times, reason, or recurrence pattern.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1block~1{id}/put",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-resource-blocks.outputs.firstBlockId"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.list-resource-blocks.outputs.firstBlockId",
              "startDate": "$inputs.startDate",
              "endDate": "$inputs.endDate",
              "startTime": "$inputs.startTime",
              "endTime": "$inputs.endTime",
              "reason": "$inputs.reason",
              "allDay": "$inputs.allDay",
              "repeats": "$inputs.repeats",
              "repeat": "$inputs.repeat"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceBlockViewModel": "$response.body#/ResourceBlockViewModel"
          }
        },
        {
          "stepId": "delete-resource-block",
          "description": "Permanently removes a specific unavailability block for the resource, making that time slot available again.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1resources~1block~1{id}/delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.list-resource-blocks.outputs.firstBlockId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ResourceBlockViewModel": "$response.body#/ResourceBlockViewModel"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-resource-details.outputs.id",
        "ResourceBlockViewModel": "$steps.delete-resource-block.outputs.ResourceBlockViewModel",
        "ResourceBlockListViewModel": "$steps.list-resource-blocks.outputs.ResourceBlockListViewModel",
        "firstBlockId": "$steps.list-resource-blocks.outputs.firstBlockId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "customizing-company-level-email-templates",
      "summary": "This workflow allows administrators to customize the visual appearance and content of company-wide email notifications, ensuring consistent branding and messaging for all customer communications.",
      "description": "This workflow allows administrators to customize the visual appearance and content of company-wide email notifications, ensuring consistent branding and messaging for all customer communications.",
      "inputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "friendlyId": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "update-company-master-template-settings_body": {
            "type": "object"
          },
          "templateName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "templateContent": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-primary-location-id",
          "description": "Retrieves the ID of the primary business location, which is required to create company-scoped custom email templates.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1locations/get",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "serviceId",
              "in": "query",
              "value": "$inputs.serviceId"
            },
            {
              "name": "friendlyId",
              "in": "query",
              "value": "$inputs.friendlyId"
            },
            {
              "name": "deleted",
              "in": "query",
              "value": "$inputs.deleted"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "get-company-master-template-settings",
          "description": "Retrieves the current master email template settings for the company, including color schemes and panel visibility.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1companies~1email~1templates~1master/get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "MasterEmailTemplateSettingsViewModel": "$response.body#/MasterEmailTemplateSettingsViewModel"
          }
        },
        {
          "stepId": "update-company-master-template-settings",
          "description": "Applies custom master email template settings (e.g., header/footer logos, background colors) to override the default OnSched settings.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1companies~1email~1templates~1master/post",
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": "$inputs.update-company-master-template-settings_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "MasterEmailTemplateSettingsViewModel": "$response.body#/MasterEmailTemplateSettingsViewModel"
          }
        },
        {
          "stepId": "list-company-email-templates",
          "description": "Lists all available email templates at the company level, identifying which ones have been customized.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1companies~1email~1templates/get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "EmailTemplateListViewModel": "$response.body#/EmailTemplateListViewModel"
          }
        },
        {
          "stepId": "get-company-email-template-content",
          "description": "Retrieves the HTML content of a specific email template for review or modification.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1companies~1email~1templates~1{templateName}/get",
          "parameters": [
            {
              "name": "templateName",
              "in": "path",
              "value": "$inputs.templateName"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ContentResult": "$response.body#/ContentResult"
          }
        },
        {
          "stepId": "create-custom-company-email-template",
          "description": "Uploads customized HTML content for a specific email template. When using the primary business location ID, this creates a company-scoped custom template.",
          "operationPath": "openapi_source#/paths/~1setup~1v1~1locations~1{id}~1email~1templates/post",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-primary-location-id.outputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json-patch+json",
            "payload": {
              "id": "$steps.get-primary-location-id.outputs.id",
              "templateName": "$inputs.templateName",
              "templateContent": "$inputs.templateContent"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "ContentResult": "$response.body#/ContentResult"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-primary-location-id.outputs.id",
        "MasterEmailTemplateSettingsViewModel": "$steps.update-company-master-template-settings.outputs.MasterEmailTemplateSettingsViewModel",
        "EmailTemplateListViewModel": "$steps.list-company-email-templates.outputs.EmailTemplateListViewModel",
        "ContentResult": "$steps.create-custom-company-email-template.outputs.ContentResult"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}