{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/parliament.uk/members/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "retrieve-comprehensive-member-profile",
      "summary": "Allows a user to search for a Member of Parliament or Lord and then retrieve a wide range of detailed information about them, including their biography, contact details, parliamentary activities, and official images.",
      "description": "Allows a user to search for a Member of Parliament or Lord and then retrieve a wide range of detailed information about them, including their biography, contact details, parliamentary activities, and official images.",
      "inputs": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "PostTitle": {
            "type": "string"
          },
          "PartyId": {
            "type": "string"
          },
          "House": {
            "type": "string"
          },
          "ConstituencyId": {
            "type": "string"
          },
          "NameStartsWith": {
            "type": "string"
          },
          "Gender": {
            "type": "string"
          },
          "MembershipStartedSince": {
            "type": "string"
          },
          "MembershipEnded.MembershipEndedSince": {
            "type": "string"
          },
          "MembershipEnded.MembershipEndReasonIds": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOnOrAfter": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOnOrBefore": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOfHouse": {
            "type": "string"
          },
          "IsEligible": {
            "type": "string"
          },
          "IsCurrentMember": {
            "type": "string"
          },
          "PolicyInterestId": {
            "type": "string"
          },
          "Experience": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "take": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "detailsForDate": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-members",
          "description": "Searches for current members based on various criteria like name, location, party, or house.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1Search/get",
          "parameters": [
            {
              "name": "Name",
              "in": "query",
              "value": "$inputs.Name"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "PostTitle",
              "in": "query",
              "value": "$inputs.PostTitle"
            },
            {
              "name": "PartyId",
              "in": "query",
              "value": "$inputs.PartyId"
            },
            {
              "name": "House",
              "in": "query",
              "value": "$inputs.House"
            },
            {
              "name": "ConstituencyId",
              "in": "query",
              "value": "$inputs.ConstituencyId"
            },
            {
              "name": "NameStartsWith",
              "in": "query",
              "value": "$inputs.NameStartsWith"
            },
            {
              "name": "Gender",
              "in": "query",
              "value": "$inputs.Gender"
            },
            {
              "name": "MembershipStartedSince",
              "in": "query",
              "value": "$inputs.MembershipStartedSince"
            },
            {
              "name": "MembershipEnded.MembershipEndedSince",
              "in": "query",
              "value": "$inputs.MembershipEnded.MembershipEndedSince"
            },
            {
              "name": "MembershipEnded.MembershipEndReasonIds",
              "in": "query",
              "value": "$inputs.MembershipEnded.MembershipEndReasonIds"
            },
            {
              "name": "MembershipInDateRange.WasMemberOnOrAfter",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOnOrAfter"
            },
            {
              "name": "MembershipInDateRange.WasMemberOnOrBefore",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOnOrBefore"
            },
            {
              "name": "MembershipInDateRange.WasMemberOfHouse",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOfHouse"
            },
            {
              "name": "IsEligible",
              "in": "query",
              "value": "$inputs.IsEligible"
            },
            {
              "name": "IsCurrentMember",
              "in": "query",
              "value": "$inputs.IsCurrentMember"
            },
            {
              "name": "PolicyInterestId",
              "in": "query",
              "value": "$inputs.PolicyInterestId"
            },
            {
              "name": "Experience",
              "in": "query",
              "value": "$inputs.Experience"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "take",
              "in": "query",
              "value": "$inputs.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "members_search_results": "$response.body#/members_search_results"
          }
        },
        {
          "stepId": "get-member-details",
          "description": "Retrieves the core details of a specific member using their ID.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-members.outputs.members_search_results.value.id"
            },
            {
              "name": "detailsForDate",
              "in": "query",
              "value": "$inputs.detailsForDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_details": "$response.body#/member_details"
          }
        },
        {
          "stepId": "get-member-biography",
          "description": "Retrieves the full biographical information for the member.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1Biography/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-member-details.outputs.member_details.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_biography": "$response.body#/member_biography"
          }
        },
        {
          "stepId": "get-member-contact",
          "description": "Retrieves contact information for the member.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1Contact/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-member-details.outputs.member_details.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_contact_info": "$response.body#/member_contact_info"
          }
        },
        {
          "stepId": "get-member-portrait-url",
          "description": "Retrieves the URL for the member's portrait image.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1PortraitUrl/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-member-details.outputs.member_details.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_portrait_url": "$response.body#/member_portrait_url"
          }
        }
      ],
      "outputs": {
        "members_search_results": "$steps.search-members.outputs.members_search_results",
        "member_details": "$steps.get-member-details.outputs.member_details",
        "member_biography": "$steps.get-member-biography.outputs.member_biography",
        "member_contact_info": "$steps.get-member-contact.outputs.member_contact_info",
        "member_portrait_url": "$steps.get-member-portrait-url.outputs.member_portrait_url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "constituency-profile-and-election-history",
      "summary": "Enables users to find a specific parliamentary constituency, view its details, current representation, and historical election results.",
      "description": "Enables users to find a specific parliamentary constituency, view its details, current representation, and historical election results.",
      "inputs": {
        "type": "object",
        "properties": {
          "searchText": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "take": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-constituencies",
          "description": "Searches for constituencies by name.",
          "operationPath": "openapi_source#/paths/~1api~1Location~1Constituency~1Search/get",
          "parameters": [
            {
              "name": "searchText",
              "in": "query",
              "value": "$inputs.searchText"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "take",
              "in": "query",
              "value": "$inputs.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "constituency_search_results": "$response.body#/constituency_search_results"
          }
        },
        {
          "stepId": "get-constituency-details",
          "description": "Retrieves detailed information about a specific constituency.",
          "operationPath": "openapi_source#/paths/~1api~1Location~1Constituency~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-constituencies.outputs.constituency_search_results.value.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "constituency_details": "$response.body#/constituency_details"
          }
        },
        {
          "stepId": "get-constituency-representations",
          "description": "Retrieves a list of historical and current representations for the constituency.",
          "operationPath": "openapi_source#/paths/~1api~1Location~1Constituency~1{id}~1Representations/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-constituency-details.outputs.constituency_details.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "constituency_representations": "$response.body#/constituency_representations"
          }
        },
        {
          "stepId": "get-constituency-election-results",
          "description": "Retrieves all election results associated with the constituency.",
          "operationPath": "openapi_source#/paths/~1api~1Location~1Constituency~1{id}~1ElectionResults/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-constituency-details.outputs.constituency_details.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "constituency_election_results": "$response.body#/constituency_election_results"
          }
        }
      ],
      "outputs": {
        "constituency_search_results": "$steps.search-constituencies.outputs.constituency_search_results",
        "constituency_details": "$steps.get-constituency-details.outputs.constituency_details",
        "constituency_representations": "$steps.get-constituency-representations.outputs.constituency_representations",
        "constituency_election_results": "$steps.get-constituency-election-results.outputs.constituency_election_results"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "members-legislative-and-parliamentary-contributions",
      "summary": "Provides a comprehensive view of a member's active participation in parliamentary proceedings, including their debate contributions, early day motions, and written questions.",
      "description": "Provides a comprehensive view of a member's active participation in parliamentary proceedings, including their debate contributions, early day motions, and written questions.",
      "inputs": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "PostTitle": {
            "type": "string"
          },
          "PartyId": {
            "type": "string"
          },
          "House": {
            "type": "string"
          },
          "ConstituencyId": {
            "type": "string"
          },
          "NameStartsWith": {
            "type": "string"
          },
          "Gender": {
            "type": "string"
          },
          "MembershipStartedSince": {
            "type": "string"
          },
          "MembershipEnded.MembershipEndedSince": {
            "type": "string"
          },
          "MembershipEnded.MembershipEndReasonIds": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOnOrAfter": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOnOrBefore": {
            "type": "string"
          },
          "MembershipInDateRange.WasMemberOfHouse": {
            "type": "string"
          },
          "IsEligible": {
            "type": "string"
          },
          "IsCurrentMember": {
            "type": "string"
          },
          "PolicyInterestId": {
            "type": "string"
          },
          "Experience": {
            "type": "string"
          },
          "skip": {
            "type": "string"
          },
          "take": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "house": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-members-for-contributions",
          "description": "Finds members to identify their parliamentary contributions.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1Search/get",
          "parameters": [
            {
              "name": "Name",
              "in": "query",
              "value": "$inputs.Name"
            },
            {
              "name": "Location",
              "in": "query",
              "value": "$inputs.Location"
            },
            {
              "name": "PostTitle",
              "in": "query",
              "value": "$inputs.PostTitle"
            },
            {
              "name": "PartyId",
              "in": "query",
              "value": "$inputs.PartyId"
            },
            {
              "name": "House",
              "in": "query",
              "value": "$inputs.House"
            },
            {
              "name": "ConstituencyId",
              "in": "query",
              "value": "$inputs.ConstituencyId"
            },
            {
              "name": "NameStartsWith",
              "in": "query",
              "value": "$inputs.NameStartsWith"
            },
            {
              "name": "Gender",
              "in": "query",
              "value": "$inputs.Gender"
            },
            {
              "name": "MembershipStartedSince",
              "in": "query",
              "value": "$inputs.MembershipStartedSince"
            },
            {
              "name": "MembershipEnded.MembershipEndedSince",
              "in": "query",
              "value": "$inputs.MembershipEnded.MembershipEndedSince"
            },
            {
              "name": "MembershipEnded.MembershipEndReasonIds",
              "in": "query",
              "value": "$inputs.MembershipEnded.MembershipEndReasonIds"
            },
            {
              "name": "MembershipInDateRange.WasMemberOnOrAfter",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOnOrAfter"
            },
            {
              "name": "MembershipInDateRange.WasMemberOnOrBefore",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOnOrBefore"
            },
            {
              "name": "MembershipInDateRange.WasMemberOfHouse",
              "in": "query",
              "value": "$inputs.MembershipInDateRange.WasMemberOfHouse"
            },
            {
              "name": "IsEligible",
              "in": "query",
              "value": "$inputs.IsEligible"
            },
            {
              "name": "IsCurrentMember",
              "in": "query",
              "value": "$inputs.IsCurrentMember"
            },
            {
              "name": "PolicyInterestId",
              "in": "query",
              "value": "$inputs.PolicyInterestId"
            },
            {
              "name": "Experience",
              "in": "query",
              "value": "$inputs.Experience"
            },
            {
              "name": "skip",
              "in": "query",
              "value": "$inputs.skip"
            },
            {
              "name": "take",
              "in": "query",
              "value": "$inputs.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "members_for_contributions": "$response.body#/members_for_contributions"
          }
        },
        {
          "stepId": "get-member-contribution-summary",
          "description": "Retrieves a summary of the member's debate contributions.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1ContributionSummary/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-members-for-contributions.outputs.members_for_contributions.value.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "contribution_summary": "$response.body#/contribution_summary"
          }
        },
        {
          "stepId": "get-member-edms",
          "description": "Retrieves a list of Early Day Motions (EDMs) tabled by the member.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1Edms/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-members-for-contributions.outputs.members_for_contributions.value.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_edms": "$response.body#/member_edms"
          }
        },
        {
          "stepId": "get-member-written-questions",
          "description": "Retrieves a list of written questions submitted by the member.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1WrittenQuestions/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-members-for-contributions.outputs.members_for_contributions.value.id"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_written_questions": "$response.body#/member_written_questions"
          }
        },
        {
          "stepId": "get-member-voting-record",
          "description": "Retrieves the voting record of the member for a specified house.",
          "operationPath": "openapi_source#/paths/~1api~1Members~1{id}~1Voting/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-members-for-contributions.outputs.members_for_contributions.value.id"
            },
            {
              "name": "house",
              "in": "query",
              "value": "$inputs.house"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "member_votes": "$response.body#/member_votes"
          }
        }
      ],
      "outputs": {
        "members_for_contributions": "$steps.search-members-for-contributions.outputs.members_for_contributions",
        "contribution_summary": "$steps.get-member-contribution-summary.outputs.contribution_summary",
        "member_edms": "$steps.get-member-edms.outputs.member_edms",
        "member_written_questions": "$steps.get-member-written-questions.outputs.member_written_questions",
        "member_votes": "$steps.get-member-voting-record.outputs.member_votes"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "parliamentary-party-overview",
      "summary": "Provides an overview of the current political landscape within the UK Parliament, including the state of parties in both Houses and the composition of the House of Lords by peerage type.",
      "description": "Provides an overview of the current political landscape within the UK Parliament, including the state of parties in both Houses and the composition of the House of Lords by peerage type.",
      "inputs": {
        "type": "object",
        "properties": {
          "house": {
            "type": "string"
          },
          "forDate": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-active-parties-commons",
          "description": "Retrieves a list of active parties in the House of Commons.",
          "operationPath": "openapi_source#/paths/~1api~1Parties~1GetActive~1{house}/get",
          "parameters": [
            {
              "name": "house",
              "in": "path",
              "value": "$inputs.house"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "active_parties_commons": "$response.body#/active_parties_commons"
          }
        },
        {
          "stepId": "get-active-parties-lords",
          "description": "Retrieves a list of active parties in the House of Lords.",
          "operationPath": "openapi_source#/paths/~1api~1Parties~1GetActive~1{house}/get",
          "parameters": [
            {
              "name": "house",
              "in": "path",
              "value": "$inputs.house"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "active_parties_lords": "$response.body#/active_parties_lords"
          }
        },
        {
          "stepId": "get-state-of-parties-commons",
          "description": "Retrieves the seat count and gender breakdown for parties in the House of Commons on a specific date.",
          "operationPath": "openapi_source#/paths/~1api~1Parties~1StateOfTheParties~1{house}~1{forDate}/get",
          "parameters": [
            {
              "name": "house",
              "in": "path",
              "value": "$inputs.house"
            },
            {
              "name": "forDate",
              "in": "path",
              "value": "$inputs.forDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "state_of_parties_commons": "$response.body#/state_of_parties_commons"
          }
        },
        {
          "stepId": "get-state-of-parties-lords",
          "description": "Retrieves the seat count and gender breakdown for parties in the House of Lords on a specific date.",
          "operationPath": "openapi_source#/paths/~1api~1Parties~1StateOfTheParties~1{house}~1{forDate}/get",
          "parameters": [
            {
              "name": "house",
              "in": "path",
              "value": "$inputs.house"
            },
            {
              "name": "forDate",
              "in": "path",
              "value": "$inputs.forDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "state_of_parties_lords": "$response.body#/state_of_parties_lords"
          }
        },
        {
          "stepId": "get-lords-composition-by-type",
          "description": "Retrieves the composition of the House of Lords broken down by peerage type (Life, Hereditary, Bishop) for a specific date.",
          "operationPath": "openapi_source#/paths/~1api~1Parties~1LordsByType~1{forDate}/get",
          "parameters": [
            {
              "name": "forDate",
              "in": "path",
              "value": "$inputs.forDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "lords_composition_by_type": "$response.body#/lords_composition_by_type"
          }
        }
      ],
      "outputs": {
        "active_parties_commons": "$steps.get-active-parties-commons.outputs.active_parties_commons",
        "active_parties_lords": "$steps.get-active-parties-lords.outputs.active_parties_lords",
        "state_of_parties_commons": "$steps.get-state-of-parties-commons.outputs.state_of_parties_commons",
        "state_of_parties_lords": "$steps.get-state-of-parties-lords.outputs.state_of_parties_lords",
        "lords_composition_by_type": "$steps.get-lords-composition-by-type.outputs.lords_composition_by_type"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "government-and-opposition-structure-exploration",
      "summary": "Allows users to explore the structure of government and opposition, including departments, ministerial posts, and spokespersons.",
      "description": "Allows users to explore the structure of government and opposition, including departments, ministerial posts, and spokespersons.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nameContains": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "forDate": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-all-departments",
          "description": "Retrieves a comprehensive list of all government departments.",
          "operationPath": "openapi_source#/paths/~1api~1Reference~1Departments/get",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "nameContains",
              "in": "query",
              "value": "$inputs.nameContains"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "all_departments": "$response.body#/0/all_departments"
          }
        },
        {
          "stepId": "get-government-posts",
          "description": "Retrieves a list of all government posts, optionally filtered by department.",
          "operationPath": "openapi_source#/paths/~1api~1Posts~1GovernmentPosts/get",
          "parameters": [
            {
              "name": "departmentId",
              "in": "query",
              "value": "$steps.get-all-departments.outputs.all_departments.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "government_posts": "$response.body#/0/government_posts"
          }
        },
        {
          "stepId": "get-opposition-posts",
          "description": "Retrieves a list of all opposition posts, optionally filtered by department.",
          "operationPath": "openapi_source#/paths/~1api~1Posts~1OppositionPosts/get",
          "parameters": [
            {
              "name": "departmentId",
              "in": "query",
              "value": "$steps.get-all-departments.outputs.all_departments.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "opposition_posts": "$response.body#/0/opposition_posts"
          }
        },
        {
          "stepId": "get-speaker-and-deputies",
          "description": "Retrieves the current Speaker and Deputy Speakers for a given date.",
          "operationPath": "openapi_source#/paths/~1api~1Posts~1SpeakerAndDeputies~1{forDate}/get",
          "parameters": [
            {
              "name": "forDate",
              "in": "path",
              "value": "$inputs.forDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "speaker_and_deputies": "$response.body#/0/speaker_and_deputies"
          }
        }
      ],
      "outputs": {
        "all_departments": "$steps.get-all-departments.outputs.all_departments",
        "government_posts": "$steps.get-government-posts.outputs.government_posts",
        "opposition_posts": "$steps.get-opposition-posts.outputs.opposition_posts",
        "speaker_and_deputies": "$steps.get-speaker-and-deputies.outputs.speaker_and_deputies"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}