{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/thebluealliance.com/main/3.9.13/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "retrieve-comprehensive-team-profile",
      "summary": "Gathers all available detailed information about a specific FIRST Robotics Competition (FRC) team, including their general profile, historical event participation, awards, robot names, and associated media for a given year. This workflow is valuable for researchers, scouts, or fans looking for a complete picture of a team's history and presence.",
      "description": "Gathers all available detailed information about a specific FIRST Robotics Competition (FRC) team, including their general profile, historical event participation, awards, robot names, and associated media for a given year. This workflow is valuable for researchers, scouts, or fans looking for a complete picture of a team's history and presence.",
      "inputs": {
        "type": "object",
        "properties": {
          "If-None-Match": {
            "type": "string"
          },
          "team_key": {
            "type": "string"
          },
          "year": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-team-details",
          "description": "Retrieves the full profile details for a specified FRC team.",
          "operationId": "getTeam",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_details": "$response.body#/team_details"
          }
        },
        {
          "stepId": "get-team-history",
          "description": "Fetches the historical record of events and awards for the team.",
          "operationId": "getTeamHistory",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_history": "$response.body#/team_history"
          }
        },
        {
          "stepId": "get-team-robots",
          "description": "Obtains a list of robot names and the years they competed for the team.",
          "operationId": "getTeamRobots",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_robots": "$response.body#/0/team_robots"
          }
        },
        {
          "stepId": "get-team-social-media",
          "description": "Retrieves social media links associated with the team.",
          "operationId": "getTeamSocialMedia",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_social_media": "$response.body#/0/team_social_media"
          }
        },
        {
          "stepId": "get-team-media-by-year",
          "description": "Gets a list of media (videos/pictures) for the team in a specific year.",
          "operationId": "getTeamMediaByYear",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            },
            {
              "name": "year",
              "in": "path",
              "value": "$inputs.year"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_media": "$response.body#/0/team_media"
          }
        }
      ],
      "outputs": {
        "team_details": "$steps.get-team-details.outputs.team_details",
        "team_history": "$steps.get-team-history.outputs.team_history",
        "team_robots": "$steps.get-team-robots.outputs.team_robots",
        "team_social_media": "$steps.get-team-social-media.outputs.team_social_media",
        "team_media": "$steps.get-team-media-by-year.outputs.team_media"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "analyze-team-event-performance",
      "summary": "Provides a detailed analysis of a specific team's performance, status, matches played, and awards won at a particular FIRST Robotics Competition event. This workflow is crucial for scouting, post-event analysis, or understanding a team's competitive standing.",
      "description": "Provides a detailed analysis of a specific team's performance, status, matches played, and awards won at a particular FIRST Robotics Competition event. This workflow is crucial for scouting, post-event analysis, or understanding a team's competitive standing.",
      "inputs": {
        "type": "object",
        "properties": {
          "If-None-Match": {
            "type": "string"
          },
          "team_key": {
            "type": "string"
          },
          "event_key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-team-event-status",
          "description": "Retrieves the competition rank and overall status of the team at the given event.",
          "operationId": "getTeamEventStatus",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_event_status": "$response.body#/team_event_status"
          }
        },
        {
          "stepId": "get-team-event-matches",
          "description": "Gets a list of all matches the team played at the specified event.",
          "operationId": "getTeamEventMatches",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_event_matches": "$response.body#/0/team_event_matches"
          }
        },
        {
          "stepId": "get-team-event-awards",
          "description": "Fetches a list of awards the team won at the specified event.",
          "operationId": "getTeamEventAwards",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "team_key",
              "in": "path",
              "value": "$inputs.team_key"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "team_event_awards": "$response.body#/0/team_event_awards"
          }
        }
      ],
      "outputs": {
        "team_event_status": "$steps.get-team-event-status.outputs.team_event_status",
        "team_event_matches": "$steps.get-team-event-matches.outputs.team_event_matches",
        "team_event_awards": "$steps.get-team-event-awards.outputs.team_event_awards"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "collect-annual-event-data",
      "summary": "Retrieves a list of all events for a given year and then fetches detailed information, rankings, OPRs (Offensive Power Rating), and insights for each of those events. This workflow is valuable for data aggregation and analysis across an entire FRC season, allowing for statistical studies or building custom dashboards.",
      "description": "Retrieves a list of all events for a given year and then fetches detailed information, rankings, OPRs (Offensive Power Rating), and insights for each of those events. This workflow is valuable for data aggregation and analysis across an entire FRC season, allowing for statistical studies or building custom dashboards.",
      "inputs": {
        "type": "object",
        "properties": {
          "If-None-Match": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "event_key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-event-keys-by-year",
          "description": "Gets a list of event keys for all events in the specified year.",
          "operationId": "getEventsByYearKeys",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "year",
              "in": "path",
              "value": "$inputs.year"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_keys": "$response.body#/0/event_keys"
          }
        },
        {
          "stepId": "get-event-details",
          "description": "Retrieves the full details for a specific event key obtained from the previous step. This operation would typically be called in a loop for each event key.",
          "operationId": "getEvent",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_details": "$response.body#/event_details"
          }
        },
        {
          "stepId": "get-event-rankings",
          "description": "Fetches the team rankings for a specific event.",
          "operationId": "getEventRankings",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_rankings": "$response.body#/event_rankings"
          }
        },
        {
          "stepId": "get-event-oprs",
          "description": "Obtains OPRs (Offensive Power Rating), DPRs (Defensive Power Rating), and CCWMs (Contribution to Winning Margin) for teams at a specific event.",
          "operationId": "getEventOPRs",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_oprs": "$response.body#/event_oprs"
          }
        },
        {
          "stepId": "get-event-insights",
          "description": "Retrieves event-specific insights, which can vary by year, providing deeper statistical analysis.",
          "operationId": "getEventInsights",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "event_key",
              "in": "path",
              "value": "$inputs.event_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_insights": "$response.body#/event_insights"
          }
        }
      ],
      "outputs": {
        "event_keys": "$steps.get-event-keys-by-year.outputs.event_keys",
        "event_details": "$steps.get-event-details.outputs.event_details",
        "event_rankings": "$steps.get-event-rankings.outputs.event_rankings",
        "event_oprs": "$steps.get-event-oprs.outputs.event_oprs",
        "event_insights": "$steps.get-event-insights.outputs.event_insights"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-detailed-match-data",
      "summary": "Fetches comprehensive data for a specific match, including its general details, time-series data (if available), and Zebra MotionWorks tracking information. This workflow is useful for in-depth analysis of individual match performance, strategy, and robot movement.",
      "description": "Fetches comprehensive data for a specific match, including its general details, time-series data (if available), and Zebra MotionWorks tracking information. This workflow is useful for in-depth analysis of individual match performance, strategy, and robot movement.",
      "inputs": {
        "type": "object",
        "properties": {
          "If-None-Match": {
            "type": "string"
          },
          "match_key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-match-details",
          "description": "Retrieves the full details of a specific match, including alliance information and score breakdown.",
          "operationId": "getMatch",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "match_key",
              "in": "path",
              "value": "$inputs.match_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "match_details": "$response.body#/match_details"
          }
        },
        {
          "stepId": "get-match-timeseries",
          "description": "Gets game-specific time-series data for the match, showing progression of scores and events.",
          "operationId": "getMatchTimeseries",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "match_key",
              "in": "path",
              "value": "$inputs.match_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "match_timeseries_data": "$response.body#/0/match_timeseries_data"
          }
        },
        {
          "stepId": "get-match-zebra-motionworks",
          "description": "Obtains Zebra MotionWorks data, providing precise robot position tracking during the match.",
          "operationId": "getMatchZebra",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "match_key",
              "in": "path",
              "value": "$inputs.match_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "match_zebra_data": "$response.body#/match_zebra_data"
          }
        }
      ],
      "outputs": {
        "match_details": "$steps.get-match-details.outputs.match_details",
        "match_timeseries_data": "$steps.get-match-timeseries.outputs.match_timeseries_data",
        "match_zebra_data": "$steps.get-match-zebra-motionworks.outputs.match_zebra_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "analyze-district-championship-qualification",
      "summary": "Provides a comprehensive view of a specific district's events, team rankings within that district, and their advancement status towards the FIRST Championship. This workflow is essential for teams and fans tracking district play and championship qualifications.",
      "description": "Provides a comprehensive view of a specific district's events, team rankings within that district, and their advancement status towards the FIRST Championship. This workflow is essential for teams and fans tracking district play and championship qualifications.",
      "inputs": {
        "type": "object",
        "properties": {
          "If-None-Match": {
            "type": "string"
          },
          "district_key": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-district-events-keys",
          "description": "Gets a list of event keys for all events held within the specified district.",
          "operationId": "getDistrictEventsKeys",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "district_key",
              "in": "path",
              "value": "$inputs.district_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "district_event_keys": "$response.body#/0/district_event_keys"
          }
        },
        {
          "stepId": "get-district-rankings",
          "description": "Retrieves the district rankings for all teams participating in the specified district.",
          "operationId": "getDistrictRankings",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "district_key",
              "in": "path",
              "value": "$inputs.district_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "district_rankings": "$response.body#/0/district_rankings"
          }
        },
        {
          "stepId": "get-district-advancement",
          "description": "Obtains information about per-team advancement to the FIRST Championship from the specified district.",
          "operationId": "getDistrictAdvancement",
          "parameters": [
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "district_key",
              "in": "path",
              "value": "$inputs.district_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "district_advancement": "$response.body#/district_advancement"
          }
        }
      ],
      "outputs": {
        "district_event_keys": "$steps.get-district-events-keys.outputs.district_event_keys",
        "district_rankings": "$steps.get-district-rankings.outputs.district_rankings",
        "district_advancement": "$steps.get-district-advancement.outputs.district_advancement"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}