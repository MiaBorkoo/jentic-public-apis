{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/hubapi.com/automation/v4/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "define-and-configure-new-custom-workflow-action",
      "summary": "Creates a new custom action definition for a HubSpot app and configures its associated serverless functions (e.g., for pre-execution logic). This allows developers to extend HubSpot workflows with custom logic.",
      "description": "Creates a new custom action definition for a HubSpot app and configures its associated serverless functions (e.g., for pre-execution logic). This allows developers to extend HubSpot workflows with custom logic.",
      "inputs": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "create-action-definition_body": {
            "type": "object"
          },
          "definitionId": {
            "type": "string"
          },
          "functionType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-action-definition",
          "description": "Create the basic definition for the custom workflow action, specifying input/output fields, labels, target object types, and the action URL.",
          "operationId": "post-/automation/v4/actions/{appId}_create",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-action-definition_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "definitionId": "$response.body",
            "revisionId": "$response.body",
            "fullDefinition": "$response.body"
          }
        },
        {
          "stepId": "add-pre-action-function",
          "description": "Add or replace the serverless function code that runs before the main action execution (PRE_ACTION_EXECUTION).",
          "operationId": "put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$steps.create-action-definition.outputs.definitionId"
            },
            {
              "name": "functionType",
              "in": "path",
              "value": "$inputs.functionType"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "requestBody": {
            "contentType": "text/plain",
            "payload": {
              "definitionId": "$steps.create-action-definition.outputs.definitionId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "functionId": "$response.body",
            "functionType": "$response.body"
          }
        },
        {
          "stepId": "add-post-action-function",
          "description": "Add or replace the serverless function code that runs after the main action execution (POST_ACTION_EXECUTION).",
          "operationId": "put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$steps.create-action-definition.outputs.definitionId"
            },
            {
              "name": "functionType",
              "in": "path",
              "value": "$inputs.functionType"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "requestBody": {
            "contentType": "text/plain",
            "payload": {
              "definitionId": "$steps.create-action-definition.outputs.definitionId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "functionId": "$response.body",
            "functionType": "$response.body"
          }
        }
      ],
      "outputs": {
        "definitionId": "$steps.create-action-definition.outputs.definitionId",
        "revisionId": "$steps.create-action-definition.outputs.revisionId",
        "fullDefinition": "$steps.create-action-definition.outputs.fullDefinition",
        "functionId": "$steps.add-post-action-function.outputs.functionId",
        "functionType": "$steps.add-post-action-function.outputs.functionType"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-custom-action-configuration",
      "summary": "Updates an existing custom workflow action's definition (e.g., labels, fields) and optionally updates one of its associated functions.",
      "description": "Updates an existing custom workflow action's definition (e.g., labels, fields) and optionally updates one of its associated functions.",
      "inputs": {
        "type": "object",
        "properties": {
          "definitionId": {
            "type": "string"
          },
          "archived": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "update-action-definition_body": {
            "type": "object"
          },
          "functionType": {
            "type": "string"
          },
          "update-action-function_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-action-definition",
          "description": "Retrieve the current definition of the custom action.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}_getById",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "archived",
              "in": "query",
              "value": "$inputs.archived"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "fullDefinition": "$response.body"
          }
        },
        {
          "stepId": "update-action-definition",
          "description": "Apply updates to the action definition metadata (e.g., labels, input/output fields, object types).",
          "operationId": "patch-/automation/v4/actions/{appId}/{definitionId}_update",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.update-action-definition_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updatedDefinition": "$response.body"
          }
        },
        {
          "stepId": "update-action-function",
          "description": "Update the source code for a specific function type associated with the action definition.",
          "operationId": "put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "functionType",
              "in": "path",
              "value": "$inputs.functionType"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "requestBody": {
            "contentType": "text/plain",
            "payload": "$inputs.update-action-function_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "functionId": "$response.body",
            "functionType": "$response.body"
          }
        }
      ],
      "outputs": {
        "fullDefinition": "$steps.get-action-definition.outputs.fullDefinition",
        "updatedDefinition": "$steps.update-action-definition.outputs.updatedDefinition",
        "functionId": "$steps.update-action-function.outputs.functionId",
        "functionType": "$steps.update-action-function.outputs.functionType"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "inspect-custom-action-and-its-functions",
      "summary": "Retrieves the details of a specific custom action definition and lists its associated functions, allowing inspection of its configuration.",
      "description": "Retrieves the details of a specific custom action definition and lists its associated functions, allowing inspection of its configuration.",
      "inputs": {
        "type": "object",
        "properties": {
          "definitionId": {
            "type": "string"
          },
          "archived": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "functionType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-action-definition-details",
          "description": "Retrieve the full definition of a specific custom workflow action.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}_getById",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "archived",
              "in": "query",
              "value": "$inputs.archived"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "fullDefinition": "$response.body"
          }
        },
        {
          "stepId": "list-action-functions",
          "description": "List the identifiers (type and ID) of all functions associated with the action definition.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}/functions_getPage",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "functionIdentifiers": "$response.body"
          }
        },
        {
          "stepId": "get-specific-function-details",
          "description": "Retrieve the details (including source code) of a specific function type associated with the action.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_getByFunctionType",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "functionType",
              "in": "path",
              "value": "$steps.list-action-functions.outputs.functionIdentifiers.functionType"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "functionDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "fullDefinition": "$steps.get-action-definition-details.outputs.fullDefinition",
        "functionIdentifiers": "$steps.list-action-functions.outputs.functionIdentifiers",
        "functionDetails": "$steps.get-specific-function-details.outputs.functionDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "audit-custom-action-definition-history",
      "summary": "Retrieves the revision history for a custom action definition and allows inspection of a specific past version.",
      "description": "Retrieves the revision history for a custom action definition and allows inspection of a specific past version.",
      "inputs": {
        "type": "object",
        "properties": {
          "definitionId": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "after": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "revisionId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-action-revisions",
          "description": "List all historical revisions for a given action definition.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}/revisions_getPage",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "after",
              "in": "query",
              "value": "$inputs.after"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "revisionsList": "$response.body",
            "paging": "$response.body"
          }
        },
        {
          "stepId": "get-specific-revision",
          "description": "Retrieve the complete definition details as they existed in a specific historical revision.",
          "operationId": "get-/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}_getById",
          "parameters": [
            {
              "name": "definitionId",
              "in": "path",
              "value": "$inputs.definitionId"
            },
            {
              "name": "revisionId",
              "in": "path",
              "value": "$steps.list-action-revisions.outputs.revisionsList.results[0].revisionId"
            },
            {
              "name": "appId",
              "in": "path",
              "value": "$inputs.appId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "revisionDetails": "$response.body"
          }
        }
      ],
      "outputs": {
        "revisionsList": "$steps.list-action-revisions.outputs.revisionsList",
        "paging": "$steps.list-action-revisions.outputs.paging",
        "revisionDetails": "$steps.get-specific-revision.outputs.revisionDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}