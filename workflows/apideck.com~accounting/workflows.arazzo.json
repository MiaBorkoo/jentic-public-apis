{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/apideck.com/accounting/10.14.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "accounts-receivable-invoice-customer-and-record-payment",
      "summary": "Creates a new customer, issues an invoice to them, and records the payment received for that invoice. This covers a fundamental accounts receivable cycle.",
      "description": "Creates a new customer, issues an invoice to them, and records the payment received for that invoice. This covers a fundamental accounts receivable cycle.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "create-customer_body": {
            "type": "object"
          },
          "create-invoice_body": {
            "type": "object"
          },
          "record-payment_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-customer",
          "description": "Create a new customer record.",
          "operationId": "customersAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-customer_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "customer_id": "$response.body"
          }
        },
        {
          "stepId": "create-invoice",
          "description": "Create an invoice for the newly created customer.",
          "operationId": "invoicesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-invoice_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "invoice_id": "$response.body"
          }
        },
        {
          "stepId": "record-payment",
          "description": "Record a payment received from the customer and allocate it to the created invoice.",
          "operationId": "paymentsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.record-payment_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "payment_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "customer_id": "$steps.create-customer.outputs.customer_id",
        "invoice_id": "$steps.create-invoice.outputs.invoice_id",
        "payment_id": "$steps.record-payment.outputs.payment_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "accounts-payable-process-supplier-bill-and-payment",
      "summary": "Creates a new supplier, records a bill received from them, and records the payment made for that bill. This covers a fundamental accounts payable cycle.",
      "description": "Creates a new supplier, records a bill received from them, and records the payment made for that bill. This covers a fundamental accounts payable cycle.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "create-supplier_body": {
            "type": "object"
          },
          "create-bill_body": {
            "type": "object"
          },
          "record-bill-payment_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-supplier",
          "description": "Create a new supplier record.",
          "operationId": "suppliersAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-supplier_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supplier_id": "$response.body"
          }
        },
        {
          "stepId": "create-bill",
          "description": "Create a bill received from the newly created supplier.",
          "operationId": "billsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-bill_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "bill_id": "$response.body"
          }
        },
        {
          "stepId": "record-bill-payment",
          "description": "Record a payment made to the supplier and allocate it to the created bill.",
          "operationId": "billPaymentsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.record-bill-payment_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "bill_payment_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "supplier_id": "$steps.create-supplier.outputs.supplier_id",
        "bill_id": "$steps.create-bill.outputs.bill_id",
        "bill_payment_id": "$steps.record-bill-payment.outputs.bill_payment_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "setup-invoice-prerequisites-and-create-invoice",
      "summary": "Sets up a new tax rate and a new invoice item (product/service), then creates an invoice for a customer using these newly created prerequisites.",
      "description": "Sets up a new tax rate and a new invoice item (product/service), then creates an invoice for a customer using these newly created prerequisites.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "create-tax-rate_body": {
            "type": "object"
          },
          "create-invoice-item_body": {
            "type": "object"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "create-invoice-with-new-items_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-tax-rate",
          "description": "Create a new tax rate.",
          "operationId": "taxRatesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-tax-rate_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tax_rate_id": "$response.body"
          }
        },
        {
          "stepId": "create-invoice-item",
          "description": "Create a new invoice item (product or service).",
          "operationId": "invoiceItemsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-invoice-item_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "item_id": "$response.body"
          }
        },
        {
          "stepId": "find-customer",
          "description": "Find an existing customer to invoice.",
          "operationId": "customersAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "customer_id": "$response.body"
          }
        },
        {
          "stepId": "create-invoice-with-new-items",
          "description": "Create an invoice using the newly created item and tax rate.",
          "operationId": "invoicesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-invoice-with-new-items_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "invoice_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "tax_rate_id": "$steps.create-tax-rate.outputs.tax_rate_id",
        "item_id": "$steps.create-invoice-item.outputs.item_id",
        "customer_id": "$steps.find-customer.outputs.customer_id",
        "invoice_id": "$steps.create-invoice-with-new-items.outputs.invoice_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "issue-and-apply-credit-note",
      "summary": "Finds an existing invoice, creates a credit note for a customer (potentially related to that invoice), and then applies the credit note against the invoice using a payment allocation.",
      "description": "Finds an existing invoice, creates a credit note for a customer (potentially related to that invoice), and then applies the credit note against the invoice using a payment allocation.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "create-credit-note_body": {
            "type": "object"
          },
          "apply-credit-note-via-payment_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-invoice",
          "description": "Find an existing invoice by number or other criteria.",
          "operationId": "invoicesAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "invoice_id": "$response.body",
            "customer_id": "$response.body",
            "invoice_details": "$response.body"
          }
        },
        {
          "stepId": "create-credit-note",
          "description": "Create a credit note for the customer associated with the invoice.",
          "operationId": "creditNotesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-credit-note_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "credit_note_id": "$response.body"
          }
        },
        {
          "stepId": "apply-credit-note-via-payment",
          "description": "Create a payment record to represent the application of the credit note to the invoice.",
          "operationId": "paymentsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.apply-credit-note-via-payment_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "payment_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "invoice_id": "$steps.find-invoice.outputs.invoice_id",
        "customer_id": "$steps.find-invoice.outputs.customer_id",
        "invoice_details": "$steps.find-invoice.outputs.invoice_details",
        "credit_note_id": "$steps.create-credit-note.outputs.credit_note_id",
        "payment_id": "$steps.apply-credit-note-via-payment.outputs.payment_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-core-financial-reports",
      "summary": "Retrieves the Profit and Loss statement and the Balance Sheet report for financial analysis.",
      "description": "Retrieves the Profit and Loss statement and the Balance Sheet report for financial analysis.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-profit-and-loss",
          "description": "Retrieve the Profit and Loss report for a specified period.",
          "operationId": "profitAndLossOne",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "profit_and_loss_report": "$response.body"
          }
        },
        {
          "stepId": "get-balance-sheet",
          "description": "Retrieve the Balance Sheet report as of a specific date.",
          "operationId": "balanceSheetOne",
          "parameters": [
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "balance_sheet_report": "$response.body"
          }
        }
      ],
      "outputs": {
        "profit_and_loss_report": "$steps.get-profit-and-loss.outputs.profit_and_loss_report",
        "balance_sheet_report": "$steps.get-balance-sheet.outputs.balance_sheet_report"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "record-expense-with-receipt-attachment",
      "summary": "Records a business expense, optionally categorizes it, and attaches a digital copy of the receipt.",
      "description": "Records a business expense, optionally categorizes it, and attaches a digital copy of the receipt.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "create-expense_body": {
            "type": "object"
          },
          "reference_type": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "x-apideck-metadata": {
            "type": "string"
          },
          "content-type": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-expense",
          "description": "Create an expense record.",
          "operationId": "expensesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-expense_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "expense_id": "$response.body"
          }
        },
        {
          "stepId": "upload-receipt-attachment",
          "description": "Upload a receipt file and attach it to the created expense.",
          "operationId": "attachmentsUpload",
          "parameters": [
            {
              "name": "reference_type",
              "in": "path",
              "value": "$inputs.reference_type"
            },
            {
              "name": "reference_id",
              "in": "path",
              "value": "$steps.create-expense.outputs.expense_id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-metadata",
              "in": "header",
              "value": "$inputs.x-apideck-metadata"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "content-type",
              "in": "header",
              "value": "$inputs.content-type"
            }
          ],
          "requestBody": {
            "contentType": "*/*",
            "payload": {
              "reference_id": "$steps.create-expense.outputs.expense_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "attachment_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "expense_id": "$steps.create-expense.outputs.expense_id",
        "attachment_id": "$steps.upload-receipt-attachment.outputs.attachment_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "procurement-create-purchase-order",
      "summary": "Finds or creates a supplier and then creates a purchase order for that supplier.",
      "description": "Finds or creates a supplier and then creates a purchase order for that supplier.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "create-purchase-order_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-supplier",
          "description": "Find an existing supplier.",
          "operationId": "suppliersAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supplier_id": "$response.body"
          }
        },
        {
          "stepId": "create-purchase-order",
          "description": "Create a purchase order for the supplier.",
          "operationId": "purchaseOrdersAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-purchase-order_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "purchase_order_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "supplier_id": "$steps.find-supplier.outputs.supplier_id",
        "purchase_order_id": "$steps.create-purchase-order.outputs.purchase_order_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}