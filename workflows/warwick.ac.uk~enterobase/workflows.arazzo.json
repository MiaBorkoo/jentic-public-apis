{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/warwick.ac.uk/enterobase/v2.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "explore-genotyping-schemes-and-st-profiles",
      "summary": "Discover available genotyping schemes (like MLST/wgMLST), list their constituent loci, and then retrieve Sequence Type (ST) profiles for specific strains within a chosen scheme. This workflow is central to comparative genomics and epidemiological studies.",
      "description": "Discover available genotyping schemes (like MLST/wgMLST), list their constituent loci, and then retrieve Sequence Type (ST) profiles for specific strains within a chosen scheme. This workflow is central to comparative genomics and epidemiological studies.",
      "inputs": {
        "type": "object",
        "properties": {
          "source_details": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "barcode": {
            "type": "string"
          },
          "sample_accession": {
            "type": "string"
          },
          "antigenic_formulas": {
            "type": "string"
          },
          "only_fields": {
            "type": "string"
          },
          "assembly_barcode": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "collection_month": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "uberstrain": {
            "type": "string"
          },
          "substrains": {
            "type": "string"
          },
          "sortorder": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "reldate": {
            "type": "string"
          },
          "strain_name": {
            "type": "string"
          },
          "secondary_sample_accession": {
            "type": "string"
          },
          "source_niche": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "return_all": {
            "type": "string"
          },
          "source_type": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "serotype": {
            "type": "string"
          },
          "lab_contact": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "my_strains": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "collection_time": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          },
          "orderby": {
            "type": "string"
          },
          "collection_date": {
            "type": "string"
          },
          "collection_year": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "lastmodified": {
            "type": "string"
          },
          "scheme_name": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "create_time": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "locus": {
            "type": "string"
          },
          "st_id": {
            "type": "string"
          },
          "show_alleles": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-strains-for-st-lookup",
          "description": "List strain records from a specified database to identify a strain barcode that can be used for ST profile lookup.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1strains/get",
          "parameters": [
            {
              "name": "source_details",
              "in": "query",
              "value": "$inputs.source_details"
            },
            {
              "name": "postcode",
              "in": "query",
              "value": "$inputs.postcode"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "barcode",
              "in": "query",
              "value": "$inputs.barcode"
            },
            {
              "name": "sample_accession",
              "in": "query",
              "value": "$inputs.sample_accession"
            },
            {
              "name": "antigenic_formulas",
              "in": "query",
              "value": "$inputs.antigenic_formulas"
            },
            {
              "name": "only_fields",
              "in": "query",
              "value": "$inputs.only_fields"
            },
            {
              "name": "assembly_barcode",
              "in": "query",
              "value": "$inputs.assembly_barcode"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "collection_month",
              "in": "query",
              "value": "$inputs.collection_month"
            },
            {
              "name": "version",
              "in": "query",
              "value": "$inputs.version"
            },
            {
              "name": "county",
              "in": "query",
              "value": "$inputs.county"
            },
            {
              "name": "uberstrain",
              "in": "query",
              "value": "$inputs.uberstrain"
            },
            {
              "name": "substrains",
              "in": "query",
              "value": "$inputs.substrains"
            },
            {
              "name": "sortorder",
              "in": "query",
              "value": "$inputs.sortorder"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "reldate",
              "in": "query",
              "value": "$inputs.reldate"
            },
            {
              "name": "strain_name",
              "in": "query",
              "value": "$inputs.strain_name"
            },
            {
              "name": "secondary_sample_accession",
              "in": "query",
              "value": "$inputs.secondary_sample_accession"
            },
            {
              "name": "source_niche",
              "in": "query",
              "value": "$inputs.source_niche"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "return_all",
              "in": "query",
              "value": "$inputs.return_all"
            },
            {
              "name": "source_type",
              "in": "query",
              "value": "$inputs.source_type"
            },
            {
              "name": "city",
              "in": "query",
              "value": "$inputs.city"
            },
            {
              "name": "serotype",
              "in": "query",
              "value": "$inputs.serotype"
            },
            {
              "name": "lab_contact",
              "in": "query",
              "value": "$inputs.lab_contact"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "my_strains",
              "in": "query",
              "value": "$inputs.my_strains"
            },
            {
              "name": "comment",
              "in": "query",
              "value": "$inputs.comment"
            },
            {
              "name": "collection_time",
              "in": "query",
              "value": "$inputs.collection_time"
            },
            {
              "name": "continent",
              "in": "query",
              "value": "$inputs.continent"
            },
            {
              "name": "orderby",
              "in": "query",
              "value": "$inputs.orderby"
            },
            {
              "name": "collection_date",
              "in": "query",
              "value": "$inputs.collection_date"
            },
            {
              "name": "collection_year",
              "in": "query",
              "value": "$inputs.collection_year"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$inputs.database"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "strain_list": "$response.body#/strain_list",
            "strain_barcodes": "$response.body#/strain_barcodes",
            "database": "$response.body#/database"
          }
        },
        {
          "stepId": "list-genotyping-schemes",
          "description": "List available genotyping schemes (e.g., cgMLST_v2) for a given species database, allowing users to select a scheme for further analysis.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1schemes/get",
          "parameters": [
            {
              "name": "version",
              "in": "query",
              "value": "$inputs.version"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "lastmodified",
              "in": "query",
              "value": "$inputs.lastmodified"
            },
            {
              "name": "scheme_name",
              "in": "query",
              "value": "$inputs.scheme_name"
            },
            {
              "name": "sortorder",
              "in": "query",
              "value": "$inputs.sortorder"
            },
            {
              "name": "created",
              "in": "query",
              "value": "$inputs.created"
            },
            {
              "name": "barcode",
              "in": "query",
              "value": "$inputs.barcode"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "orderby",
              "in": "query",
              "value": "$inputs.orderby"
            },
            {
              "name": "only_fields",
              "in": "query",
              "value": "$inputs.only_fields"
            },
            {
              "name": "label",
              "in": "query",
              "value": "$inputs.label"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.list-strains-for-st-lookup.outputs.database"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "scheme_list": "$response.body#/scheme_list",
            "scheme_names": "$response.body#/scheme_names",
            "database": "$response.body#/database"
          }
        },
        {
          "stepId": "get-scheme-loci",
          "description": "Retrieve the list of loci (genes) that comprise a specific genotyping scheme, providing details about the genetic markers used in the scheme.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1{scheme}~1loci/get",
          "parameters": [
            {
              "name": "create_time",
              "in": "query",
              "value": "$inputs.create_time"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "scheme",
              "in": "query",
              "value": "$steps.list-genotyping-schemes.outputs.scheme_names"
            },
            {
              "name": "barcode",
              "in": "query",
              "value": "$inputs.barcode"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "only_fields",
              "in": "query",
              "value": "$inputs.only_fields"
            },
            {
              "name": "locus",
              "in": "query",
              "value": "$inputs.locus"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.list-genotyping-schemes.outputs.database"
            },
            {
              "name": "scheme",
              "in": "path",
              "value": "$steps.list-genotyping-schemes.outputs.scheme_names"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "loci_list": "$response.body#/loci_list",
            "database": "$response.body#/database",
            "scheme": "$response.body#/scheme"
          }
        },
        {
          "stepId": "get-st-profiles",
          "description": "Get Sequence Type (ST) profiles for a specific strain within a chosen genotyping scheme. This allows for precise classification and comparison of strains based on their allelic profiles.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1{scheme}~1sts/get",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "scheme",
              "in": "query",
              "value": "$steps.get-scheme-loci.outputs.scheme"
            },
            {
              "name": "barcode",
              "in": "query",
              "value": "$steps.list-strains-for-st-lookup.outputs.strain_barcodes"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "st_id",
              "in": "query",
              "value": "$inputs.st_id"
            },
            {
              "name": "reldate",
              "in": "query",
              "value": "$inputs.reldate"
            },
            {
              "name": "only_fields",
              "in": "query",
              "value": "$inputs.only_fields"
            },
            {
              "name": "show_alleles",
              "in": "query",
              "value": "$inputs.show_alleles"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.get-scheme-loci.outputs.database"
            },
            {
              "name": "scheme",
              "in": "path",
              "value": "$steps.get-scheme-loci.outputs.scheme"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "st_profile_list": "$response.body#/st_profile_list"
          }
        }
      ],
      "outputs": {
        "strain_list": "$steps.list-strains-for-st-lookup.outputs.strain_list",
        "strain_barcodes": "$steps.list-strains-for-st-lookup.outputs.strain_barcodes",
        "database": "$steps.get-scheme-loci.outputs.database",
        "scheme_list": "$steps.list-genotyping-schemes.outputs.scheme_list",
        "scheme_names": "$steps.list-genotyping-schemes.outputs.scheme_names",
        "loci_list": "$steps.get-scheme-loci.outputs.loci_list",
        "scheme": "$steps.get-scheme-loci.outputs.scheme",
        "st_profile_list": "$steps.get-st-profiles.outputs.st_profile_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "search-and-retrieve-strain-metadata",
      "summary": "Search for bacterial strains within a specific database using various criteria and then retrieve detailed metadata for a selected strain. This is a fundamental workflow for researchers to find and inspect specific bacterial isolates.",
      "description": "Search for bacterial strains within a specific database using various criteria and then retrieve detailed metadata for a selected strain. This is a fundamental workflow for researchers to find and inspect specific bacterial isolates.",
      "inputs": {
        "type": "object",
        "properties": {
          "source_details": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "barcode": {
            "type": "string"
          },
          "sample_accession": {
            "type": "string"
          },
          "antigenic_formulas": {
            "type": "string"
          },
          "only_fields": {
            "type": "string"
          },
          "assembly_barcode": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "collection_month": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "uberstrain": {
            "type": "string"
          },
          "substrains": {
            "type": "string"
          },
          "sortorder": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "reldate": {
            "type": "string"
          },
          "strain_name": {
            "type": "string"
          },
          "secondary_sample_accession": {
            "type": "string"
          },
          "source_niche": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "return_all": {
            "type": "string"
          },
          "source_type": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "serotype": {
            "type": "string"
          },
          "lab_contact": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "my_strains": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "collection_time": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          },
          "orderby": {
            "type": "string"
          },
          "collection_date": {
            "type": "string"
          },
          "collection_year": {
            "type": "string"
          },
          "database": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-strains",
          "description": "List strain records from a specified database, with options for filtering by various metadata fields and pagination.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1strains/get",
          "parameters": [
            {
              "name": "source_details",
              "in": "query",
              "value": "$inputs.source_details"
            },
            {
              "name": "postcode",
              "in": "query",
              "value": "$inputs.postcode"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "barcode",
              "in": "query",
              "value": "$inputs.barcode"
            },
            {
              "name": "sample_accession",
              "in": "query",
              "value": "$inputs.sample_accession"
            },
            {
              "name": "antigenic_formulas",
              "in": "query",
              "value": "$inputs.antigenic_formulas"
            },
            {
              "name": "only_fields",
              "in": "query",
              "value": "$inputs.only_fields"
            },
            {
              "name": "assembly_barcode",
              "in": "query",
              "value": "$inputs.assembly_barcode"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "collection_month",
              "in": "query",
              "value": "$inputs.collection_month"
            },
            {
              "name": "version",
              "in": "query",
              "value": "$inputs.version"
            },
            {
              "name": "county",
              "in": "query",
              "value": "$inputs.county"
            },
            {
              "name": "uberstrain",
              "in": "query",
              "value": "$inputs.uberstrain"
            },
            {
              "name": "substrains",
              "in": "query",
              "value": "$inputs.substrains"
            },
            {
              "name": "sortorder",
              "in": "query",
              "value": "$inputs.sortorder"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "reldate",
              "in": "query",
              "value": "$inputs.reldate"
            },
            {
              "name": "strain_name",
              "in": "query",
              "value": "$inputs.strain_name"
            },
            {
              "name": "secondary_sample_accession",
              "in": "query",
              "value": "$inputs.secondary_sample_accession"
            },
            {
              "name": "source_niche",
              "in": "query",
              "value": "$inputs.source_niche"
            },
            {
              "name": "region",
              "in": "query",
              "value": "$inputs.region"
            },
            {
              "name": "return_all",
              "in": "query",
              "value": "$inputs.return_all"
            },
            {
              "name": "source_type",
              "in": "query",
              "value": "$inputs.source_type"
            },
            {
              "name": "city",
              "in": "query",
              "value": "$inputs.city"
            },
            {
              "name": "serotype",
              "in": "query",
              "value": "$inputs.serotype"
            },
            {
              "name": "lab_contact",
              "in": "query",
              "value": "$inputs.lab_contact"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "my_strains",
              "in": "query",
              "value": "$inputs.my_strains"
            },
            {
              "name": "comment",
              "in": "query",
              "value": "$inputs.comment"
            },
            {
              "name": "collection_time",
              "in": "query",
              "value": "$inputs.collection_time"
            },
            {
              "name": "continent",
              "in": "query",
              "value": "$inputs.continent"
            },
            {
              "name": "orderby",
              "in": "query",
              "value": "$inputs.orderby"
            },
            {
              "name": "collection_date",
              "in": "query",
              "value": "$inputs.collection_date"
            },
            {
              "name": "collection_year",
              "in": "query",
              "value": "$inputs.collection_year"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$inputs.database"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "strain_list": "$response.body#/strain_list",
            "strain_barcodes": "$response.body#/strain_barcodes",
            "database": "$response.body#/database"
          }
        },
        {
          "stepId": "get-strain-details",
          "description": "Retrieve comprehensive metadata for a specific strain using its unique barcode, including details like collection info, source, and associated assembly barcode.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1strains~1{barcode}/get",
          "parameters": [
            {
              "name": "barcode",
              "in": "path",
              "value": "$steps.list-strains.outputs.strain_barcodes"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.list-strains.outputs.database"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "database": "$steps.list-strains.outputs.database",
              "barcode": "$steps.list-strains.outputs.strain_barcodes[0]"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "strain_details": "$response.body#/strain_details",
            "assembly_barcode": "$response.body#/assembly_barcode",
            "database": "$response.body#/database"
          }
        }
      ],
      "outputs": {
        "strain_list": "$steps.list-strains.outputs.strain_list",
        "strain_barcodes": "$steps.list-strains.outputs.strain_barcodes",
        "database": "$steps.get-strain-details.outputs.database",
        "strain_details": "$steps.get-strain-details.outputs.strain_details",
        "assembly_barcode": "$steps.get-strain-details.outputs.assembly_barcode"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-assembly-and-amr-data-for-a-strain",
      "summary": "Obtain a strain's details, then use its associated assembly barcode to retrieve the genome assembly information and any related Antimicrobial Resistance (AMR) data. This workflow is crucial for understanding the genomic and phenotypic characteristics of a bacterial strain.",
      "description": "Obtain a strain's details, then use its associated assembly barcode to retrieve the genome assembly information and any related Antimicrobial Resistance (AMR) data. This workflow is crucial for understanding the genomic and phenotypic characteristics of a bacterial strain.",
      "inputs": {
        "type": "object",
        "properties": {
          "barcode": {
            "type": "string"
          },
          "database": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-strain-details",
          "description": "Retrieve comprehensive metadata for a specific strain, including its associated assembly barcode, which links to genomic data.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1strains~1{barcode}/get",
          "parameters": [
            {
              "name": "barcode",
              "in": "path",
              "value": "$inputs.barcode"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$inputs.database"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "barcode": "$inputs.barcode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "strain_details": "$response.body#/strain_details",
            "assembly_barcode": "$response.body#/assembly_barcode",
            "database": "$response.body#/database"
          }
        },
        {
          "stepId": "get-assembly-details",
          "description": "Retrieve detailed information about a specific genome assembly, such as assembly status and N50 value, using the assembly barcode obtained from the strain details.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1assemblies~1{barcode}/get",
          "parameters": [
            {
              "name": "barcode",
              "in": "path",
              "value": "$steps.get-strain-details.outputs.assembly_barcode"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.get-strain-details.outputs.database"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "database": "$steps.get-strain-details.outputs.database",
              "barcode": "$steps.get-strain-details.outputs.assembly_barcode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "assembly_details": "$response.body#/assembly_details",
            "barcode": "$response.body#/barcode",
            "database": "$response.body#/database"
          }
        },
        {
          "stepId": "get-amr-data-for-assembly",
          "description": "Retrieve Antimicrobial Resistance (AMR) data associated with the specific genome assembly. This provides insights into the antibiotic susceptibility of the bacterial strain.",
          "operationPath": "openapi_source#/paths/~1api~1v2.0~1{database}~1AMRdata~1{barcode}/get",
          "parameters": [
            {
              "name": "barcode",
              "in": "path",
              "value": "$steps.get-assembly-details.outputs.barcode"
            },
            {
              "name": "database",
              "in": "path",
              "value": "$steps.get-assembly-details.outputs.database"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "database": "$steps.get-assembly-details.outputs.database",
              "barcode": "$steps.get-assembly-details.outputs.barcode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "amr_data": "$response.body#/amr_data"
          }
        }
      ],
      "outputs": {
        "strain_details": "$steps.get-strain-details.outputs.strain_details",
        "assembly_barcode": "$steps.get-strain-details.outputs.assembly_barcode",
        "database": "$steps.get-assembly-details.outputs.database",
        "assembly_details": "$steps.get-assembly-details.outputs.assembly_details",
        "barcode": "$steps.get-assembly-details.outputs.barcode",
        "amr_data": "$steps.get-amr-data-for-assembly.outputs.amr_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}