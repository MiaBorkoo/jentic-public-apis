{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/browshot.com/main/1.17.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "take-single-screenshot-and-retrieve-full-image",
      "summary": "Requests a screenshot for a specific URL using a chosen instance, polls for completion, and retrieves the URL of the final screenshot image. This is a fundamental workflow for obtaining a web page capture.",
      "description": "Requests a screenshot for a specific URL using a chosen instance, polls for completion, and retrieves the URL of the final screenshot image. This is a fundamental workflow for obtaining a web page capture.",
      "inputs": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "request-screenshot",
          "description": "Submit a request to capture a screenshot of a given URL using a specific instance.",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body"
          }
        },
        {
          "stepId": "poll-screenshot-status",
          "description": "Periodically check the status of the screenshot request until it is 'finished' or 'error'.",
          "operationId": "GetScreenshotInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.request-screenshot.outputs.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "screenshot_url": "$response.body",
            "final_url": "$response.body",
            "width": "$response.body",
            "height": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body",
            "error": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.poll-screenshot-status.outputs.id",
        "status": "$steps.poll-screenshot-status.outputs.status",
        "url": "$steps.poll-screenshot-status.outputs.url",
        "instance_id": "$steps.poll-screenshot-status.outputs.instance_id",
        "cost": "$steps.poll-screenshot-status.outputs.cost",
        "priority": "$steps.poll-screenshot-status.outputs.priority",
        "screenshot_url": "$steps.poll-screenshot-status.outputs.screenshot_url",
        "final_url": "$steps.poll-screenshot-status.outputs.final_url",
        "width": "$steps.poll-screenshot-status.outputs.width",
        "height": "$steps.poll-screenshot-status.outputs.height",
        "error": "$steps.poll-screenshot-status.outputs.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "take-single-screenshot-and-retrieve-thumbnail",
      "summary": "Captures a screenshot for a URL, waits for completion, and then retrieves a thumbnail image (as image data, not JSON) for preview purposes.",
      "description": "Captures a screenshot for a URL, waits for completion, and then retrieves a thumbnail image (as image data, not JSON) for preview purposes.",
      "inputs": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "scale": {
            "type": "string"
          },
          "zoom": {
            "type": "string"
          },
          "ratio": {
            "type": "string"
          },
          "left": {
            "type": "string"
          },
          "right": {
            "type": "string"
          },
          "top": {
            "type": "string"
          },
          "bottom": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "shot": {
            "type": "string"
          },
          "quality": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "request-single-screenshot",
          "description": "Submit a request to capture a screenshot of a given URL using a specific instance.",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body"
          }
        },
        {
          "stepId": "check-screenshot-completion",
          "description": "Poll the status of the screenshot request until it is 'finished'.",
          "operationId": "GetScreenshotInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.request-single-screenshot.outputs.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body"
          }
        },
        {
          "stepId": "get-screenshot-thumbnail",
          "description": "Retrieve the thumbnail image for the completed screenshot. Requires 'finished' status from the previous step.",
          "operationId": "GetThumbnail",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.check-screenshot-completion.outputs.id"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "scale",
              "in": "query",
              "value": "$inputs.scale"
            },
            {
              "name": "zoom",
              "in": "query",
              "value": "$inputs.zoom"
            },
            {
              "name": "ratio",
              "in": "query",
              "value": "$inputs.ratio"
            },
            {
              "name": "left",
              "in": "query",
              "value": "$inputs.left"
            },
            {
              "name": "right",
              "in": "query",
              "value": "$inputs.right"
            },
            {
              "name": "top",
              "in": "query",
              "value": "$inputs.top"
            },
            {
              "name": "bottom",
              "in": "query",
              "value": "$inputs.bottom"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "shot",
              "in": "query",
              "value": "$inputs.shot"
            },
            {
              "name": "quality",
              "in": "query",
              "value": "$inputs.quality"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "thumbnail_image_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.check-screenshot-completion.outputs.id",
        "status": "$steps.check-screenshot-completion.outputs.status",
        "url": "$steps.request-single-screenshot.outputs.url",
        "instance_id": "$steps.request-single-screenshot.outputs.instance_id",
        "cost": "$steps.request-single-screenshot.outputs.cost",
        "priority": "$steps.request-single-screenshot.outputs.priority",
        "thumbnail_image_data": "$steps.get-screenshot-thumbnail.outputs.thumbnail_image_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "process-batch-screenshots",
      "summary": "Submits a large batch of URLs for screenshotting via a file upload, then monitors the batch job's overall status until completion.",
      "description": "Submits a large batch of URLs for screenshotting via a file upload, then monitors the batch job's overall status until completion.",
      "inputs": {
        "type": "object",
        "properties": {
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-batch-job",
          "description": "Upload a file containing a list of URLs and screenshot parameters to create a batch job.",
          "operationId": "CreateBatch",
          "parameters": [
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "cookie": "$inputs.cookie",
              "delay": "$inputs.delay",
              "details": "$inputs.details",
              "flash_delay": "$inputs.flash_delay",
              "format": "$inputs.format",
              "headers": "$inputs.headers",
              "height": "$inputs.height",
              "html": "$inputs.html",
              "max_wait": "$inputs.max_wait",
              "name": "$inputs.name",
              "post_data": "$inputs.post_data",
              "priority": "$inputs.priority",
              "referer": "$inputs.referer",
              "screen_height": "$inputs.screen_height",
              "screen_width": "$inputs.screen_width",
              "script": "$inputs.script",
              "size": "$inputs.size",
              "width": "$inputs.width"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "count": "$response.body"
          }
        },
        {
          "stepId": "monitor-batch-status",
          "description": "Periodically check the status of the batch job using its ID until it reaches 'finished' or 'error'.",
          "operationId": "GetBatchInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.create-batch-job.outputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "count": "$response.body",
            "processed": "$response.body",
            "failed": "$response.body",
            "finished": "$response.body",
            "started": "$response.body",
            "urls": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.monitor-batch-status.outputs.id",
        "status": "$steps.monitor-batch-status.outputs.status",
        "count": "$steps.monitor-batch-status.outputs.count",
        "processed": "$steps.monitor-batch-status.outputs.processed",
        "failed": "$steps.monitor-batch-status.outputs.failed",
        "finished": "$steps.monitor-batch-status.outputs.finished",
        "started": "$steps.monitor-batch-status.outputs.started",
        "urls": "$steps.monitor-batch-status.outputs.urls"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "take-screenshot-with-server-side-caching",
      "summary": "Requests a screenshot, leveraging the server's built-in caching mechanism to potentially reuse a recent screenshot for the same URL and instance, saving time and credits.",
      "description": "Requests a screenshot, leveraging the server's built-in caching mechanism to potentially reuse a recent screenshot for the same URL and instance, saving time and credits.",
      "inputs": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "request-cached-screenshot",
          "description": "Submit a screenshot request, specifying a 'cache' duration (in seconds) to allow reuse of recent captures.",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body"
          }
        },
        {
          "stepId": "poll-cached-screenshot-status",
          "description": "Check the status of the screenshot request. The server handles whether a cached or new screenshot is provided.",
          "operationId": "GetScreenshotInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.request-cached-screenshot.outputs.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "screenshot_url": "$response.body",
            "final_url": "$response.body",
            "width": "$response.body",
            "height": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body",
            "error": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.poll-cached-screenshot-status.outputs.id",
        "status": "$steps.poll-cached-screenshot-status.outputs.status",
        "url": "$steps.poll-cached-screenshot-status.outputs.url",
        "instance_id": "$steps.poll-cached-screenshot-status.outputs.instance_id",
        "cost": "$steps.poll-cached-screenshot-status.outputs.cost",
        "priority": "$steps.poll-cached-screenshot-status.outputs.priority",
        "screenshot_url": "$steps.poll-cached-screenshot-status.outputs.screenshot_url",
        "final_url": "$steps.poll-cached-screenshot-status.outputs.final_url",
        "width": "$steps.poll-cached-screenshot-status.outputs.width",
        "height": "$steps.poll-cached-screenshot-status.outputs.height",
        "error": "$steps.poll-cached-screenshot-status.outputs.error"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-and-select-optimal-instance-for-screenshot",
      "summary": "Retrieves the list of available screenshot instances, allows client-side logic to select an optimal instance (e.g., based on load or browser type), and then requests a screenshot using the chosen instance.",
      "description": "Retrieves the list of available screenshot instances, allows client-side logic to select an optimal instance (e.g., based on load or browser type), and then requests a screenshot using the chosen instance.",
      "inputs": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-available-instances",
          "description": "Get a list of all available free, shared, and private instances with their properties.",
          "operationId": "GetInstancesInfo",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "free_instances": "$response.body",
            "shared_instances": "$response.body",
            "private_instances": "$response.body"
          }
        },
        {
          "stepId": "request-screenshot-with-selected-instance",
          "description": "Submit a screenshot request using an instance_id selected (client-side) from the previous step's output.",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body",
            "cost": "$response.body",
            "priority": "$response.body"
          }
        },
        {
          "stepId": "poll-selected-instance-screenshot-status",
          "description": "Check the status of the screenshot request.",
          "operationId": "GetScreenshotInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.request-screenshot-with-selected-instance.outputs.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "screenshot_url": "$response.body"
          }
        }
      ],
      "outputs": {
        "free_instances": "$steps.list-available-instances.outputs.free_instances",
        "shared_instances": "$steps.list-available-instances.outputs.shared_instances",
        "private_instances": "$steps.list-available-instances.outputs.private_instances",
        "id": "$steps.poll-selected-instance-screenshot-status.outputs.id",
        "status": "$steps.poll-selected-instance-screenshot-status.outputs.status",
        "url": "$steps.request-screenshot-with-selected-instance.outputs.url",
        "instance_id": "$steps.request-screenshot-with-selected-instance.outputs.instance_id",
        "cost": "$steps.request-screenshot-with-selected-instance.outputs.cost",
        "priority": "$steps.request-screenshot-with-selected-instance.outputs.priority",
        "screenshot_url": "$steps.poll-selected-instance-screenshot-status.outputs.screenshot_url"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "take-screenshot-and-host-on-s3",
      "summary": "Captures a screenshot, waits for it to complete, and then initiates hosting of the screenshot (or a generated thumbnail) on the user's specified S3 bucket.",
      "description": "Captures a screenshot, waits for it to complete, and then initiates hosting of the screenshot (or a generated thumbnail) on the user's specified S3 bucket.",
      "inputs": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "scale": {
            "type": "string"
          },
          "bucket": {
            "type": "string"
          },
          "file": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "request-screenshot-for-s3-hosting",
          "description": "Submit a request to capture a screenshot.",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body",
            "instance_id": "$response.body"
          }
        },
        {
          "stepId": "check-screenshot-completion-for-s3",
          "description": "Poll the status of the screenshot request until it is 'finished'.",
          "operationId": "GetScreenshotInfo",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.request-screenshot-for-s3-hosting.outputs.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body"
          }
        },
        {
          "stepId": "host-screenshot-on-s3",
          "description": "Request hosting of the completed screenshot on S3. Requires 'finished' status from the previous step.",
          "operationId": "HostScreenshot",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$steps.check-screenshot-completion-for-s3.outputs.id"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "scale",
              "in": "query",
              "value": "$inputs.scale"
            },
            {
              "name": "bucket",
              "in": "query",
              "value": "$inputs.bucket"
            },
            {
              "name": "file",
              "in": "query",
              "value": "$inputs.file"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body",
            "url": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.host-screenshot-on-s3.outputs.id",
        "status": "$steps.host-screenshot-on-s3.outputs.status",
        "url": "$steps.host-screenshot-on-s3.outputs.url",
        "instance_id": "$steps.request-screenshot-for-s3-hosting.outputs.instance_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "check-account-balance-before-screenshot",
      "summary": "Checks the user's account balance (credits and free screenshots) before attempting to request a potentially costly screenshot, allowing for a pre-flight check.",
      "description": "Checks the user's account balance (credits and free screenshots) before attempting to request a potentially costly screenshot, allowing for a pre-flight check.",
      "inputs": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "instance_id": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "cache": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "flash_delay": {
            "type": "string"
          },
          "screen_width": {
            "type": "string"
          },
          "screen_height": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "referer": {
            "type": "string"
          },
          "post_data": {
            "type": "string"
          },
          "cookie": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "max_wait": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "shots": {
            "type": "string"
          },
          "shot_interval": {
            "type": "string"
          },
          "hosting": {
            "type": "string"
          },
          "hosting_height": {
            "type": "string"
          },
          "hosting_width": {
            "type": "string"
          },
          "hosting_scale": {
            "type": "string"
          },
          "hosting_bucket": {
            "type": "string"
          },
          "hosting_file": {
            "type": "string"
          },
          "hosting_headers": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-account-balance",
          "description": "Retrieve current account information including balance and free screenshot count.",
          "operationId": "GetAccountInfo",
          "parameters": [
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "balance": "$response.body",
            "free_screenshots_left": "$response.body"
          }
        },
        {
          "stepId": "conditionally-request-screenshot",
          "description": "Submit a screenshot request (only if client-side logic determines sufficient balance/quota exists based on the previous step).",
          "operationId": "CreateScreenshot",
          "parameters": [
            {
              "name": "url",
              "in": "query",
              "value": "$inputs.url"
            },
            {
              "name": "instance_id",
              "in": "query",
              "value": "$inputs.instance_id"
            },
            {
              "name": "size",
              "in": "query",
              "value": "$inputs.size"
            },
            {
              "name": "cache",
              "in": "query",
              "value": "$inputs.cache"
            },
            {
              "name": "delay",
              "in": "query",
              "value": "$inputs.delay"
            },
            {
              "name": "flash_delay",
              "in": "query",
              "value": "$inputs.flash_delay"
            },
            {
              "name": "screen_width",
              "in": "query",
              "value": "$inputs.screen_width"
            },
            {
              "name": "screen_height",
              "in": "query",
              "value": "$inputs.screen_height"
            },
            {
              "name": "priority",
              "in": "query",
              "value": "$inputs.priority"
            },
            {
              "name": "referer",
              "in": "query",
              "value": "$inputs.referer"
            },
            {
              "name": "post_data",
              "in": "query",
              "value": "$inputs.post_data"
            },
            {
              "name": "cookie",
              "in": "query",
              "value": "$inputs.cookie"
            },
            {
              "name": "script",
              "in": "query",
              "value": "$inputs.script"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "html",
              "in": "query",
              "value": "$inputs.html"
            },
            {
              "name": "max_wait",
              "in": "query",
              "value": "$inputs.max_wait"
            },
            {
              "name": "headers",
              "in": "query",
              "value": "$inputs.headers"
            },
            {
              "name": "shots",
              "in": "query",
              "value": "$inputs.shots"
            },
            {
              "name": "shot_interval",
              "in": "query",
              "value": "$inputs.shot_interval"
            },
            {
              "name": "hosting",
              "in": "query",
              "value": "$inputs.hosting"
            },
            {
              "name": "hosting_height",
              "in": "query",
              "value": "$inputs.hosting_height"
            },
            {
              "name": "hosting_width",
              "in": "query",
              "value": "$inputs.hosting_width"
            },
            {
              "name": "hosting_scale",
              "in": "query",
              "value": "$inputs.hosting_scale"
            },
            {
              "name": "hosting_bucket",
              "in": "query",
              "value": "$inputs.hosting_bucket"
            },
            {
              "name": "hosting_file",
              "in": "query",
              "value": "$inputs.hosting_file"
            },
            {
              "name": "hosting_headers",
              "in": "query",
              "value": "$inputs.hosting_headers"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body",
            "status": "$response.body"
          }
        }
      ],
      "outputs": {
        "balance": "$steps.get-account-balance.outputs.balance",
        "free_screenshots_left": "$steps.get-account-balance.outputs.free_screenshots_left",
        "id": "$steps.conditionally-request-screenshot.outputs.id",
        "status": "$steps.conditionally-request-screenshot.outputs.status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}